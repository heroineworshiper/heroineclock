

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 23 07:17:34 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F14K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataBANK0
    53  003EDE                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _temp_table
    57  003EDE  FF38               	dw	65336
    58  003EE0  F16C               	dw	61804
    59  003EE2  FF6A               	dw	65386
    60  003EE4  ED3E               	dw	60734
    61  003EE6  FF9C               	dw	65436
    62  003EE8  E830               	dw	59440
    63  003EEA  FFCE               	dw	65486
    64  003EEC  E22E               	dw	57902
    65  003EEE  0000               	dw	0
    66  003EF0  DB2D               	dw	56109
    67  003EF2  0032               	dw	50
    68  003EF4  D32A               	dw	54058
    69  003EF6  0064               	dw	100
    70  003EF8  CA30               	dw	51760
    71  003EFA  0096               	dw	150
    72  003EFC  C051               	dw	49233
    73  003EFE  00C8               	dw	200
    74  003F00  B5B3               	dw	46515
    75  003F02  00FA               	dw	250
    76  003F04  AA80               	dw	43648
    77  003F06  012C               	dw	300
    78  003F08  9EE9               	dw	40681
    79  003F0A  015E               	dw	350
    80  003F0C  9329               	dw	37673
    81  003F0E  0190               	dw	400
    82  003F10  8774               	dw	34676
    83  003F12  01C2               	dw	450
    84  003F14  7BFC               	dw	31740
    85  003F16  01F4               	dw	500
    86  003F18  70EF               	dw	28911
    87  003F1A  0226               	dw	550
    88  003F1C  6670               	dw	26224
    89  003F1E  0258               	dw	600
    90  003F20  5C94               	dw	23700
    91  003F22  028A               	dw	650
    92  003F24  536F               	dw	21359
    93  003F26  02BC               	dw	700
    94  003F28  4B02               	dw	19202
    95  003F2A  02EE               	dw	750
    96  003F2C  4356               	dw	17238
    97  003F2E  0320               	dw	800
    98  003F30  3C5F               	dw	15455
    99  003F32  0352               	dw	850
   100  003F34  3616               	dw	13846
   101  003F36  0384               	dw	900
   102  003F38  3076               	dw	12406
   103  003F3A  03B6               	dw	950
   104  003F3C  2B67               	dw	11111
   105  003F3E  03E8               	dw	1000
   106  003F40  26F0               	dw	9968
   107  003F42  041A               	dw	1050
   108  003F44  22EE               	dw	8942
   109  003F46  044C               	dw	1100
   110  003F48  1F5E               	dw	8030
   111                           
   112                           	psect	nvCOMRAM
   113  000017                     __pnvCOMRAM:
   114                           	opt stack 0
   115  000017                     _volts:
   116                           	opt stack 0
   117  000017                     	ds	1
   118  000018                     _degrees:
   119                           	opt stack 0
   120  000018                     	ds	1
   121  0000                     _TMR0	set	4054
   122  0000                     _T0CON	set	4053
   123  0000                     _ANSELH	set	3967
   124  0000                     _ANSEL	set	3966
   125  0000                     _OSCCON	set	4051
   126  0000                     _INTCONbits	set	4082
   127  0000                     _TRISCbits	set	3988
   128  0000                     _LATCbits	set	3979
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  003E18                     __pcinit:
   134                           	opt stack 0
   135  003E18                     start_initialization:
   136                           	opt stack 0
   137  003E18                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Initialize objects allocated to BANK0 (108 bytes)
   141                           ; load TBLPTR registers with __pidataBANK0
   142  003E18  0EDE               	movlw	low __pidataBANK0
   143  003E1A  6EF6               	movwf	tblptrl,c
   144  003E1C  0E3E               	movlw	high __pidataBANK0
   145  003E1E  6EF7               	movwf	tblptrh,c
   146  003E20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   147  003E22  6EF8               	movwf	tblptru,c
   148  003E24  EE00  F060         	lfsr	0,__pdataBANK0
   149  003E28  EE10 F06C          	lfsr	1,108
   150  003E2C                     copy_data0:
   151  003E2C  0009               	tblrd		*+
   152  003E2E  CFF5 FFEE          	movff	tablat,postinc0
   153  003E32  50E5               	movf	postdec1,w,c
   154  003E34  50E1               	movf	fsr1l,w,c
   155  003E36  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (18 bytes)
   158  003E38  EE00  F001         	lfsr	0,__pbssCOMRAM
   159  003E3C  0E12               	movlw	18
   160  003E3E                     clear_0:
   161  003E3E  6AEE               	clrf	postinc0,c
   162  003E40  06E8               	decf	wreg,f,c
   163  003E42  E1FD               	bnz	clear_0
   164  003E44                     end_of_initialization:
   165                           	opt stack 0
   166  003E44                     __end_of__initialization:
   167                           	opt stack 0
   168  003E44  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  003E46  6EF8               	movwf	tblptru,c
   170  003E48  0100               	movlb	0
   171  003E4A  EF45  F01F         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	bssCOMRAM
   182  000001                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000001                     _adc_count:
   185                           	opt stack 0
   186  000001                     	ds	4
   187  000005                     _v_accum:
   188                           	opt stack 0
   189  000005                     	ds	4
   190  000009                     _t_accum:
   191                           	opt stack 0
   192  000009                     	ds	4
   193  00000D                     _serial_function:
   194                           	opt stack 0
   195  00000D                     	ds	2
   196  00000F                     _mane_counter:
   197                           	opt stack 0
   198  00000F                     	ds	2
   199  000011                     _serial_c:
   200                           	opt stack 0
   201  000011                     	ds	1
   202  000012                     _flags:
   203                           	opt stack 0
   204  000012                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	dataBANK0
   215  000060                     __pdataBANK0:
   216                           	opt stack 0
   217  000060                     _temp_table:
   218                           	opt stack 0
   219  000060                     	ds	108
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	cstackCOMRAM
   230  000013                     __pcstackCOMRAM:
   231                           	opt stack 0
   232  000013                     write_radio@data:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x0
   236  000013                     	ds	2
   237  000015                     ??_write_radio:
   238                           
   239                           ; 1 bytes @ 0x2
   240  000015                     	ds	1
   241  000016                     write_radio@i:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x3
   245  000016                     	ds	1
   246  000017                     tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           postdec1	equ	0xFE5
   253                           fsr1l	equ	0xFE1
   254                           
   255                           ; 1 bytes @ 0x4
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 489 in file "mane.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   275 ;;      Params:         0       0       0       0
   276 ;;      Locals:         0       0       0       0
   277 ;;      Temps:          0       0       0       0
   278 ;;      Totals:         0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels required when called:    2
   281 ;; This function calls:
   282 ;;		_radio_on
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text0
   289  003E8A                     __ptext0:
   290                           	opt stack 0
   291  003E8A                     _main:
   292                           	opt stack 29
   293                           
   294                           ;mane.c: 495: OSCCON = 0b10000000;
   295                           
   296                           ;incstack = 0
   297  003E8A  0E80               	movlw	128
   298  003E8C  6ED3               	movwf	4051,c	;volatile
   299                           
   300                           ;mane.c: 505: LATCbits.LATC2 = 0;
   301  003E8E  948B               	bcf	3979,2,c	;volatile
   302                           
   303                           ;mane.c: 506: TRISCbits.TRISC2 = 0;
   304  003E90  9494               	bcf	3988,2,c	;volatile
   305                           
   306                           ;mane.c: 508: mane_counter = 0;
   307  003E92  0E00               	movlw	0
   308  003E94  6E10               	movwf	_mane_counter+1,c
   309  003E96  0E00               	movlw	0
   310  003E98  6E0F               	movwf	_mane_counter,c
   311                           
   312                           ;mane.c: 509: flags.value = 0;
   313  003E9A  0E00               	movlw	0
   314  003E9C  6E12               	movwf	_flags,c
   315                           
   316                           ;mane.c: 511: t_accum = 0;
   317  003E9E  0E00               	movlw	0
   318  003EA0  6E09               	movwf	_t_accum,c
   319  003EA2  0E00               	movlw	0
   320  003EA4  6E0A               	movwf	_t_accum+1,c
   321  003EA6  0E00               	movlw	0
   322  003EA8  6E0B               	movwf	_t_accum+2,c
   323  003EAA  0E00               	movlw	0
   324  003EAC  6E0C               	movwf	_t_accum+3,c
   325                           
   326                           ;mane.c: 512: adc_count = 0;
   327  003EAE  0E00               	movlw	0
   328  003EB0  6E01               	movwf	_adc_count,c
   329  003EB2  0E00               	movlw	0
   330  003EB4  6E02               	movwf	_adc_count+1,c
   331  003EB6  0E00               	movlw	0
   332  003EB8  6E03               	movwf	_adc_count+2,c
   333  003EBA  0E00               	movlw	0
   334  003EBC  6E04               	movwf	_adc_count+3,c
   335                           
   336                           ;mane.c: 513: degrees = 0xff;
   337  003EBE  6818               	setf	_degrees,c
   338                           
   339                           ;mane.c: 514: volts = 0xff;
   340  003EC0  6817               	setf	_volts,c
   341                           
   342                           ;mane.c: 518: ANSEL = 0b00000000;
   343  003EC2  0E00               	movlw	0
   344  003EC4  6E7E               	movwf	3966,c	;volatile
   345                           
   346                           ;mane.c: 519: ANSELH = 0b00000000;
   347  003EC6  0E00               	movlw	0
   348  003EC8  6E7F               	movwf	3967,c	;volatile
   349                           
   350                           ;mane.c: 556: T0CON = 0b10001000;
   351  003ECA  0E88               	movlw	136
   352  003ECC  6ED5               	movwf	4053,c	;volatile
   353                           
   354                           ;mane.c: 557: TMR0 = 0xe000;
   355  003ECE  0EE0               	movlw	224
   356  003ED0  6ED7               	movwf	4055,c	;volatile
   357  003ED2  0E00               	movlw	0
   358  003ED4  6ED6               	movwf	4054,c	;volatile
   359                           
   360                           ;mane.c: 558: radio_on();
   361  003ED6  ECA5  F01F         	call	_radio_on	;wreg free
   362  003EDA                     l52:
   363  003EDA  0004               	clrwdt		;# 
   364  003EDC  D7FE               	goto	l52
   365  003EDE                     __end_of_main:
   366                           	opt stack 0
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           
   376 ;; *************** function _radio_on *****************
   377 ;; Defined at:
   378 ;;		line 325 in file "mane.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   392 ;;      Params:         0       0       0       0
   393 ;;      Locals:         0       0       0       0
   394 ;;      Temps:          0       0       0       0
   395 ;;      Totals:         0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; Hardware stack levels required when called:    1
   399 ;; This function calls:
   400 ;;		_write_radio
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text1
   407  003F4A                     __ptext1:
   408                           	opt stack 0
   409  003F4A                     _radio_on:
   410                           	opt stack 29
   411                           
   412                           ;mane.c: 328: LATCbits.LATC3 = 1;
   413                           
   414                           ;incstack = 0
   415  003F4A  868B               	bsf	3979,3,c	;volatile
   416                           
   417                           ;mane.c: 329: TRISCbits.TRISC3 = 0;
   418  003F4C  9694               	bcf	3988,3,c	;volatile
   419                           
   420                           ;mane.c: 331: LATCbits.LATC7 = 0;
   421  003F4E  9E8B               	bcf	3979,7,c	;volatile
   422                           
   423                           ;mane.c: 332: TRISCbits.TRISC7 = 0;
   424  003F50  9E94               	bcf	3988,7,c	;volatile
   425                           
   426                           ;mane.c: 334: LATCbits.LATC6 = 0;
   427  003F52  9C8B               	bcf	3979,6,c	;volatile
   428                           
   429                           ;mane.c: 335: TRISCbits.TRISC6 = 0;
   430  003F54  9C94               	bcf	3988,6,c	;volatile
   431                           
   432                           ;mane.c: 338: write_radio(0xCA81);
   433  003F56  0ECA               	movlw	202
   434  003F58  6E14               	movwf	write_radio@data+1,c
   435  003F5A  0E81               	movlw	129
   436  003F5C  6E13               	movwf	write_radio@data,c
   437  003F5E  EC27  F01F         	call	_write_radio	;wreg free
   438                           
   439                           ;mane.c: 340: write_radio(0xCA81 | 0x0002);
   440  003F62  0ECA               	movlw	202
   441  003F64  6E14               	movwf	write_radio@data+1,c
   442  003F66  0E83               	movlw	131
   443  003F68  6E13               	movwf	write_radio@data,c
   444  003F6A  EC27  F01F         	call	_write_radio	;wreg free
   445                           
   446                           ;mane.c: 341: write_radio((0x8000 | 0x0003 | 0x0030));
   447  003F6E  0E80               	movlw	128
   448  003F70  6E14               	movwf	write_radio@data+1,c
   449  003F72  0E33               	movlw	51
   450  003F74  6E13               	movwf	write_radio@data,c
   451  003F76  EC27  F01F         	call	_write_radio	;wreg free
   452                           
   453                           ;mane.c: 342: write_radio(0xc4d7);
   454  003F7A  0EC4               	movlw	196
   455  003F7C  6E14               	movwf	write_radio@data+1,c
   456  003F7E  0ED7               	movlw	215
   457  003F80  6E13               	movwf	write_radio@data,c
   458  003F82  EC27  F01F         	call	_write_radio	;wreg free
   459                           
   460                           ;mane.c: 343: write_radio((0xA000 | 3903));
   461  003F86  0EAF               	movlw	175
   462  003F88  6E14               	movwf	write_radio@data+1,c
   463  003F8A  0E3F               	movlw	63
   464  003F8C  6E13               	movwf	write_radio@data,c
   465  003F8E  EC27  F01F         	call	_write_radio	;wreg free
   466                           
   467                           ;mane.c: 344: write_radio((0xC600 | 0 | 3));
   468  003F92  0EC6               	movlw	198
   469  003F94  6E14               	movwf	write_radio@data+1,c
   470  003F96  0E03               	movlw	3
   471  003F98  6E13               	movwf	write_radio@data,c
   472  003F9A  EC27  F01F         	call	_write_radio	;wreg free
   473                           
   474                           ;mane.c: 345: write_radio(0x8201);
   475  003F9E  0E82               	movlw	130
   476  003FA0  6E14               	movwf	write_radio@data+1,c
   477  003FA2  0E01               	movlw	1
   478  003FA4  6E13               	movwf	write_radio@data,c
   479  003FA6  EC27  F01F         	call	_write_radio	;wreg free
   480                           
   481                           ;mane.c: 346: write_radio(0x9420);
   482  003FAA  0E94               	movlw	148
   483  003FAC  6E14               	movwf	write_radio@data+1,c
   484  003FAE  0E20               	movlw	32
   485  003FB0  6E13               	movwf	write_radio@data,c
   486  003FB2  EC27  F01F         	call	_write_radio	;wreg free
   487                           
   488                           ;mane.c: 347: write_radio(0x98f0);
   489  003FB6  0E98               	movlw	152
   490  003FB8  6E14               	movwf	write_radio@data+1,c
   491  003FBA  0EF0               	movlw	240
   492  003FBC  6E13               	movwf	write_radio@data,c
   493  003FBE  EC27  F01F         	call	_write_radio	;wreg free
   494                           
   495                           ;mane.c: 348: write_radio(0xc23c);
   496  003FC2  0EC2               	movlw	194
   497  003FC4  6E14               	movwf	write_radio@data+1,c
   498  003FC6  0E3C               	movlw	60
   499  003FC8  6E13               	movwf	write_radio@data,c
   500  003FCA  EC27  F01F         	call	_write_radio	;wreg free
   501                           
   502                           ;mane.c: 350: write_radio(0x8201 | 0x0020);
   503  003FCE  0E82               	movlw	130
   504  003FD0  6E14               	movwf	write_radio@data+1,c
   505  003FD2  0E21               	movlw	33
   506  003FD4  6E13               	movwf	write_radio@data,c
   507  003FD6  EC27  F01F         	call	_write_radio	;wreg free
   508                           
   509                           ;mane.c: 353: LATCbits.LATC2 = 1;
   510  003FDA  848B               	bsf	3979,2,c	;volatile
   511                           
   512                           ;mane.c: 354: INTCONbits.TMR0IF = 0;
   513  003FDC  94F2               	bcf	intcon,2,c	;volatile
   514                           
   515                           ;mane.c: 355: TMR0 = -(32768 / 4 / 100);
   516  003FDE  0EFF               	movlw	255
   517  003FE0  6ED7               	movwf	4055,c	;volatile
   518  003FE2  0EAF               	movlw	175
   519  003FE4  6ED6               	movwf	4054,c	;volatile
   520                           
   521                           ;mane.c: 356: while(!INTCONbits.TMR0IF)
   522  003FE6  D001               	goto	l44
   523  003FE8                     l45:
   524  003FE8  0004               	clrwdt		;# 
   525  003FEA                     l44:
   526  003FEA  A4F2               	btfss	intcon,2,c	;volatile
   527  003FEC  D7FD               	goto	l45
   528                           
   529                           ;mane.c: 359: }
   530                           ;mane.c: 360: INTCONbits.TMR0IF = 0;
   531  003FEE  94F2               	bcf	intcon,2,c	;volatile
   532                           
   533                           ;mane.c: 361: LATCbits.LATC2 = 0;
   534  003FF0  948B               	bcf	3979,2,c	;volatile
   535                           
   536                           ;mane.c: 365: write_radio(0x8201 | 0x0080);
   537  003FF2  0E82               	movlw	130
   538  003FF4  6E14               	movwf	write_radio@data+1,c
   539  003FF6  0E81               	movlw	129
   540  003FF8  6E13               	movwf	write_radio@data,c
   541  003FFA  EC27  F01F         	call	_write_radio	;wreg free
   542  003FFE  0012               	return		;funcret
   543  004000                     __end_of_radio_on:
   544                           	opt stack 0
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           intcon	equ	0xFF2
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555 ;; *************** function _write_radio *****************
   556 ;; Defined at:
   557 ;;		line 309 in file "mane.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  data            2    0[COMRAM] unsigned int 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  i               1    3[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   571 ;;      Params:         2       0       0       0
   572 ;;      Locals:         1       0       0       0
   573 ;;      Temps:          1       0       0       0
   574 ;;      Totals:         4       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_radio_on
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585  003E4E                     __ptext2:
   586                           	opt stack 0
   587  003E4E                     _write_radio:
   588                           	opt stack 29
   589                           
   590                           ;incstack = 0
   591  003E4E  0004               	clrwdt		;# 
   592                           
   593                           ;mane.c: 313: LATCbits.LATC3 = 0;
   594  003E50  968B               	bcf	3979,3,c	;volatile
   595                           
   596                           ;mane.c: 314: uint8_t i;
   597                           ;mane.c: 315: for(i = 0; i < 16; i++)
   598  003E52  0E00               	movlw	0
   599  003E54  6E16               	movwf	write_radio@i,c
   600  003E56                     l723:
   601  003E56  0E0F               	movlw	15
   602  003E58  6416               	cpfsgt	write_radio@i,c
   603  003E5A  D001               	goto	l39
   604  003E5C  D014               	goto	u90
   605  003E5E                     l39:
   606                           
   607                           ;mane.c: 316: {
   608                           ;mane.c: 317: LATCbits.LATC7 = (uint8_t)((data & 0x8000) ? 1 : 0);
   609  003E5E  AE14               	btfss	write_radio@data+1,7,c
   610  003E60  D003               	goto	u70
   611  003E62  6A15               	clrf	??_write_radio& (0+255),c
   612  003E64  2A15               	incf	??_write_radio& (0+255),f,c
   613  003E66  D001               	goto	u88
   614  003E68                     u70:
   615  003E68  6A15               	clrf	??_write_radio& (0+255),c
   616  003E6A                     u88:
   617  003E6A  3215               	rrcf	??_write_radio,f,c
   618  003E6C  3215               	rrcf	??_write_radio,f,c
   619  003E6E  508B               	movf	3979,w,c	;volatile
   620  003E70  1815               	xorwf	??_write_radio,w,c
   621  003E72  0B7F               	andlw	-129
   622  003E74  1815               	xorwf	??_write_radio,w,c
   623  003E76  6E8B               	movwf	3979,c	;volatile
   624                           
   625                           ;mane.c: 318: data <<= 1;
   626  003E78  90D8               	bcf	status,0,c
   627  003E7A  3613               	rlcf	write_radio@data,f,c
   628  003E7C  3614               	rlcf	write_radio@data+1,f,c
   629                           
   630                           ;mane.c: 319: LATCbits.LATC6 = 1;
   631  003E7E  8C8B               	bsf	3979,6,c	;volatile
   632                           
   633                           ;mane.c: 320: LATCbits.LATC6 = 0;
   634  003E80  9C8B               	bcf	3979,6,c	;volatile
   635  003E82  2A16               	incf	write_radio@i,f,c
   636  003E84  D7E8               	goto	l723
   637  003E86                     u90:
   638                           
   639                           ;mane.c: 321: }
   640                           ;mane.c: 322: LATCbits.LATC3 = 1;
   641  003E86  868B               	bsf	3979,3,c	;volatile
   642  003E88  0012               	return		;funcret
   643  003E8A                     __end_of_write_radio:
   644                           	opt stack 0
   645  0000                     tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           intcon	equ	0xFF2
   650                           postinc0	equ	0xFEE
   651                           wreg	equ	0xFE8
   652                           postdec1	equ	0xFE5
   653                           fsr1l	equ	0xFE1
   654                           status	equ	0xFD8
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           intcon	equ	0xFF2
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           status	equ	0xFD8
   665                           
   666                           	psect	rparam
   667  0000                     tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           intcon	equ	0xFF2
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           postdec1	equ	0xFE5
   675                           fsr1l	equ	0xFE1
   676                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        108
    BSS         18
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      24
    BANK0           160      0     108
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    serial_function	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _radio_on->_write_radio

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     981
                           _radio_on
 ---------------------------------------------------------------------------------
 (1) _radio_on                                             0     0      0     981
                        _write_radio
 ---------------------------------------------------------------------------------
 (2) _write_radio                                          4     2      2     981
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _radio_on
     _write_radio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      6C       4       67.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      18       1       25.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84       8        0.0%
DATA                 0      0      84      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 23 07:17:34 2020

                     l44 3FEA                       l52 3EDA                       l45 3FE8  
                     l39 3E5E                       u70 3E68                       u90 3E86  
                     u88 3E6A                      l723 3E56             __CFG_BORV$22 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     _TMR0 000FD6  
                   _main 3E8A                     fsr1l 000FE1                     start 0000  
          __CFG_FOSC$IRC 000000             ___param_bank 000000                    ?_main 0013  
                  _ANSEL 000F7E                    _T0CON 000FD5            __CFG_WDTEN$ON 000000  
            _write_radio 3E4E                    _flags 0012                    _volts 0017  
                  tablat 000FF5                    status 000FD8          __initialization 3E18  
           __end_of_main 3EDE                   ??_main 0017            __activetblptr 000002  
         __CFG_PLLEN$OFF 000000                   _ANSELH 000F7F                   _OSCCON 000FD3  
                 clear_0 3E3E         __end_of_radio_on 4000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          write_radio@data 0013  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 3E44  
          ___rparam_used 000001           __pcstackCOMRAM 0013             __pidataBANK0 3EDE  
             __pnvCOMRAM 0017             ?_write_radio 0013                ?_radio_on 0013  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 3E18                  _degrees 0018                  __ramtop 0300  
                __ptext0 3E8A                  __ptext1 3F4A                  __ptext2 3E4E  
                _t_accum 0009                  _v_accum 0005     end_of_initialization 3E44  
          __Lmediumconst 0000               ??_radio_on 0017                  postdec1 000FE5  
                postinc0 000FEE               _temp_table 0060                _TRISCbits 000F94  
           write_radio@i 0016             _mane_counter 000F      start_initialization 3E18  
   __size_of_write_radio 003C              __pdataBANK0 0060              __pbssCOMRAM 0001  
              _adc_count 0001        __size_of_radio_on 00B6                 _LATCbits 000F8B  
       __CFG_WDTPS$32768 000000                copy_data0 3E2C                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000            __size_of_main 0054  
               _radio_on 3F4A                 _serial_c 0011               _INTCONbits 000FF2  
          ??_write_radio 0015          _serial_function 000D      __end_of_write_radio 3E8A  
