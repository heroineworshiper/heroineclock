gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ; HeroineClock master program for 16f877
               00002 ; (C) 2004 Heroine Virtual Ltd.
               00003 
               00004 
               00005 
               00006 
               00007 
               00008 
               00009 include "p16f877a.inc"
               00001         LIST
               00002 ; P16F877A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
               00398         LIST
               00010 include "clock2vars.inc"
               00001 
               00002 ; RB4 display clock
               00003 ; RB5 display data
               00004 ; RA1 display enable
               00005 ; RA0 thermometer
               00006 ; RA2 thermometer low
               00007 ; RA3 thermometer high
               00008 ; RA7 alarm enable
               00009 ; RD6 debounced button
               00010 ; RD5 debounced button
               00011 ; RD4 debounced button
               00012 ; RD3 debounced button
               00013 ; RD1 debounced button
               00014 ; RB0 speaker
               00015 
               00016 ; unused:
               00017 ; 50
               00018 
               00019 ; 4 byte LED bitmask
  00000020     00020 DISPLAY_BITMASK0 = H'20'
  00000021     00021 DISPLAY_BITMASK1 = H'21'
  00000022     00022 DISPLAY_BITMASK2 = H'22'
  00000023     00023 DISPLAY_BITMASK3 = H'23'
               00024 
               00025 ; if 0 is leading
  00000044     00026 DISPLAY_0 = H'44'
               00027 
               00028 ; counter for shifting loop
  00000024     00029 COUNTER = H'24'
               00030 
               00031 ; time has been set
  00000047     00032 IS_SET = H'47'
               00033 
               00034 ; current time
  00000025     00035 CURRENT_HOUR = H'25'                    ; 1 - 12
  00000026     00036 CURRENT_MINUTE = H'26'                  ; 0 - 59
  0000003C     00037 CURRENT_FRACSECONDH = H'3c'              ; 0 - total fracseconds per minute
  0000003D     00038 CURRENT_FRACSECONDL = H'3d'              ; 0 - total fracseconds per minute
  00000028     00039 CURRENT_AMPM = H'28'                    ; 0 - am  1 - pm
  00000029     00040 CURRENT_DOTS = H'29'                    ; 0 - dots off 1 - dots on
               00041 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00042 ; alarm time
  0000002A     00043 ALARM_HOUR = H'2a'
  0000002B     00044 ALARM_MINUTE = H'2b'
  0000002D     00045 ALARM_AMPM = H'2d'
  0000002E     00046 ALARM_ENABLED = H'2e'                   ; 0 - 1
  00000034     00047 OLD_ALARM_ENABLED = H'34'
               00048 
               00049 ; ones and tens result and input
  0000002F     00050 ONES = H'2f'
  00000030     00051 TENS = H'30'
  00000043     00052 HUNDREDS = H'43'
               00053 
               00054 
               00055 ; number of counter overflows per TIMER_SCALE2
  00000C35     00056 TIMER_SCALE1 = D'3125'
               00057 ;TIMER_SCALE1 = D'600'
               00058 
               00059 
               00060 ; number of TIMER_SCALE1 iterations per fractional second
  00000019     00061 TIMER_SCALE2 = D'25'
               00062 ;TIMER_SCALE2 = D'10'
               00063 
               00064 
               00065 ; scale2 counter
  00000031     00066 TIMER_COUNTER = H'31'
               00067 
               00068 
               00069 ; total fracseconds per minute
  000001E0     00070 FRACSECONDS = D'480'
               00071 
               00072 ; switch status masks
  00000032     00073 SWITCH_STATUS = H'32'                   ; old switch status
  00000033     00074 SWITCH_STATUS_NEW = H'33'               ; new switch status
               00075 
               00076 ; switch status bits
               00077 ; SWITCH_MINUTE and SWITCH_ALARM_SET are inverted
  00000007     00078 SWITCH_ALARM_ENABLE = D'7'
  00000005     00079 SWITCH_HOUR = D'5'
  00000001     00080 SWITCH_MINUTE = D'1'
  00000003     00081 SWITCH_TIME_SET = D'3'
  00000004     00082 SWITCH_ALARM_SET = D'4'
  00000006     00083 SWITCH_MODE = D'6'
               00084 
               00085 
  00000035     00086 SWITCH0_ACCUM = H'35'                   ; accumulators for debouncing
  00000036     00087 SWITCH1_ACCUM = H'36'
  00000037     00088 SWITCH2_ACCUM = H'37'
  00000038     00089 SWITCH3_ACCUM = H'38'
  00000039     00090 SWITCH4_ACCUM = H'39'
  0000003A     00091 SWITCH5_ACCUM = H'3a'
               00092 
  0000004C     00093 SWITCH_COUNTER = H'4c'                  ; count until next switch sample
  00000040     00094 SWITCH_SAMPLERATE = H'40'               ; number of get_switches before next sample
  00000065     00095 SWITCH_COUNTDOWNH = H'65'    ; count down to warm up switch accumulators
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000066     00096 SWITCH_COUNTDOWNL = H'66'    ; count down to warm up switch accumulators
               00097 
               00098 ; arguments for the debounce function
  0000003B     00099 DEBOUNCE_MASK = H'3b'                   ; mask with relevant bit
               00100 
               00101 
               00102 ; current operation
  0000007E     00103 OPERATION = H'7e'
               00104 ; previous operation for escaping set modes
  0000002C     00105 PREV_OPERATION = h'2c'
               00106 
               00107 ; current operation constants
  00000000     00108 OPERATION_CURRENT_TIME = D'0'            ; current time
  00000001     00109 OPERATION_SET_TIME = D'1'                ; set time sleep
  00000004     00110 OPERATION_SET_ALARM = D'4'                                ; set alarm sleep
  00000007     00111 OPERATION_THERMOMETER = D'7'                      ; thermometer
  00000008     00112 OPERATION_TEST = D'8'                             ; led test
  00000009     00113 OPERATION_AUTO = D'9'         ; cycle between time and temp after AUTO_DELAY
               00114 
  0000004D     00115 NEED_UPDATE_DISPLAY = H'4d'    ; update display this frac second
               00116 
               00117 
               00118 ; sub operation
  0000007F     00119 SUBOPERATION = H'7f'
               00120 
               00121 ; sub operation constants
  00000000     00122 SUBOPERATION_NONE = D'0'             ; no operation
  00000001     00123 SUBOPERATION_SET_HOUR = D'1'             ; hour pressed
  00000002     00124 SUBOPERATION_SET_MINUTE = D'2'       ; minute pressed
  00000003     00125 SUBOPERATION_TIME = D'3'             ; time part of auto display
  00000004     00126 SUBOPERATION_TEMP = D'4'             ; temp part of auto display
               00127 
               00128 
               00129 ; number of frac seconds until next auto advance
  0000003E     00130 SUBOPERATION_COUNTER = H'3e'
               00131 
               00132 ; constants for delay
  00000008     00133 SUBOPERATION_DELAY1 = D'8'
  00000001     00134 SUBOPERATION_DELAY2 = D'1'
               00135 
               00136 ; countdown to next auto display
  00000027     00137 AUTO_COUNTER = H'27'
               00138 ; frac seconds in each auto display
  00000028     00139 AUTO_DURATION = D'40'
               00140 
               00141 ; A/D accumulation
  00000040     00142 THERMOMETER_INPUT = H'40'
               00143 ; number of samples remaining to average.  Must count down from 256
  00000048     00144 THERMOMETER_COUNTER = H'48'
               00145 ; precharge counter.  Counts down from THERMOMETER_PRECHARGE
  00000051     00146 THERMOMETER_COUNTER2 = H'51'
               00147 
  000000FF     00148 THERMOMETER_PRECHARGE = H'ff'
               00149 ; temperature result.  The highest 8 bits are taken as the average.
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000041     00150 THERMOMETER_VALUEL = H'41'
  00000042     00151 THERMOMETER_VALUEH = H'42'
               00152 
  0000004E     00153 ALARM_ON = H'4e'          ; alarm playing due to current time == alarm time
  00000054     00154 ALARM_PREVIEW = H'54'     ; alarm playing due to preview.  Ignore ALARM_ENABLED
               00155 
               00156 ; current note half period from memory in prescaled clock cycles
               00157 ; 13 : 8 - whole part of half period
               00158 ; 7 : 0 - fractional part of half period
  00000045     00159 ALARM_PERIODH = H'45'
  00000046     00160 ALARM_PERIODL = H'46'
               00161 
               00162 ; alarm note duration in half periods
               00163 ; decreased every half period
  00000049     00164 ALARM_DURATIONH = H'49'
  0000004F     00165 ALARM_DURATIONL = H'4f'
               00166 
               00167 ; value for timer 2 period to get 1000/second
  00000014     00168 NOTE_DURATION_TIMER = D'20'
               00169 
               00170 ; count down until alarm automatically stops in frac seconds
  00000052     00171 ALARM_TIMEOUT_COUNTERH = H'52'
  00000053     00172 ALARM_TIMEOUT_COUNTERL = H'53'
               00173 ; frac seconds until alarm times out.
  000001E0     00174 ALARM_TIMEOUT = D'480'
               00175 
               00176 ; start and end of current song for alarm
  00000055     00177 ALARM_SONGH = H'55'
  00000056     00178 ALARM_SONGL = H'56'
  00000057     00179 ALARM_ENDH = H'57'
  00000058     00180 ALARM_ENDL = H'58'
               00181 
               00182 ; pointer to current note excluding start of note table
               00183 ; units are words so increment 2 words per note
  0000004A     00184 ALARM_PTRH = H'4a'
  0000004B     00185 ALARM_PTRL = H'4b'
               00186 
               00187 
               00188 
  00000059     00189 BEEP_ON = H'59'              ; beep on due to button press
  0000005A     00190 BEEP_PERIODH = H'5a'         ; current note half period from memory in prescaled clock cycles
  0000005B     00191 BEEP_PERIODL = H'5b'
               00192 
  0000005C     00193 BEEP_DURATIONH = H'5c'       ; current note duration in half periods
  0000005D     00194 BEEP_DURATIONL = H'5d'
               00195 
  0000005E     00196 BEEP_SONGH = H'5e'           ; start and end of current song for beep
  0000005F     00197 BEEP_SONGL = H'5f'
  00000060     00198 BEEP_ENDH = H'60'
  00000061     00199 BEEP_ENDL = H'61'
               00200 
  00000062     00201 BEEP_PTRH = H'62'            ; pointer to current beep note excluding start of
  00000063     00202 BEEP_PTRL = H'63'            ; note table.  Units are words so increment 2 words 
               00203                              ; per note
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00204 
  00000064     00205 BEEP_DURATION_FLAG = H'64'   ; copy of capture/compare flag for note duration timer
               00206 
               00207 
               00208 
  00000000     00209 RESETVECTOR     = H'00'
  00000004     00210 INTVECTOR       = H'04'
               00211 
               00212 
               00213 
               00214 
               00215 
               00216 ; note half periods in prescaled CPU cycles
               00217 ; range is from * 4 to / 4 on all frequencies
  000004AA     00218 NOTE_C                  = D'1194'
  00000467     00219 NOTE_CS                 = D'1127'
  00000467     00220 NOTE_DF                 = D'1127'
  00000428     00221 NOTE_D                  = D'1064'
  000003EC     00222 NOTE_DS                 = D'1004'
  000003EC     00223 NOTE_EF                 = D'1004'
  000003B4     00224 NOTE_E                  = D'948'
  0000037F     00225 NOTE_F                  = D'895'
  0000034D     00226 NOTE_FS                 = D'845'
  0000031D     00227 NOTE_G                  = D'797'
  000002F0     00228 NOTE_GS                 = D'752'
  000002F0     00229 NOTE_AF                 = D'752'
  000002C6     00230 NOTE_A                  = D'710'
  0000029E     00231 NOTE_AS                 = D'670'
  0000029E     00232 NOTE_BF                 = D'670'
  00000279     00233 NOTE_B                  = D'633'
  00000255     00234 NOTE_C2                 = D'597'
  00001388     00235 REST            = D'5000'
               00011 include "clock2util.inc"
               00001 ; skip if the contents of the registers are equal
               00002 SKIP_EQUAL macro reg1, reg2
               00003         movf reg1, W
               00004         subwf reg2, W
               00005         btfss STATUS, Z
               00006         ENDM
               00007 
               00008 ; skip if the contents of reg == literal
               00009 SKIP_EQUAL2 macro reg, literal
               00010         movlw literal
               00011         subwf reg, W
               00012         btfss STATUS, Z
               00013         ENDM
               00014 
               00015 ; skip if the contents of reg == 0
               00016 SKIP_ZERO macro reg
               00017         movf reg, F
               00018         btfss STATUS, Z
               00019         ENDM
               00020 
               00021 ; skip if the contents of reg != 0
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00022 SKIP_NONZERO macro reg
               00023         movf reg, F
               00024         btfsc STATUS, Z
               00025         ENDM
               00026 
               00027 ; skip if contents of reg1 != contents of reg2
               00028 SKIP_NOTEQUAL macro reg1, reg2
               00029         movf reg2, W
               00030         subwf reg1, W
               00031         btfsc STATUS, Z
               00032         ENDM
               00033 
               00034 ; skip if contents of reg1 != literal
               00035 SKIP_NOTEQUAL2 macro reg1, literal
               00036         movlw literal
               00037         subwf reg1, W
               00038         btfsc STATUS, Z
               00039         ENDM
               00040 
               00041 ; skip if contents of reg >= literal
               00042 SKIP_GREATEREQUAL macro reg, literal
               00043         movlw literal
               00044         subwf reg, W
               00045         btfss STATUS, C
               00046         ENDM
               00047 
               00048 ; skip if contents of reg < literal
               00049 SKIP_LESS macro reg, literal
               00050         movlw literal
               00051         subwf reg, W
               00052         btfsc STATUS, C
               00053         ENDM
               00054 
               00055 ; debounce a switch
               00056 ; SWITCH_STATUS_NEW is overwritten with debounced bits
               00057 DEBOUNCE macro bitmask, accumulator
               00058         movlw bitmask
               00059         movwf DEBOUNCE_MASK
               00060         movlw accumulator
               00061         call debounce
               00062         ENDM
               00063 
               00064 SET_REGISTER macro reg, literal
               00065         movlw literal
               00066         movwf reg
               00067         ENDM
               00068 
               00069 ; copy value of src register to dst register
               00070 COPY_REGISTER macro dst, src
               00071         movf src, W
               00072         movwf dst
               00073         ENDM
               00074 
               00075 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00012 
0000           00013         ORG RESETVECTOR                     ; jump to start on reset
0000 2805      00014         goto start
               00015 
0004           00016         ORG INTVECTOR                       ; jump to interrupt handler on interrupt
0004 2C62      00017         goto interrupt
               00018 
               00019 
               00020 
               00021 
               00022 
               00023 
0005           00024 start:
0005 1283 1303 00025         BANKSEL PORTA
0007 0185      00026         clrf PORTA
0008 0186      00027         clrf PORTB
0009 30FF      00028         movlw H'ff'
000A 00B2      00029         movwf SWITCH_STATUS
000B 01B5      00030         clrf SWITCH0_ACCUM
000C 01B6      00031         clrf SWITCH1_ACCUM
000D 01B7      00032         clrf SWITCH2_ACCUM
000E 01B8      00033         clrf SWITCH3_ACCUM
000F 01B9      00034         clrf SWITCH4_ACCUM
0010 01E4      00035         clrf BEEP_DURATION_FLAG
               00036 
0011 1683 1303 00037         BANKSEL TRISA                       ; select register bank 1
               00038 
0013 30CE      00039         movlw B'11001110'                   ; set led register pins to output
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0014 0086      00040         movwf TRISB                         ; move accumulator to register
               00041 
0015 30FD      00042         movlw B'11111101'                   ; set display enable to output
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0016 0085      00043         movwf TRISA
               00044 
               00045 
               00046 ; set default variables
0017 1283 1303 00047         BANKSEL OPERATION
0019 3000      00048         movlw OPERATION_CURRENT_TIME
               00049 ;       movlw OPERATION_TEST
001A 00FE      00050         movwf OPERATION  
               00051 
001B 01FF      00052         clrf SUBOPERATION
001C 300C      00053         movlw D'12'
001D 00A5      00054         movwf CURRENT_HOUR
001E 3000      00055         movlw D'0'
001F 00A6      00056         movwf CURRENT_MINUTE
0020 3000      00057         movlw D'0'
0021 00BC      00058         movwf CURRENT_FRACSECONDH
0022 00BD      00059         movwf CURRENT_FRACSECONDL
0023 3000      00060         movlw D'0'
0024 00A8      00061         movwf CURRENT_AMPM
0025 3001      00062         movlw D'1'
0026 00A9      00063         movwf CURRENT_DOTS
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0027 01CE      00064         clrf ALARM_ON
0028 01D4      00065         clrf ALARM_PREVIEW
               00066 
0029 300C      00067         movlw D'12'
002A 00AA      00068         movwf ALARM_HOUR
002B 01AB      00069         clrf ALARM_MINUTE
002C 01AD      00070         clrf ALARM_AMPM
               00071 
002D 01AE      00072         clrf ALARM_ENABLED
002E 3001      00073         movlw H'1'
002F 00E5      00074         movwf SWITCH_COUNTDOWNH
0030 30FF      00075         movlw H'ff'
0031 00E6      00076         movwf SWITCH_COUNTDOWNL
               00077         
               00078         SET_REGISTER ALARM_SONGH, HIGH(alarm_song1)
0032 3005          M         movlw literal
0033 00D5          M         movwf reg
               00079         SET_REGISTER ALARM_SONGL, LOW(alarm_song1)
0034 303F          M         movlw literal
0035 00D6          M         movwf reg
               00080         SET_REGISTER ALARM_ENDH, HIGH(alarm_end1)
0036 3005          M         movlw literal
0037 00D7          M         movwf reg
               00081         SET_REGISTER ALARM_ENDL, LOW(alarm_end1)
0038 3093          M         movlw literal
0039 00D8          M         movwf reg
               00082 
003A 01C8      00083         clrf THERMOMETER_COUNTER
003B 01C0      00084         clrf THERMOMETER_INPUT
003C 01C2      00085         clrf THERMOMETER_VALUEH
003D 01C1      00086         clrf THERMOMETER_VALUEL
               00087 
003E 01C7      00088         clrf IS_SET
               00089 
               00090 ; set timer reset value
               00091 ; can't use interrupts because porta switches must be polled
003F 018F      00092         clrf TMR1H                          ; reset timer
0040 018E      00093         clrf TMR1L
0041 3031      00094         movlw B'00110001'                   ; set timer1 to maximum prescale and enable
0042 0090      00095         movwf T1CON
               00096 
0043 3019      00097         movlw TIMER_SCALE2
0044 00B1      00098         movwf TIMER_COUNTER
0045 300C      00099         movlw HIGH(TIMER_SCALE1)            ; load timeout value
0046 0096      00100         movwf CCPR1H
0047 3035      00101         movlw LOW(TIMER_SCALE1)
0048 0095      00102         movwf CCPR1L
0049 300A      00103         movlw B'00001010'                   ; set to set interrupt on every event
004A 0097      00104         movwf CCP1CON
004B 110C      00105         bcf PIR1, CCP1IF
               00106 
004C 2377      00107         call update_display
               00108 
               00109 ; play startup sound
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00110         SET_REGISTER BEEP_SONGH, HIGH(beep_song10)
004D 3006          M         movlw literal
004E 00DE          M         movwf reg
               00111         SET_REGISTER BEEP_SONGL, LOW(beep_song10)
004F 308F          M         movlw literal
0050 00DF          M         movwf reg
               00112         SET_REGISTER BEEP_ENDH, HIGH(beep_end10)
0051 3007          M         movlw literal
0052 00E0          M         movwf reg
               00113         SET_REGISTER BEEP_ENDL, LOW(beep_end10)
0053 30D9          M         movlw literal
0054 00E1          M         movwf reg
0055 22AC      00114         call start_beep
               00115 
               00116 
               00117 
0056           00118 loop:
0056 0064      00119         clrwdt                              ; clear watchdog
               00120 
               00121 ; test mode
               00122         IF 0
               00123         SKIP_EQUAL2 OPERATION, OPERATION_TEST
               00124         goto loop2
               00125 
               00126         call get_switches                   ; compare new switch status to old status
               00127         SKIP_NOTEQUAL SWITCH_STATUS, SWITCH_STATUS_NEW
               00128         goto loop
               00129 
               00130         COPY_REGISTER SWITCH_STATUS, SWITCH_STATUS_NEW
               00131 
               00132         call update_display
               00133 
               00134         goto loop
               00135         ENDIF
               00136 
               00137 
               00138 
               00139 
               00140 
               00141 
               00142 
               00143 
               00144 ; handle change in switches
0057           00145 loop2:
0057 23FA      00146         call get_switches
               00147 
               00148         SKIP_NOTEQUAL SWITCH_STATUS, SWITCH_STATUS_NEW
0058 0833          M         movf reg2, W
0059 0232          M         subwf reg1, W
005A 1903          M         btfsc STATUS, Z
005B 298E      00149         goto loop4
               00150 
               00151 ; handle alarm enable change
               00152                 COPY_REGISTER OLD_ALARM_ENABLED, ALARM_ENABLED
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
005C 082E          M         movf src, W
005D 00B4          M         movwf dst
005E 102E      00153                 bcf ALARM_ENABLED, 0             ; default to off
005F 1BB3      00154                 btfsc SWITCH_STATUS_NEW, SWITCH_ALARM_ENABLE  ; skip if really off
0060 142E      00155                 bsf ALARM_ENABLED, 0             ; set to on
               00156 
               00157                 SKIP_ZERO SWITCH_COUNTDOWNH         ; init countdown must be 0 to play alarm beep
0061 08E5          M         movf reg, F
0062 1D03          M         btfss STATUS, Z
0063 2880      00158                 goto alarm_change_done
               00159                 SKIP_ZERO SWITCH_COUNTDOWNL
0064 08E6          M         movf reg, F
0065 1D03          M         btfss STATUS, Z
0066 2880      00160                 goto alarm_change_done
               00161                 SKIP_NOTEQUAL ALARM_ENABLED, OLD_ALARM_ENABLED
0067 0834          M         movf reg2, W
0068 022E          M         subwf reg1, W
0069 1903          M         btfsc STATUS, Z
006A 2880      00162                 goto alarm_change_done
               00163 
006B 182E      00164                 btfsc ALARM_ENABLED,0            ; play sound for alarm disabled
006C 2877      00165                 goto alarm_enabled
               00166                         SET_REGISTER BEEP_SONGH, HIGH(beep_song7) ; play sound for alarm disabled
006D 3006          M         movlw literal
006E 00DE          M         movwf reg
               00167                         SET_REGISTER BEEP_SONGL, LOW(beep_song7)
006F 306F          M         movlw literal
0070 00DF          M         movwf reg
               00168                         SET_REGISTER BEEP_ENDH, HIGH(beep_end7)
0071 3006          M         movlw literal
0072 00E0          M         movwf reg
               00169                         SET_REGISTER BEEP_ENDL, LOW(beep_end7)
0073 307F          M         movlw literal
0074 00E1          M         movwf reg
0075 22AC      00170                         call start_beep
0076 2880      00171                         goto alarm_change_done
               00172 
0077           00173 alarm_enabled:
               00174                         SET_REGISTER BEEP_SONGH, HIGH(beep_song8) ; play sound for alarm enabled
0077 3006          M         movlw literal
0078 00DE          M         movwf reg
               00175                         SET_REGISTER BEEP_SONGL, LOW(beep_song8)
0079 307F          M         movlw literal
007A 00DF          M         movwf reg
               00176                         SET_REGISTER BEEP_ENDH, HIGH(beep_end8)
007B 3006          M         movlw literal
007C 00E0          M         movwf reg
               00177                         SET_REGISTER BEEP_ENDL, LOW(beep_end8)
007D 308F          M         movlw literal
007E 00E1          M         movwf reg
007F 22AC      00178                         call start_beep
               00179 
0080           00180 alarm_change_done:
               00181 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00182 
               00183 
               00184 
               00185 
               00186 
               00187 
               00188 
               00189 
               00190 ; handle entry into set time mode
0080 1DB3      00191                 btfss SWITCH_STATUS_NEW, SWITCH_TIME_SET    ; time button down
0081 28AC      00192                 goto set_time_done
0082 19B2      00193                 btfsc SWITCH_STATUS, SWITCH_TIME_SET        ; previously up
0083 28AC      00194                 goto set_time_done
               00195                         SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_TIME
0084 3001          M         movlw literal
0085 027E          M         subwf reg1, W
0086 1903          M         btfsc STATUS, Z
0087 289D      00196                         goto exit_set_time
               00197 
0088           00198 enter_set_time:
               00199                                 SET_REGISTER BEEP_SONGH, HIGH(beep_song2)
0088 3006          M         movlw literal
0089 00DE          M         movwf reg
               00200                                 SET_REGISTER BEEP_SONGL, LOW(beep_song2)
008A 304B          M         movlw literal
008B 00DF          M         movwf reg
               00201                                 SET_REGISTER BEEP_ENDH, HIGH(beep_end2)
008C 3006          M         movlw literal
008D 00E0          M         movwf reg
               00202                                 SET_REGISTER BEEP_ENDL, LOW(beep_end2)
008E 3053          M         movlw literal
008F 00E1          M         movwf reg
0090 22AC      00203                                 call start_beep
               00204                                 SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_ALARM ; store previous operation if not a set mode
0091 3004          M         movlw literal
0092 027E          M         subwf reg1, W
0093 1903          M         btfsc STATUS, Z
0094 2897      00205                                 goto enter_set_time2
               00206                                         COPY_REGISTER PREV_OPERATION, OPERATION
0095 087E          M         movf src, W
0096 00AC          M         movwf dst
0097           00207 enter_set_time2:
               00208                                 SET_REGISTER OPERATION, OPERATION_SET_TIME
0097 3001          M         movlw literal
0098 00FE          M         movwf reg
               00209                                 SET_REGISTER SUBOPERATION, SUBOPERATION_NONE
0099 3000          M         movlw literal
009A 00FF          M         movwf reg
009B 1429      00210                                 bsf CURRENT_DOTS, 0                 ; solid dots
009C 28AC      00211                                 goto set_time_done
               00212 
009D           00213 exit_set_time:
               00214                                 SET_REGISTER BEEP_SONGH, HIGH(beep_song4)
009D 3006          M         movlw literal
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009E 00DE          M         movwf reg
               00215                                 SET_REGISTER BEEP_SONGL, LOW(beep_song4)
009F 305B          M         movlw literal
00A0 00DF          M         movwf reg
               00216                                 SET_REGISTER BEEP_ENDH, HIGH(beep_end4)
00A1 3006          M         movlw literal
00A2 00E0          M         movwf reg
               00217                                 SET_REGISTER BEEP_ENDL, LOW(beep_end4)
00A3 3063          M         movlw literal
00A4 00E1          M         movwf reg
00A5 22AC      00218                                 call start_beep
               00219                                 COPY_REGISTER OPERATION, PREV_OPERATION ; revert to previous operation
00A6 082C          M         movf src, W
00A7 00FE          M         movwf dst
               00220                                 SET_REGISTER SUBOPERATION, SUBOPERATION_TIME
00A8 3003          M         movlw literal
00A9 00FF          M         movwf reg
               00221                                 SET_REGISTER AUTO_COUNTER, AUTO_DURATION
00AA 3028          M         movlw literal
00AB 00A7          M         movwf reg
00AC           00222 set_time_done:
               00223 
               00224 
               00225 
               00226 
               00227 
               00228 ; handle entry into set alarm mode
00AC 1E33      00229                 btfss SWITCH_STATUS_NEW, SWITCH_ALARM_SET   ; alarm button down
00AD 28D8      00230                 goto set_alarm_done
00AE 1A32      00231                 btfsc SWITCH_STATUS, SWITCH_ALARM_SET       ; previously up
00AF 28D8      00232                 goto set_alarm_done
               00233                         SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_ALARM
00B0 3004          M         movlw literal
00B1 027E          M         subwf reg1, W
00B2 1903          M         btfsc STATUS, Z
00B3 28C9      00234                         goto exit_set_alarm
               00235 
00B4           00236 enter_set_alarm:
               00237                                 SET_REGISTER BEEP_SONGH, HIGH(beep_song3)
00B4 3006          M         movlw literal
00B5 00DE          M         movwf reg
               00238                                 SET_REGISTER BEEP_SONGL, LOW(beep_song3)
00B6 3053          M         movlw literal
00B7 00DF          M         movwf reg
               00239                                 SET_REGISTER BEEP_ENDH, HIGH(beep_end3)
00B8 3006          M         movlw literal
00B9 00E0          M         movwf reg
               00240                                 SET_REGISTER BEEP_ENDL, LOW(beep_end3)
00BA 305B          M         movlw literal
00BB 00E1          M         movwf reg
00BC 22AC      00241                                 call start_beep
               00242                                 SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_TIME ; store previous operation if not a set mode
00BD 3001          M         movlw literal
00BE 027E          M         subwf reg1, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BF 1903          M         btfsc STATUS, Z
00C0 28C3      00243                                 goto enter_set_alarm2
               00244                                         COPY_REGISTER PREV_OPERATION, OPERATION
00C1 087E          M         movf src, W
00C2 00AC          M         movwf dst
               00245 
00C3           00246 enter_set_alarm2:
               00247                                 SET_REGISTER OPERATION, OPERATION_SET_ALARM
00C3 3004          M         movlw literal
00C4 00FE          M         movwf reg
               00248                                 SET_REGISTER SUBOPERATION, SUBOPERATION_NONE
00C5 3000          M         movlw literal
00C6 00FF          M         movwf reg
00C7 1429      00249                                 bsf CURRENT_DOTS, 0
00C8 28D8      00250                                 goto set_alarm_done
               00251 
00C9           00252 exit_set_alarm:
               00253                                 SET_REGISTER BEEP_SONGH, HIGH(beep_song5)
00C9 3006          M         movlw literal
00CA 00DE          M         movwf reg
               00254                                 SET_REGISTER BEEP_SONGL, LOW(beep_song5)
00CB 3063          M         movlw literal
00CC 00DF          M         movwf reg
               00255                                 SET_REGISTER BEEP_ENDH, HIGH(beep_end5)
00CD 3006          M         movlw literal
00CE 00E0          M         movwf reg
               00256                                 SET_REGISTER BEEP_ENDL, LOW(beep_end5)
00CF 306B          M         movlw literal
00D0 00E1          M         movwf reg
00D1 22AC      00257                                 call start_beep
               00258                                 COPY_REGISTER OPERATION, PREV_OPERATION ; revert to previous operation
00D2 082C          M         movf src, W
00D3 00FE          M         movwf dst
               00259                                 SET_REGISTER SUBOPERATION, SUBOPERATION_TIME
00D4 3003          M         movlw literal
00D5 00FF          M         movwf reg
               00260                                 SET_REGISTER AUTO_COUNTER, AUTO_DURATION
00D6 3028          M         movlw literal
00D7 00A7          M         movwf reg
00D8           00261 set_alarm_done:
               00262 
               00263 
               00264 
               00265 
               00266 
               00267 
               00268 
               00269 
               00270 
               00271 
               00272 ; handle mode cycling
00D8 1F33      00273         btfss SWITCH_STATUS_NEW, SWITCH_MODE
00D9 2910      00274         goto change_mode_done
00DA 1B32      00275         btfsc SWITCH_STATUS, SWITCH_MODE
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DB 2910      00276         goto change_mode_done
               00277 
               00278 ; mode button pressed
               00279         SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM ; skip if set alarm mode
00DC 3004          M         movlw literal
00DD 027E          M         subwf reg, W
00DE 1D03          M         btfss STATUS, Z
00DF 28EA      00280         goto change_mode3
               00281                 SKIP_ZERO ALARM_PREVIEW ; skip if not in alarm preview already
00E0 08D4          M         movf reg, F
00E1 1D03          M         btfss STATUS, Z
00E2 28E7      00282                 goto change_mode4
00E3 01CE      00283                         clrf ALARM_ON    ; enter alarm preview mode
00E4 1454      00284                         bsf ALARM_PREVIEW, 0
00E5 22F2      00285                         call start_alarm
00E6 2910      00286                         goto change_mode_done
               00287 
               00288 ; advance current song and restart alarm playback
00E7           00289 change_mode4:
00E7 233F      00290                 call next_song
00E8 22F2      00291                 call start_alarm
00E9 2910      00292                 goto change_mode_done
               00293 
00EA           00294 change_mode3:
               00295         SET_REGISTER BEEP_SONGH, HIGH(beep_song1)
00EA 3006          M         movlw literal
00EB 00DE          M         movwf reg
               00296         SET_REGISTER BEEP_SONGL, LOW(beep_song1)
00EC 3047          M         movlw literal
00ED 00DF          M         movwf reg
               00297         SET_REGISTER BEEP_ENDH, HIGH(beep_end1)
00EE 3006          M         movlw literal
00EF 00E0          M         movwf reg
               00298         SET_REGISTER BEEP_ENDL, LOW(beep_end1)
00F0 304B          M         movlw literal
00F1 00E1          M         movwf reg
00F2 22AC      00299         call start_beep
               00300         SKIP_EQUAL2 OPERATION, OPERATION_THERMOMETER ; skip if thermometer mode
00F3 3007          M         movlw literal
00F4 027E          M         subwf reg, W
00F5 1D03          M         btfss STATUS, Z
00F6 28FA      00301         goto change_mode1
               00302 ; currently in thermometer mode
               00303                 SET_REGISTER OPERATION, OPERATION_TEST ; advance mode
00F7 3008          M         movlw literal
00F8 00FE          M         movwf reg
00F9 2910      00304                 goto change_mode_done
               00305 
               00306 
               00307 
00FA           00308 change_mode1:
               00309         SKIP_EQUAL2 OPERATION, OPERATION_TEST ; skip if test mode
00FA 3008          M         movlw literal
00FB 027E          M         subwf reg, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FC 1D03          M         btfss STATUS, Z
00FD 2906      00310         goto change_mode2
               00311                 SET_REGISTER OPERATION, OPERATION_AUTO
00FE 3009          M         movlw literal
00FF 00FE          M         movwf reg
               00312                 SET_REGISTER SUBOPERATION, SUBOPERATION_TEMP
0100 3004          M         movlw literal
0101 00FF          M         movwf reg
               00313                 SET_REGISTER AUTO_COUNTER, AUTO_DURATION
0102 3028          M         movlw literal
0103 00A7          M         movwf reg
0104 236A      00314                 call start_thermometer
0105 2910      00315                 goto change_mode_done
               00316 
0106           00317 change_mode2:
               00318         SKIP_EQUAL2 OPERATION, OPERATION_AUTO ; skip if automatic operation
0106 3009          M         movlw literal
0107 027E          M         subwf reg, W
0108 1D03          M         btfss STATUS, Z
0109 290D      00319         goto change_mode5
               00320                 SET_REGISTER OPERATION, OPERATION_CURRENT_TIME
010A 3000          M         movlw literal
010B 00FE          M         movwf reg
010C 2910      00321                 goto change_mode_done
               00322 
010D           00323 change_mode5:
               00324         SET_REGISTER OPERATION, OPERATION_THERMOMETER ; any other modes go to thermometer
010D 3007          M         movlw literal
010E 00FE          M         movwf reg
010F 236A      00325         call start_thermometer
               00326 
0110           00327 change_mode_done:
               00328 
               00329 
               00330 
               00331 
               00332 
               00333 
0110           00334 test_set_hour:
0110 1EB3      00335         btfss SWITCH_STATUS_NEW, SWITCH_HOUR   ; set hour down
0111 2944      00336         goto test_release_hour
0112 1AB2      00337         btfsc SWITCH_STATUS, SWITCH_HOUR       ; previously up
0113 2944      00338         goto test_release_hour
               00339 
               00340                 SET_REGISTER BEEP_SONGH, HIGH(beep_song6)
0114 3006          M         movlw literal
0115 00DE          M         movwf reg
               00341                 SET_REGISTER BEEP_SONGL, LOW(beep_song6)
0116 306B          M         movlw literal
0117 00DF          M         movwf reg
               00342                 SET_REGISTER BEEP_ENDH, HIGH(beep_end6)
0118 3006          M         movlw literal
0119 00E0          M         movwf reg
               00343                 SET_REGISTER BEEP_ENDL, LOW(beep_end6)
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
011A 306D          M         movlw literal
011B 00E1          M         movwf reg
011C 22AC      00344                 call start_beep
               00345                 SET_REGISTER SUBOPERATION, SUBOPERATION_SET_HOUR  ; set suboperation
011D 3001          M         movlw literal
011E 00FF          M         movwf reg
               00346                 SET_REGISTER SUBOPERATION_COUNTER, SUBOPERATION_DELAY1  ; set delay until autoadvance
011F 3008          M         movlw literal
0120 00BE          M         movwf reg
               00347 
               00348 ; increase the hour for current time
               00349                 SKIP_EQUAL2 OPERATION, OPERATION_SET_TIME
0121 3001          M         movlw literal
0122 027E          M         subwf reg, W
0123 1D03          M         btfss STATUS, Z
0124 2933      00350                 goto increase_alarm_hour1
0125           00351 increase_time_hour1:
0125 1447      00352                         bsf IS_SET, 0
0126 0AA5      00353                         incf CURRENT_HOUR, F
               00354                         SKIP_EQUAL2 CURRENT_HOUR, D'12'    ; toggle ampm at 12 hours
0127 300C          M         movlw literal
0128 0225          M         subwf reg, W
0129 1D03          M         btfss STATUS, Z
012A 292D      00355                         goto increase_time_hour2
012B 3001      00356                         movlw D'1'
012C 06A8      00357                         xorwf CURRENT_AMPM, F
012D           00358 increase_time_hour2:
               00359                         SKIP_EQUAL2 CURRENT_HOUR, D'13'    ; wrap hour
012D 300D          M         movlw literal
012E 0225          M         subwf reg, W
012F 1D03          M         btfss STATUS, Z
0130 2944      00360                         goto increase_hour_done1
               00361                         SET_REGISTER CURRENT_HOUR, D'1'
0131 3001          M         movlw literal
0132 00A5          M         movwf reg
               00362 
0133           00363 increase_alarm_hour1:
               00364                 SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM
0133 3004          M         movlw literal
0134 027E          M         subwf reg, W
0135 1D03          M         btfss STATUS, Z
0136 2944      00365                 goto increase_hour_done1
0137 0AAA      00366                         incf ALARM_HOUR, F
               00367                         SKIP_EQUAL2 ALARM_HOUR, D'12'
0138 300C          M         movlw literal
0139 022A          M         subwf reg, W
013A 1D03          M         btfss STATUS, Z
013B 293E      00368                         goto increase_alarm_hour2
013C 3001      00369                         movlw D'1'
013D 06AD      00370                         xorwf ALARM_AMPM, F
013E           00371 increase_alarm_hour2:
               00372                         SKIP_EQUAL2 ALARM_HOUR, D'13'
013E 300D          M         movlw literal
013F 022A          M         subwf reg, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0140 1D03          M         btfss STATUS, Z
0141 2944      00373                         goto increase_hour_done1
               00374                         SET_REGISTER ALARM_HOUR, D'1'
0142 3001          M         movlw literal
0143 00AA          M         movwf reg
               00375 
0144           00376 increase_hour_done1:
               00377 
               00378 
               00379 
               00380 
               00381 
               00382 
0144           00383 test_release_hour:
0144 1AB3      00384         btfsc SWITCH_STATUS_NEW, SWITCH_HOUR   ; set hour up
0145 294A      00385         goto test_set_minute
0146 1EB2      00386         btfss SWITCH_STATUS, SWITCH_HOUR       ; previously up
0147 294A      00387         goto test_set_minute
               00388                 SET_REGISTER SUBOPERATION, SUBOPERATION_NONE
0148 3000          M         movlw literal
0149 00FF          M         movwf reg
               00389 
               00390 
               00391 
               00392 
               00393 
               00394 
               00395 
               00396 
014A           00397 test_set_minute:
014A 1CB3      00398         btfss SWITCH_STATUS_NEW, SWITCH_MINUTE ; set minute down
014B 2974      00399         goto test_release_minute
014C 18B2      00400         btfsc SWITCH_STATUS, SWITCH_MINUTE  ; previously up
014D 2974      00401         goto test_release_minute
               00402 
               00403                 SET_REGISTER BEEP_SONGH, HIGH(beep_song9)
014E 3006          M         movlw literal
014F 00DE          M         movwf reg
               00404                 SET_REGISTER BEEP_SONGL, LOW(beep_song9)
0150 306D          M         movlw literal
0151 00DF          M         movwf reg
               00405                 SET_REGISTER BEEP_ENDH, HIGH(beep_end9)
0152 3006          M         movlw literal
0153 00E0          M         movwf reg
               00406                 SET_REGISTER BEEP_ENDL, LOW(beep_end9)
0154 306F          M         movlw literal
0155 00E1          M         movwf reg
0156 22AC      00407                 call start_beep
               00408                 SET_REGISTER SUBOPERATION, SUBOPERATION_SET_MINUTE
0157 3002          M         movlw literal
0158 00FF          M         movwf reg
               00409                 SET_REGISTER SUBOPERATION_COUNTER, SUBOPERATION_DELAY1
0159 3008          M         movlw literal
015A 00BE          M         movwf reg
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00410 
               00411 ; increase minute for current time
               00412                 SKIP_EQUAL2 OPERATION, OPERATION_SET_TIME
015B 3001          M         movlw literal
015C 027E          M         subwf reg, W
015D 1D03          M         btfss STATUS, Z
015E 2969      00413                 goto increase_alarm_minute1
015F           00414 increase_time_minute1:
015F 1447      00415                         bsf IS_SET, 0
0160 0AA6      00416                         incf CURRENT_MINUTE, F
               00417                         SKIP_GREATEREQUAL CURRENT_MINUTE, D'60'
0161 303C          M         movlw literal
0162 0226          M         subwf reg, W
0163 1C03          M         btfss STATUS, C
0164 2974      00418                         goto increase_minute_done1
               00419                         SET_REGISTER CURRENT_MINUTE, D'0'
0165 3000          M         movlw literal
0166 00A6          M         movwf reg
0167 01BC      00420                         clrf CURRENT_FRACSECONDH    ; reset seconds
0168 01BD      00421                         clrf CURRENT_FRACSECONDL
               00422 
0169           00423 increase_alarm_minute1:
               00424                 SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM
0169 3004          M         movlw literal
016A 027E          M         subwf reg, W
016B 1D03          M         btfss STATUS, Z
016C 2974      00425                 goto increase_minute_done1
016D 0AAB      00426                         incf ALARM_MINUTE, F
               00427                         SKIP_GREATEREQUAL ALARM_MINUTE, D'60'
016E 303C          M         movlw literal
016F 022B          M         subwf reg, W
0170 1C03          M         btfss STATUS, C
0171 2974      00428                         goto increase_minute_done1
               00429                         SET_REGISTER ALARM_MINUTE, D'0'
0172 3000          M         movlw literal
0173 00AB          M         movwf reg
               00430 
0174           00431 increase_minute_done1:
               00432 
               00433 
               00434 
               00435 
               00436 
               00437 
0174           00438 test_release_minute:
0174 18B3      00439         btfsc SWITCH_STATUS_NEW, SWITCH_MINUTE   ; set minute up
0175 297A      00440         goto switches_done
0176 1CB2      00441         btfss SWITCH_STATUS, SWITCH_MINUTE       ; previously down
0177 297A      00442         goto switches_done
               00443                 SET_REGISTER SUBOPERATION, SUBOPERATION_NONE
0178 3000          M         movlw literal
0179 00FF          M         movwf reg
               00444 
               00445 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00446         
               00447 
               00448 
               00449 
               00450 
017A           00451 switches_done:
               00452         COPY_REGISTER SWITCH_STATUS, SWITCH_STATUS_NEW
017A 0833          M         movf src, W
017B 00B2          M         movwf dst
               00453 
               00454 ; stop thermometer if not a set, thermometer or auto mode
               00455         SKIP_NOTEQUAL2 OPERATION, OPERATION_THERMOMETER
017C 3007          M         movlw literal
017D 027E          M         subwf reg1, W
017E 1903          M         btfsc STATUS, Z
017F 298D      00456         goto skip_thermometer
               00457         SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_TIME
0180 3001          M         movlw literal
0181 027E          M         subwf reg1, W
0182 1903          M         btfsc STATUS, Z
0183 298D      00458         goto skip_thermometer
               00459         SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_ALARM
0184 3004          M         movlw literal
0185 027E          M         subwf reg1, W
0186 1903          M         btfsc STATUS, Z
0187 298D      00460         goto skip_thermometer
               00461         SKIP_NOTEQUAL2 OPERATION, OPERATION_AUTO
0188 3009          M         movlw literal
0189 027E          M         subwf reg1, W
018A 1903          M         btfsc STATUS, Z
018B 298D      00462         goto skip_thermometer
018C 101F      00463                 bcf ADCON0, 0                       ; disable A/D converter
               00464 
018D           00465 skip_thermometer:
018D 2377      00466         call update_display
               00467 
               00468 
               00469 
               00470 
               00471 
               00472 
               00473 
               00474 ; poll timer
018E           00475 loop4:
018E 1283 1303 00476         BANKSEL OPERATION
0190 1D0C      00477         btfss PIR1, CCP1IF                  ; skip if timer not triggered
0191 2A4B      00478         goto loop5
               00479 
               00480 
               00481 
               00482 
0192           00483 timer_event:
0192 110C      00484         bcf PIR1, CCP1IF                    ; reset interrupt
0193 3035      00485         movlw LOW(TIMER_SCALE1)             ; increase timer position
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0194 0795      00486         addwf CCPR1L, F
0195 1803      00487         btfsc STATUS, C
0196 0A96      00488         incf CCPR1H, F                      ; carry the 256
0197 300C      00489         movlw HIGH(TIMER_SCALE1)
0198 0796      00490         addwf CCPR1H, F                     ; let wrap around
0199 0BB1      00491         decfsz TIMER_COUNTER, F             ; decrease timer counter.  skip if 0
019A 2A4B      00492         goto loop5
               00493 
               00494 ; half second event
               00495                 SET_REGISTER TIMER_COUNTER, TIMER_SCALE2      ; reset timer counter
019B 3019          M         movlw literal
019C 00B1          M         movwf reg
               00496                 SET_REGISTER NEED_UPDATE_DISPLAY, H'0'
019D 3000          M         movlw literal
019E 00CD          M         movwf reg
               00497 
019F 0ABD      00498                 incf CURRENT_FRACSECONDL, F         ; increase fractional seconds lo
01A0 1903      00499                 btfsc STATUS, Z                     ; skip if not 0
01A1 0ABC      00500                 incf CURRENT_FRACSECONDH, F         ; increase fractional seconds hi
               00501 
               00502 
01A2 03D3      00503                 decf ALARM_TIMEOUT_COUNTERL, F      ; decrease alarm timeout
               00504                 SKIP_EQUAL2 ALARM_TIMEOUT_COUNTERL, H'ff'
01A3 30FF          M         movlw literal
01A4 0253          M         subwf reg, W
01A5 1D03          M         btfss STATUS, Z
01A6 03D2      00505                 decf ALARM_TIMEOUT_COUNTERH, F
               00506 
01A7 0BA7      00507                 decfsz AUTO_COUNTER, F    ; decrease auto timeout
01A8 29BC      00508                 goto timer_event2
               00509                 SKIP_NOTEQUAL2 SUBOPERATION, SUBOPERATION_TIME ; toggle auto operation
01A9 3003          M         movlw literal
01AA 027F          M         subwf reg1, W
01AB 1903          M         btfsc STATUS, Z
01AC 29B7      00510                 goto toggle_auto1
               00511                 SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_TEMP
01AD 3004          M         movlw literal
01AE 027F          M         subwf reg, W
01AF 1D03          M         btfss STATUS, Z
01B0 29BC      00512                 goto timer_event2
               00513 
               00514                 SET_REGISTER SUBOPERATION, SUBOPERATION_TIME
01B1 3003          M         movlw literal
01B2 00FF          M         movwf reg
               00515                 SET_REGISTER AUTO_COUNTER, AUTO_DURATION
01B3 3028          M         movlw literal
01B4 00A7          M         movwf reg
01B5 144D      00516                 bsf NEED_UPDATE_DISPLAY, 0
01B6 29BC      00517                 goto timer_event2
               00518 
01B7           00519 toggle_auto1:
               00520                 SET_REGISTER SUBOPERATION, SUBOPERATION_TEMP
01B7 3004          M         movlw literal
01B8 00FF          M         movwf reg
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00521                 SET_REGISTER AUTO_COUNTER, AUTO_DURATION
01B9 3028          M         movlw literal
01BA 00A7          M         movwf reg
01BB 144D      00522                 bsf NEED_UPDATE_DISPLAY, 0
               00523 
01BC           00524 timer_event2:
               00525 ; solid dots in set time and set alarm modes
               00526                 SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_TIME
01BC 3001          M         movlw literal
01BD 027E          M         subwf reg1, W
01BE 1903          M         btfsc STATUS, Z
01BF 29C5      00527                 goto handle_soliddots
               00528                 SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_ALARM
01C0 3004          M         movlw literal
01C1 027E          M         subwf reg1, W
01C2 1903          M         btfsc STATUS, Z
01C3 29C5      00529                 goto handle_soliddots
01C4 29C8      00530                         goto handle_halfsecond
               00531 
01C5           00532 handle_soliddots:
01C5 1429      00533                 bsf CURRENT_DOTS, 0
01C6 144D      00534                 bsf NEED_UPDATE_DISPLAY, 0
01C7 29D4      00535                 goto done_halfsecond
               00536 
01C8           00537 handle_halfsecond:
01C8 1D3D      00538                 btfss CURRENT_FRACSECONDL, 2        ; skip if odd half second
01C9 29CF      00539                 goto even_halfsecond
               00540 
01CA           00541 odd_halfsecond:
01CA 1C29      00542                         btfss CURRENT_DOTS, 0           ; skip if dots on
01CB 29D4      00543                         goto done_halfsecond            ; dots already off
               00544 
01CC 144D      00545                                 bsf NEED_UPDATE_DISPLAY, 0  ; set dots off
01CD 1029      00546                                 bcf CURRENT_DOTS, 0
01CE 29D4      00547                                 goto done_halfsecond
               00548 
01CF           00549 even_halfsecond:
01CF 1829      00550                         btfsc CURRENT_DOTS, 0           ; skip if dots off
01D0 29D4      00551                         goto done_halfsecond            ; dots already on
               00552 
01D1 144D      00553                                 bsf NEED_UPDATE_DISPLAY, 0  ; set dots on
01D2 1429      00554                                 bsf CURRENT_DOTS, 0
01D3 29D4      00555                                 goto done_halfsecond
               00556 
               00557 
               00558 
               00559 
01D4           00560 done_halfsecond:
               00561 ; skip if fractional seconds not equal to total
               00562                 SKIP_EQUAL2 CURRENT_FRACSECONDH, HIGH(FRACSECONDS)
01D4 3001          M         movlw literal
01D5 023C          M         subwf reg, W
01D6 1D03          M         btfss STATUS, Z
01D7 29F1      00563                 goto timer_event_done
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00564                 SKIP_EQUAL2 CURRENT_FRACSECONDL, LOW(FRACSECONDS)
01D8 30E0          M         movlw literal
01D9 023D          M         subwf reg, W
01DA 1D03          M         btfss STATUS, Z
01DB 29F1      00565                 goto timer_event_done
               00566 
               00567 ; hit total FRACSECONDS per minute
01DC 01BC      00568                         clrf CURRENT_FRACSECONDH            ; reset seconds
01DD 01BD      00569                         clrf CURRENT_FRACSECONDL            ; reset seconds
01DE 0AA6      00570                         incf CURRENT_MINUTE, F              ; increase minutes
               00571 
               00572                         SKIP_GREATEREQUAL CURRENT_MINUTE, D'60'
01DF 303C          M         movlw literal
01E0 0226          M         subwf reg, W
01E1 1C03          M         btfss STATUS, C
01E2 29F1      00573                         goto timer_event_done
               00574 
01E3 01A6      00575                                 clrf CURRENT_MINUTE                 ; reset minutes
01E4 0AA5      00576                                 incf CURRENT_HOUR, F                ; increase hours
               00577 
               00578                                 SKIP_EQUAL2 CURRENT_HOUR, D'12'
01E5 300C          M         movlw literal
01E6 0225          M         subwf reg, W
01E7 1D03          M         btfss STATUS, Z
01E8 29EB      00579                                 goto timer_event1
01E9 3001      00580                                         movlw D'1'
01EA 06A8      00581                                         xorwf CURRENT_AMPM, F               ; toggle AM/PM at hour 12
               00582 
01EB           00583 timer_event1:
               00584                                 SKIP_EQUAL2 CURRENT_HOUR, D'13'
01EB 300D          M         movlw literal
01EC 0225          M         subwf reg, W
01ED 1D03          M         btfss STATUS, Z
01EE 29F1      00585                                 goto timer_event_done               ; update display
               00586                                         SET_REGISTER CURRENT_HOUR, D'1' ; reset current hour to 1
01EF 3001          M         movlw literal
01F0 00A5          M         movwf reg
               00587 
               00588 
01F1           00589 timer_event_done:
               00590 ; update display if current time || auto mode && time mode
               00591         SKIP_NOTEQUAL2 OPERATION, OPERATION_CURRENT_TIME
01F1 3000          M         movlw literal
01F2 027E          M         subwf reg1, W
01F3 1903          M         btfsc STATUS, Z
01F4 29FD      00592         goto timer_event_done1
               00593         SKIP_EQUAL2 OPERATION, OPERATION_AUTO
01F5 3009          M         movlw literal
01F6 027E          M         subwf reg, W
01F7 1D03          M         btfss STATUS, Z
01F8 2A00      00594         goto autoadvance_hour
               00595         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_TIME
01F9 3003          M         movlw literal
01FA 027F          M         subwf reg, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01FB 1D03          M         btfss STATUS, Z
01FC 2A00      00596         goto autoadvance_hour
               00597 
01FD           00598 timer_event_done1:
01FD 184D      00599         btfsc NEED_UPDATE_DISPLAY, 0        ; skip if display update not needed
01FE 2377      00600         call update_display                 ; only display if current time displayed
01FF 2A4B      00601         goto loop5
               00602 
               00603 
               00604 
               00605 
               00606 
               00607 ; handle autoadvance events
0200           00608 autoadvance_hour:
               00609         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_SET_HOUR ; skip if setting hour
0200 3001          M         movlw literal
0201 027F          M         subwf reg, W
0202 1D03          M         btfss STATUS, Z
0203 2A2D      00610         goto autoadvance_minute
               00611 
0204 0BBE      00612                 decfsz SUBOPERATION_COUNTER, F ; decrease suboperation counter and skip if 0
0205 2A4B      00613                 goto loop5
               00614 
               00615                         SKIP_EQUAL2 OPERATION, OPERATION_SET_TIME ; skip if setting time
0206 3001          M         movlw literal
0207 027E          M         subwf reg, W
0208 1D03          M         btfss STATUS, Z
0209 2A1C      00616                         goto autoadvance_alarm_hour1
020A           00617 autoadvance_time_hour1:
020A 0AA5      00618                                 incf CURRENT_HOUR, F
               00619                                 SKIP_EQUAL2 CURRENT_HOUR, D'12' ; toggle am/pm
020B 300C          M         movlw literal
020C 0225          M         subwf reg, W
020D 1D03          M         btfss STATUS, Z
020E 2A11      00620                                 goto autoadvance_time_hour2
020F 3001      00621                                 movlw D'1'
0210 06A8      00622                                 xorwf CURRENT_AMPM, F
0211           00623 autoadvance_time_hour2:
               00624                                 SKIP_EQUAL2 CURRENT_HOUR, D'13' ; wrap hour
0211 300D          M         movlw literal
0212 0225          M         subwf reg, W
0213 1D03          M         btfss STATUS, Z
0214 2A2A      00625                                 goto autoadvance_hour_done
               00626                                 SET_REGISTER CURRENT_HOUR, D'1'
0215 3001          M         movlw literal
0216 00A5          M         movwf reg
0217 2A2A      00627                                 goto autoadvance_hour_done
               00628 
               00629                         SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM
0218 3004          M         movlw literal
0219 027E          M         subwf reg, W
021A 1D03          M         btfss STATUS, Z
021B 2A2D      00630                         goto autoadvance_minute
021C           00631 autoadvance_alarm_hour1:
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
021C 0AAA      00632                                 incf ALARM_HOUR, F
               00633                                 SKIP_EQUAL2 ALARM_HOUR, D'12'
021D 300C          M         movlw literal
021E 022A          M         subwf reg, W
021F 1D03          M         btfss STATUS, Z
0220 2A23      00634                                 goto autoadvance_alarm_hour2
0221 3001      00635                                 movlw D'1'
0222 06AD      00636                                 xorwf ALARM_AMPM, F
0223           00637 autoadvance_alarm_hour2:
               00638                                 SKIP_EQUAL2 ALARM_HOUR, D'13'
0223 300D          M         movlw literal
0224 022A          M         subwf reg, W
0225 1D03          M         btfss STATUS, Z
0226 2A2A      00639                                 goto autoadvance_hour_done
               00640                                 SET_REGISTER ALARM_HOUR, D'1'
0227 3001          M         movlw literal
0228 00AA          M         movwf reg
0229 2A2A      00641                                 goto autoadvance_hour_done
               00642 
022A           00643 autoadvance_hour_done:
               00644                         SET_REGISTER SUBOPERATION_COUNTER, SUBOPERATION_DELAY2 ; set new delay
022A 3001          M         movlw literal
022B 00BE          M         movwf reg
022C 2377      00645                         call update_display
               00646 
022D           00647 autoadvance_minute:
               00648         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_SET_MINUTE
022D 3002          M         movlw literal
022E 027F          M         subwf reg, W
022F 1D03          M         btfss STATUS, Z
0230 2A4B      00649         goto timer_event_done2
               00650 
0231 0BBE      00651                 decfsz SUBOPERATION_COUNTER, F ; decrease suboperation counter and skip if 0
0232 2A4B      00652                 goto loop5
               00653 
               00654                         SKIP_EQUAL2 OPERATION, OPERATION_SET_TIME ; skip if setting time
0233 3001          M         movlw literal
0234 027E          M         subwf reg, W
0235 1D03          M         btfss STATUS, Z
0236 2A3F      00655                         goto autoadvance_alarm_minute1
0237           00656 autoadvance_time_minute1:
0237 0AA6      00657                                 incf CURRENT_MINUTE, F
               00658                                 SKIP_EQUAL2 CURRENT_MINUTE, D'60'
0238 303C          M         movlw literal
0239 0226          M         subwf reg, W
023A 1D03          M         btfss STATUS, Z
023B 2A47      00659                                 goto autoadvance_minute_done
               00660                                 SET_REGISTER CURRENT_MINUTE, D'0'
023C 3000          M         movlw literal
023D 00A6          M         movwf reg
023E 2A47      00661                                 goto autoadvance_minute_done
               00662 
023F           00663 autoadvance_alarm_minute1:
023F 0AAB      00664                                 incf ALARM_MINUTE, F
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00665                                 SKIP_EQUAL2 ALARM_MINUTE, D'60'
0240 303C          M         movlw literal
0241 022B          M         subwf reg, W
0242 1D03          M         btfss STATUS, Z
0243 2A47      00666                                 goto autoadvance_minute_done
               00667                                 SET_REGISTER ALARM_MINUTE, D'0'
0244 3000          M         movlw literal
0245 00AB          M         movwf reg
0246 2A47      00668                                 goto autoadvance_minute_done
               00669 
0247           00670 autoadvance_minute_done:
               00671                         SET_REGISTER SUBOPERATION_COUNTER, SUBOPERATION_DELAY2 ; set new delay
0247 3001          M         movlw literal
0248 00BE          M         movwf reg
0249 2377      00672                         call update_display
024A 2A4B      00673         goto loop5
               00674 
               00675 
024B           00676 timer_event_done2:
               00677 
               00678 
               00679 
               00680 
               00681 
               00682 
               00683 
               00684 ; update alarm status and play alarm sound
024B           00685 loop5:
024B 1283 1303 00686         BANKSEL ALARM_ON
024D 184E      00687         btfsc ALARM_ON, 0                   ; skip if alarm not playing
024E 2A67      00688         goto alarm_loop                     ; update alarm playback status
               00689 
               00690 ; test if alarm is enabled and current time matches alarm time
024F 1C2E      00691                 btfss ALARM_ENABLED, 0          ; skip if alarm enabled
0250 2A6D      00692                 goto alarm_done
               00693                 SKIP_EQUAL CURRENT_HOUR, ALARM_HOUR ; skip if hour matches
0251 0825          M         movf reg1, W
0252 022A          M         subwf reg2, W
0253 1D03          M         btfss STATUS, Z
0254 2A6D      00694                 goto alarm_done
               00695                 SKIP_EQUAL CURRENT_MINUTE, ALARM_MINUTE
0255 0826          M         movf reg1, W
0256 022B          M         subwf reg2, W
0257 1D03          M         btfss STATUS, Z
0258 2A6D      00696                 goto alarm_done
               00697                 SKIP_ZERO CURRENT_FRACSECONDH
0259 08BC          M         movf reg, F
025A 1D03          M         btfss STATUS, Z
025B 2A6D      00698                 goto alarm_done
               00699                 SKIP_ZERO CURRENT_FRACSECONDL
025C 08BD          M         movf reg, F
025D 1D03          M         btfss STATUS, Z
025E 2A6D      00700                 goto alarm_done
               00701                 SKIP_EQUAL CURRENT_AMPM, ALARM_AMPM
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
025F 0828          M         movf reg1, W
0260 022D          M         subwf reg2, W
0261 1D03          M         btfss STATUS, Z
0262 2A6D      00702                 goto alarm_done
0263 1C47      00703                 btfss IS_SET, 0                     ; skip if time set
0264 2A6D      00704                 goto alarm_done
               00705 
               00706 ; initialize alarm playback
0265 144E      00707                         bsf ALARM_ON, 0
0266 22F2      00708                         call start_alarm
               00709 
0267           00710 alarm_loop:
               00711 ; test if alarm is enabled and abort if not
0267 182E      00712         btfsc ALARM_ENABLED, 0              ; skip if alarm disabled
0268 2A6C      00713         goto alarm_loop1                    ; alarm still enabled
               00714 
               00715 
0269 230B      00716                 call stop_alarm
026A 01CE      00717                 clrf ALARM_ON                   ; stop playback
026B 2A6D      00718                 goto alarm_done
               00719 
026C           00720 alarm_loop1:
026C 230E      00721         call update_alarm
               00722 
026D           00723 alarm_done:
               00724 
               00725 
               00726 
               00727 
               00728 
               00729 
               00730 ; update alarm preview status
026D           00731 loop6:
026D 1C54      00732         btfss ALARM_PREVIEW, 0  ; skip if alarm previewing
026E 2A78      00733         goto alarm_preview_done
               00734                 SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM ; skip if still in set alarm mode
026F 3004          M         movlw literal
0270 027E          M         subwf reg, W
0271 1D03          M         btfss STATUS, Z
0272 2A75      00735                 goto alarm_preview1
0273 230E      00736                         call update_alarm
0274 2A78      00737                         goto alarm_preview_done
               00738 
               00739 ; left set alarm mode
0275           00740 alarm_preview1:
0275 230B      00741                 call stop_alarm
0276 01D4      00742                 clrf ALARM_PREVIEW
0277 2A78      00743                 goto alarm_preview_done
               00744 
0278           00745 alarm_preview_done:
               00746 
               00747 
               00748 
               00749 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00750 
               00751 
               00752 
               00753 ; update thermometer in thermometer and auto temperature modes
               00754 ; can't use in auto time mode because of inaccuracy
0278           00755 loop7:
               00756         SKIP_NOTEQUAL2 OPERATION, OPERATION_THERMOMETER
0278 3007          M         movlw literal
0279 027E          M         subwf reg1, W
027A 1903          M         btfsc STATUS, Z
027B 2A84      00757         goto thermometer_event
               00758         SKIP_EQUAL2 OPERATION, OPERATION_AUTO
027C 3009          M         movlw literal
027D 027E          M         subwf reg, W
027E 1D03          M         btfss STATUS, Z
027F 2A9C      00759         goto loop8
               00760         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_TEMP
0280 3004          M         movlw literal
0281 027F          M         subwf reg, W
0282 1D03          M         btfss STATUS, Z
0283 2A9C      00761         goto loop8
               00762 
0284           00763 thermometer_event:
0284 1283 1303 00764         BANKSEL ADCON0
0286 191F      00765         btfsc ADCON0, 2                 ; skip if conversion complete
0287 2A9C      00766         goto loop8
               00767 
0288 0BD1      00768                 decfsz THERMOMETER_COUNTER2, F  ; skip if next precharge complete
0289 2A9C      00769                 goto loop8
               00770 
               00771                 SET_REGISTER THERMOMETER_COUNTER2, THERMOMETER_PRECHARGE ; reset precharge counter
028A 30FF          M         movlw literal
028B 00D1          M         movwf reg
028C 1283 1303 00772                 BANKSEL ADRESH         ; get high byte of a/d conversion
028E 081E      00773                 movf ADRESH, W
028F 1283 1303 00774                 BANKSEL THERMOMETER_INPUT ; convert to temperature
0291 00C0      00775                 movwf THERMOMETER_INPUT
0292 247B      00776                 call get_temperature
               00777 
0293 07C1      00778                 addwf THERMOMETER_VALUEL, F ; add temperature to accumulator
0294 1803      00779                 btfsc STATUS, C             ; carry the 256
0295 0AC2      00780                 incf THERMOMETER_VALUEH, F
               00781 
0296 0BC8      00782                 decfsz THERMOMETER_COUNTER, F ; decrease accumulator counter
0297 2A9B      00783                 goto thermometer2
               00784 
               00785 
0298 2377      00786                         call update_display      ; draw temperature on display
0299 01C1      00787                         clrf THERMOMETER_VALUEL
029A 01C2      00788                         clrf THERMOMETER_VALUEH
               00789 
               00790                         
               00791 
               00792 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
029B           00793 thermometer2:
029B 151F      00794                         bsf ADCON0, 2               ; start next conversion
               00795 
               00796 
               00797 
               00798 
               00799 ; update beep
029C           00800 loop8:
029C 1C59      00801         btfss BEEP_ON, 0
029D 2A9F      00802         goto beep_done
029E 22C7      00803                 call update_beep
               00804 
029F           00805 beep_done:
               00806 
               00807 
               00808 
               00809 
               00810 
029F           00811 loop9:
               00812         SKIP_ZERO SWITCH_COUNTDOWNH      ; update switch counter if > 0
029F 08E5          M         movf reg, F
02A0 1D03          M         btfss STATUS, Z
02A1 2AA6      00813         goto decrease_countdown
               00814         SKIP_ZERO SWITCH_COUNTDOWNL
02A2 08E6          M         movf reg, F
02A3 1D03          M         btfss STATUS, Z
02A4 2AA6      00815         goto decrease_countdown
02A5 2856      00816         goto loop
               00817 
02A6           00818 decrease_countdown:
02A6 3001      00819         movlw H'1'
02A7 02E6      00820         subwf SWITCH_COUNTDOWNL, F ; decrease switch countdown low
02A8 1803      00821         btfsc STATUS, C            ; skip if result negative
02A9 2856      00822         goto loop
               00823 
02AA 02E5      00824         subwf SWITCH_COUNTDOWNH, F ; decrease switch countdown high
02AB 2856      00825         goto loop
               00826 
               00827 
               00828 
               00829 
               00830 
02AC           00831 start_beep:
02AC 184E      00832         btfsc ALARM_ON, 0         ; skip if alarm not playing
02AD 0008      00833         return                    ; abort if alarm playing
02AE 1854      00834         btfsc ALARM_PREVIEW, 0    ; skip if alarm not previewing
02AF 0008      00835         return                    ; abort if alarm previewing
               00836 
02B0 1459      00837         bsf BEEP_ON, 0
               00838         SET_REGISTER CCP2CON, B'00001010' ; set capture/compare 2 for interrupt on match
02B1 300A          M         movlw literal
02B2 009D          M         movwf reg
               00839         COPY_REGISTER BEEP_PTRH, BEEP_SONGH ; point to first note of current song
02B3 085E          M         movf src, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02B4 00E2          M         movwf dst
               00840         COPY_REGISTER BEEP_PTRL, BEEP_SONGL
02B5 085F          M         movf src, W
02B6 00E3          M         movwf dst
               00841         SET_REGISTER T2CON, B'01111111' ; set timer 2 to time notes
02B7 307F          M         movlw literal
02B8 0092          M         movwf reg
02B9 1683 1303 00842         BANKSEL PR2
               00843         SET_REGISTER PR2, NOTE_DURATION_TIMER
02BB 3014          M         movlw literal
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
02BC 0092          M         movwf reg
02BD 1283 1303 00844         BANKSEL BEEP_PERIODH
02BF 1406      00845         bsf PORTB, 0
02C0 24E4      00846         call get_beep_note
               00847 ; set first half period and force first half period update
               00848         COPY_REGISTER CCPR2H, TMR1H
02C1 080F          M         movf src, W
02C2 009C          M         movwf dst
               00849         COPY_REGISTER CCPR2L, TMR1L
02C3 080E          M         movf src, W
02C4 009B          M         movwf dst
02C5 14E4      00850         bsf BEEP_DURATION_FLAG, 1
02C6 0008      00851         return
               00852 
               00853 
               00854 
               00855 
               00856 
               00857 
               00858 
               00859 
02C7           00860 update_beep:
02C7 188C      00861         btfsc PIR1, TMR2IF              ; skip if note duration timer flag is off
02C8 2ACB      00862         goto update_beep2
02C9 1C64      00863         btfss BEEP_DURATION_FLAG, 0     ; skip if copy of note duration timer flag is on
02CA 2ADA      00864         goto update_beep3
               00865 
02CB           00866 update_beep2:
02CB 108C      00867                 bcf PIR1, TMR2IF            ; reset timer flag
02CC 1064      00868                 bcf BEEP_DURATION_FLAG, 0
02CD 3001      00869                 movlw H'1'                  ; decrease note duration
02CE 02DD      00870                 subwf BEEP_DURATIONL, F
02CF 1C03      00871                 btfss STATUS, C
02D0 03DC      00872                 decf BEEP_DURATIONH, F
               00873 
               00874                 SKIP_EQUAL2 BEEP_DURATIONH, H'ff'  ; test if duration 0
02D1 30FF          M         movlw literal
02D2 025C          M         subwf reg, W
02D3 1D03          M         btfss STATUS, Z
02D4 2ADA      00875                 goto update_beep3
               00876                 SKIP_EQUAL2 BEEP_DURATIONL, H'ff'
02D5 30FF          M         movlw literal
02D6 025D          M         subwf reg, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02D7 1D03          M         btfss STATUS, Z
02D8 2ADA      00877                 goto update_beep3
               00878 
02D9 24E4      00879                         call get_beep_note            ; read next beep note
               00880 
02DA           00881 update_beep3:
02DA 1C59      00882         btfss BEEP_ON, 0                 ; skip if beep still on
02DB 0008      00883         return
               00884 
               00885 ; test if half period finished and abort if not
02DC 1C0D      00886         btfss PIR2, CCP2IF               ; skip if next half period
02DD 0008      00887         return
               00888 
               00889                 SKIP_EQUAL2 BEEP_PERIODH, HIGH(REST) ; silence speaker during rest
02DE 3013          M         movlw literal
02DF 025A          M         subwf reg, W
02E0 1D03          M         btfss STATUS, Z
02E1 2AE8      00890                 goto update_beep4
               00891                 SKIP_EQUAL2 BEEP_PERIODL, LOW(REST)
02E2 3088          M         movlw literal
02E3 025B          M         subwf reg, W
02E4 1D03          M         btfss STATUS, Z
02E5 2AE8      00892                 goto update_beep4
               00893 
02E6 1006      00894                 bcf PORTB, 0
02E7 2AEA      00895                 goto update_beep5
               00896 
02E8           00897 update_beep4:
02E8 3001      00898                 movlw H'1'                     ; invert speaker voltage
02E9 0686      00899                 xorwf PORTB, f
               00900 
02EA           00901 update_beep5:
02EA 100D      00902                 bcf PIR2, CCP2IF               ; clear interrupt
               00903 
02EB 085B      00904                 movf BEEP_PERIODL, W           ; add half period to capture/compare 2
02EC 079B      00905                 addwf CCPR2L, F
02ED 1803      00906                 btfsc STATUS, C
02EE 0A9C      00907                 incf CCPR2H, F                 ; carry the 256
02EF 085A      00908                 movf BEEP_PERIODH, W
02F0 079C      00909                 addwf CCPR2H, F                ; let wrap around
02F1 0008      00910                 return
               00911 
               00912 
               00913 
               00914 
               00915 
               00916 
               00917 
               00918 
02F2           00919 start_alarm:
               00920         SET_REGISTER CCP2CON, B'00001010' ; set capture/compare 2 for interrupt on match
02F2 300A          M         movlw literal
02F3 009D          M         movwf reg
               00921         COPY_REGISTER ALARM_PTRH, ALARM_SONGH ; point to first note of current song
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02F4 0855          M         movf src, W
02F5 00CA          M         movwf dst
               00922         COPY_REGISTER ALARM_PTRL, ALARM_SONGL
02F6 0856          M         movf src, W
02F7 00CB          M         movwf dst
               00923         SET_REGISTER T2CON, B'01111111' ; set timer 2 to time notes
02F8 307F          M         movlw literal
02F9 0092          M         movwf reg
02FA 1683 1303 00924         BANKSEL PR2
               00925         SET_REGISTER PR2, NOTE_DURATION_TIMER
02FC 3014          M         movlw literal
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
02FD 0092          M         movwf reg
               00926 
02FE 1283 1303 00927         BANKSEL ALARM_PERIODH
0300 2490      00928         call get_alarm_note
               00929 ; set first half period and force first half period update
               00930         COPY_REGISTER CCPR2H, TMR1H
0301 080F          M         movf src, W
0302 009C          M         movwf dst
               00931         COPY_REGISTER CCPR2L, TMR1L
0303 080E          M         movf src, W
0304 009B          M         movwf dst
0305 148C      00932         bsf PIR1, TMR2IF
               00933 
               00934 ; cause alarm to stop playing after a certain amount of time
               00935         SET_REGISTER ALARM_TIMEOUT_COUNTERH, HIGH(ALARM_TIMEOUT)
0306 3001          M         movlw literal
0307 00D2          M         movwf reg
               00936         SET_REGISTER ALARM_TIMEOUT_COUNTERL, LOW(ALARM_TIMEOUT)
0308 30E0          M         movlw literal
0309 00D3          M         movwf reg
030A 0008      00937         return
               00938 
               00939 
               00940 
               00941 
               00942 
               00943 
030B           00944 stop_alarm:
030B 1006      00945         bcf PORTB, 0
030C 0192      00946         clrf T2CON      ; stop timer
030D 0008      00947         return
               00948 
               00949 
               00950 
               00951 
               00952 
030E           00953 update_alarm:
               00954         SKIP_ZERO ALARM_TIMEOUT_COUNTERH     ; skip if timeout counter 0
030E 08D2          M         movf reg, F
030F 1D03          M         btfss STATUS, Z
0310 2B18      00955         goto update_alarm5
               00956         SKIP_ZERO ALARM_TIMEOUT_COUNTERL     ; skip if timeout counter 0
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0311 08D3          M         movf reg, F
0312 1D03          M         btfss STATUS, Z
0313 2B18      00957         goto update_alarm5
0314 01CE      00958                 clrf ALARM_ON        ; disable alarm if timed out
0315 01D4      00959                 clrf ALARM_PREVIEW
0316 230B      00960                 call stop_alarm
0317 0008      00961                 return
               00962 
0318           00963 update_alarm5:
0318 1C8C      00964         btfss PIR1, TMR2IF                  ; skip if note timer flag
0319 2B29      00965         goto update_alarm2
               00966 
031A 108C      00967                 bcf PIR1, TMR2IF
031B 1464      00968                 bsf BEEP_DURATION_FLAG, 0       ; propagate interrupt to beep routine
031C 3001      00969                 movlw H'1'
031D 02CF      00970                 subwf ALARM_DURATIONL, F
031E 1C03      00971                 btfss STATUS, C                 ; skip if positive
031F 03C9      00972                 decf ALARM_DURATIONH, F         ; carry the 256
               00973                 
               00974                 SKIP_EQUAL2 ALARM_DURATIONH, H'ff'  ; test if duration empty
0320 30FF          M         movlw literal
0321 0249          M         subwf reg, W
0322 1D03          M         btfss STATUS, Z
0323 2B29      00975                 goto update_alarm2
               00976                 SKIP_EQUAL2 ALARM_DURATIONL, H'ff'
0324 30FF          M         movlw literal
0325 024F          M         subwf reg, W
0326 1D03          M         btfss STATUS, Z
0327 2B29      00977                 goto update_alarm2
               00978 
0328 2490      00979                         call get_alarm_note                   ; read next note
               00980 
               00981 
0329           00982 update_alarm2:
               00983 ; test if half period finished and abort if not
0329 1C0D      00984         btfss PIR2, CCP2IF                  ; skip if next half period
032A 0008      00985         return
               00986 
               00987                 SKIP_EQUAL2 ALARM_PERIODH, HIGH(REST) ; keep speaker off during rest
032B 3013          M         movlw literal
032C 0245          M         subwf reg, W
032D 1D03          M         btfss STATUS, Z
032E 2B35      00988                 goto update_alarm3
               00989                 SKIP_EQUAL2 ALARM_PERIODL, LOW(REST)
032F 3088          M         movlw literal
0330 0246          M         subwf reg, W
0331 1D03          M         btfss STATUS, Z
0332 2B35      00990                 goto update_alarm3
               00991 
0333 1006      00992                 bcf PORTB, 0
0334 2B37      00993                 goto update_alarm4
               00994 
0335           00995 update_alarm3:
0335 3001      00996                 movlw H'1'                      ; invert speaker voltage
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0336 0686      00997                 xorwf PORTB, F
               00998 
0337           00999 update_alarm4:
0337 100D      01000                 bcf PIR2, CCP2IF                ; clear interrupt
               01001 
0338 0846      01002                 movf ALARM_PERIODL, W           ; add half period to capture/compare 2
0339 079B      01003                 addwf CCPR2L, F
033A 1803      01004                 btfsc STATUS, C
033B 0A9C      01005                 incf CCPR2H, F                  ; carry the 256
033C 0845      01006                 movf ALARM_PERIODH, W
033D 079C      01007                 addwf CCPR2H, F                 ; let wrap around
033E 0008      01008                 return
               01009 
               01010 
               01011 
               01012 ; change alarm song
033F           01013 next_song:
               01014         SKIP_EQUAL2 ALARM_SONGH, HIGH(alarm_song1)
033F 3005          M         movlw literal
0340 0255          M         subwf reg, W
0341 1D03          M         btfss STATUS, Z
0342 2B50      01015         goto next_song1
               01016         SKIP_EQUAL2 ALARM_SONGL, LOW(alarm_song1)
0343 303F          M         movlw literal
0344 0256          M         subwf reg, W
0345 1D03          M         btfss STATUS, Z
0346 2B50      01017         goto next_song1
               01018 
               01019                 SET_REGISTER ALARM_SONGH, HIGH(alarm_song2)
0347 3005          M         movlw literal
0348 00D5          M         movwf reg
               01020                 SET_REGISTER ALARM_SONGL, LOW(alarm_song2)
0349 3093          M         movlw literal
034A 00D6          M         movwf reg
               01021                 SET_REGISTER ALARM_ENDH, HIGH(alarm_end2)
034B 3005          M         movlw literal
034C 00D7          M         movwf reg
               01022                 SET_REGISTER ALARM_ENDL, LOW(alarm_end2)
034D 30C3          M         movlw literal
034E 00D8          M         movwf reg
034F 0008      01023                 return
               01024 
0350           01025 next_song1:
               01026         SKIP_EQUAL2 ALARM_SONGH, HIGH(alarm_song2)
0350 3005          M         movlw literal
0351 0255          M         subwf reg, W
0352 1D03          M         btfss STATUS, Z
0353 2B61      01027         goto next_song2
               01028         SKIP_EQUAL2 ALARM_SONGL, LOW(alarm_song2)
0354 3093          M         movlw literal
0355 0256          M         subwf reg, W
0356 1D03          M         btfss STATUS, Z
0357 2B61      01029         goto next_song2
               01030 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01031                 SET_REGISTER ALARM_SONGH, HIGH(alarm_song3)
0358 3005          M         movlw literal
0359 00D5          M         movwf reg
               01032                 SET_REGISTER ALARM_SONGL, LOW(alarm_song3)
035A 30C3          M         movlw literal
035B 00D6          M         movwf reg
               01033                 SET_REGISTER ALARM_ENDH, HIGH(alarm_end3)
035C 3006          M         movlw literal
035D 00D7          M         movwf reg
               01034                 SET_REGISTER ALARM_ENDL, LOW(alarm_end3)
035E 3047          M         movlw literal
035F 00D8          M         movwf reg
0360 0008      01035                 return
               01036 
0361           01037 next_song2:
               01038         SET_REGISTER ALARM_SONGH, HIGH(alarm_song1)
0361 3005          M         movlw literal
0362 00D5          M         movwf reg
               01039         SET_REGISTER ALARM_SONGL, LOW(alarm_song1)
0363 303F          M         movlw literal
0364 00D6          M         movwf reg
               01040         SET_REGISTER ALARM_ENDH, HIGH(alarm_end1)
0365 3005          M         movlw literal
0366 00D7          M         movwf reg
               01041         SET_REGISTER ALARM_ENDL, LOW(alarm_end1)
0367 3093          M         movlw literal
0368 00D8          M         movwf reg
0369 0008      01042         return
               01043 
               01044 
               01045 
               01046 
               01047 
               01048 
036A           01049 start_thermometer:
               01050 ; configure a/d converter
036A 1683 1303 01051         BANKSEL ADCON1
               01052         SET_REGISTER ADCON1, B'01001111'
036C 304F          M         movlw literal
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
036D 009F          M         movwf reg
036E 1283 1303 01053         BANKSEL ADCON0
               01054         SET_REGISTER ADCON0, B'11000101'
0370 30C5          M         movlw literal
0371 009F          M         movwf reg
               01055         SET_REGISTER THERMOMETER_COUNTER, D'1' ; force display update on first cycle
0372 3001          M         movlw literal
0373 00C8          M         movwf reg
               01056         SET_REGISTER THERMOMETER_COUNTER2, D'1' ; force precharge complete on first cycle
0374 3001          M         movlw literal
0375 00D1          M         movwf reg
0376 0008      01057         return
               01058 
               01059 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01060 
               01061 
               01062 ; update display for current operation
0377           01063 update_display:
               01064 ; switch statement
0377 1283 1303 01065         BANKSEL OPERATION
0379 01A0      01066         clrf DISPLAY_BITMASK0
037A 01A1      01067         clrf DISPLAY_BITMASK1
037B 01A2      01068         clrf DISPLAY_BITMASK2
037C 01A3      01069         clrf DISPLAY_BITMASK3
               01070 
               01071 ; these are always displayed
               01072 ; set alarm enabled
037D 13A0      01073         bcf DISPLAY_BITMASK0, 7             ; default to 0 for alarm bit
037E 182E      01074         btfsc ALARM_ENABLED, 0              ; skip if alarm disabled
037F 17A0      01075         bsf DISPLAY_BITMASK0, 7             ; set alarm bit to 1
0380           01076 alarm_enabled1:
               01077 
               01078 ; set heroine icon to always on
0380 1720      01079         bsf DISPLAY_BITMASK0, 6
               01080 
               01081 
               01082 
               01083 
               01084 ; operation == current time || set time || auto && suboperation time
               01085         SKIP_NOTEQUAL2 OPERATION, OPERATION_CURRENT_TIME
0381 3000          M         movlw literal
0382 027E          M         subwf reg1, W
0383 1903          M         btfsc STATUS, Z
0384 2B91      01086         goto display_current_time
               01087         SKIP_NOTEQUAL2 OPERATION, OPERATION_SET_TIME
0385 3001          M         movlw literal
0386 027E          M         subwf reg1, W
0387 1903          M         btfsc STATUS, Z
0388 2B91      01088         goto display_current_time
               01089         SKIP_EQUAL2 OPERATION, OPERATION_AUTO
0389 3009          M         movlw literal
038A 027E          M         subwf reg, W
038B 1D03          M         btfss STATUS, Z
038C 2BAE      01090         goto update_display2
               01091         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_TIME
038D 3003          M         movlw literal
038E 027F          M         subwf reg, W
038F 1D03          M         btfss STATUS, Z
0390 2BAE      01092         goto update_display2
               01093 
0391           01094 display_current_time:
               01095 ; only display when dots are on if not set
0391 1847      01096         btfsc IS_SET, 0
0392 2B96      01097         goto display_current_time1
               01098 
0393 1829      01099         btfsc CURRENT_DOTS, 0
0394 2B96      01100         goto display_current_time1
0395 2BAC      01101         goto display_current_time2
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01102 
0396           01103 display_current_time1:
               01104 ; set ampm
0396 1828      01105         btfsc CURRENT_AMPM, 0               ; skip if ampm is disabled
0397 16A0      01106         bsf DISPLAY_BITMASK0, 5             ; set ampm bit to 1
               01107 
               01108 ; set dots
0398 1829      01109         btfsc CURRENT_DOTS, 0               ; skip if dots are disabled
0399 1520      01110         bsf DISPLAY_BITMASK0, 2             ; set dots to 1
               01111 
               01112 ; load hours
               01113         COPY_REGISTER ONES, CURRENT_HOUR ; load current hour into argument
039A 0825          M         movf src, W
039B 00AF          M         movwf dst
039C 2433      01114         call divide                         ; convert into tens and ones
               01115 
039D 3018      01116         movlw B'00011000'                   ; assume hours >= 10
039E 1830      01117         btfsc TENS, 0                       ; skip if tens == 0
039F 07A0      01118         addwf DISPLAY_BITMASK0, F           ; set hours tens to 1
               01119 
03A0 082F      01120         movf ONES, W                        ; get ones
03A1 2467      01121         call get_bitmask                    ; get bitmask
03A2 00A1      01122         movwf DISPLAY_BITMASK1              ; store in display bitmask
               01123 
               01124 ; load minutes
               01125         COPY_REGISTER ONES, CURRENT_MINUTE ; divide minutes into tens and ones
03A3 0826          M         movf src, W
03A4 00AF          M         movwf dst
03A5 2433      01126         call divide
               01127 
03A6 0830      01128         movf TENS, W                        ; set bitmask for tens
03A7 2467      01129         call get_bitmask
03A8 00A2      01130         movwf DISPLAY_BITMASK2
               01131 
03A9 082F      01132         movf ONES, w                        ; set bitmask for ones
03AA 2467      01133         call get_bitmask
03AB 00A3      01134         movwf DISPLAY_BITMASK3
               01135 
03AC           01136 display_current_time2:
03AC 2447      01137         call load_display                   ; update display register
               01138 
03AD 0008      01139         return
               01140 
               01141 
               01142 
               01143 
               01144 
03AE           01145 update_display2:
               01146         SKIP_EQUAL2 OPERATION, OPERATION_SET_ALARM
03AE 3004          M         movlw literal
03AF 027E          M         subwf reg, W
03B0 1D03          M         btfss STATUS, Z
03B1 2BCA      01147         goto update_display6
               01148 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03B2           01149 display_alarm_time:
               01150 ; set ampm
03B2 182D      01151         btfsc ALARM_AMPM, 0               ; skip if ampm is disabled
03B3 16A0      01152         bsf DISPLAY_BITMASK0, 5           ; set ampm bit to 1
               01153 
               01154 ; set dots
03B4 1829      01155         btfsc CURRENT_DOTS, 0               ; skip if dots are disabled
03B5 1520      01156         bsf DISPLAY_BITMASK0, 2             ; set dots to 1
               01157 
               01158 ; load hours
               01159         COPY_REGISTER ONES, ALARM_HOUR ; load current hour into argument
03B6 082A          M         movf src, W
03B7 00AF          M         movwf dst
03B8 2433      01160         call divide                         ; convert into tens and ones
               01161 
03B9 3018      01162         movlw B'00011000'                   ; assume hours >= 10
03BA 1830      01163         btfsc TENS, 0                       ; skip if tens == 0
03BB 07A0      01164         addwf DISPLAY_BITMASK0, F           ; set hours tens to 1
               01165 
03BC 082F      01166         movf ONES, W                        ; get ones
03BD 2467      01167         call get_bitmask                    ; get bitmask
03BE 00A1      01168         movwf DISPLAY_BITMASK1              ; store in display bitmask
               01169 
               01170 ; load minutes
               01171         COPY_REGISTER ONES, ALARM_MINUTE ; divide minutes into tens and ones
03BF 082B          M         movf src, W
03C0 00AF          M         movwf dst
03C1 2433      01172         call divide
               01173 
03C2 0830      01174         movf TENS, W                        ; set bitmask for tens
03C3 2467      01175         call get_bitmask
03C4 00A2      01176         movwf DISPLAY_BITMASK2
               01177 
03C5 082F      01178         movf ONES, w                        ; set bitmask for ones
03C6 2467      01179         call get_bitmask
03C7 00A3      01180         movwf DISPLAY_BITMASK3
               01181 
03C8 2447      01182         call load_display                   ; update display register
               01183 
03C9 0008      01184         return
               01185 
               01186 
               01187 
               01188 
03CA           01189 update_display6:
               01190 ; operation == thermometer || auto && suboperation temp
               01191         SKIP_NOTEQUAL2 OPERATION, OPERATION_THERMOMETER
03CA 3007          M         movlw literal
03CB 027E          M         subwf reg1, W
03CC 1903          M         btfsc STATUS, Z
03CD 2BD6      01192         goto update_thermometer
               01193         SKIP_EQUAL2 OPERATION, OPERATION_AUTO
03CE 3009          M         movlw literal
03CF 027E          M         subwf reg, W
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03D0 1D03          M         btfss STATUS, Z
03D1 2BEC      01194         goto update_display9
               01195         SKIP_EQUAL2 SUBOPERATION, SUBOPERATION_TEMP
03D2 3004          M         movlw literal
03D3 027F          M         subwf reg, W
03D4 1D03          M         btfss STATUS, Z
03D5 2BEC      01196         goto update_display9
               01197 
               01198 
03D6           01199 update_thermometer:
03D6 01C4      01200         clrf DISPLAY_0                      ; don't display leading 0
               01201 
               01202         COPY_REGISTER ONES, THERMOMETER_VALUEH ; load thermometer value into argument
03D7 0842          M         movf src, W
03D8 00AF          M         movwf dst
03D9 2433      01203         call divide                         ; convert into hundreds, tens and ones
               01204 
03DA 0843      01205         movf HUNDREDS, W
03DB 1903      01206         btfsc STATUS, Z                     ; skip if non zero
03DC 2BE0      01207         goto thermometer_tens               ; ignore leading 0
               01208 
03DD 2467      01209         call get_bitmask
03DE 00A1      01210         movwf DISPLAY_BITMASK1
03DF 1444      01211         bsf DISPLAY_0, 0
               01212 
03E0           01213 thermometer_tens:
03E0 0830      01214         movf TENS, W
03E1 1D03      01215         btfss STATUS, Z                     ; skip if zero
03E2 2BE5      01216         goto thermometer_tens1
03E3 1C44      01217         btfss DISPLAY_0, 0                  ; skip if display leading 0
03E4 2BE7      01218         goto thermometer_ones               ; don't display 0
               01219 
03E5           01220 thermometer_tens1:
03E5 2467      01221         call get_bitmask
03E6 00A2      01222         movwf DISPLAY_BITMASK2
               01223 
03E7           01224 thermometer_ones:
03E7 082F      01225         movf ONES, W
03E8 2467      01226         call get_bitmask
03E9 00A3      01227         movwf DISPLAY_BITMASK3
               01228 
03EA 2447      01229         call load_display
03EB 0008      01230         return
               01231 
               01232 
               01233 
               01234 
03EC           01235 update_display9:
               01236         SKIP_EQUAL2 OPERATION, OPERATION_TEST
03EC 3008          M         movlw literal
03ED 027E          M         subwf reg, W
03EE 1D03          M         btfss STATUS, Z
03EF 0008      01237         return
               01238 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01239 
               01240 
               01241 
               01242 ; set all LEDs to on
03F0 30FF      01243         movlw B'11111111'
03F1 00A0      01244         movwf DISPLAY_BITMASK0
03F2 30FF      01245         movlw B'11111111'
03F3 00A1      01246         movwf DISPLAY_BITMASK1
03F4 30FF      01247         movlw B'11111111'
03F5 00A2      01248         movwf DISPLAY_BITMASK2
03F6 30FF      01249         movlw B'11111111'
03F7 00A3      01250         movwf DISPLAY_BITMASK3
               01251 
               01252         
               01253         IF 0
               01254 ; subtract leds depending on switch status
               01255 ; alarm enable
               01256         movlw B'00011000'
               01257         btfsc SWITCH_STATUS, SWITCH_ALARM_ENABLE
               01258                 xorwf DISPLAY_BITMASK0, F
               01259 
               01260 ; hours
               01261         movlw B'00000110'
               01262         btfsc SWITCH_STATUS, SWITCH_HOUR
               01263                 xorwf DISPLAY_BITMASK1, F
               01264 
               01265 ; minutes
               01266         movlw B'01010000'
               01267         btfsc SWITCH_STATUS, SWITCH_MINUTE
               01268                 xorwf DISPLAY_BITMASK1, F
               01269 
               01270 ; set time
               01271         movlw B'00000110'
               01272         btfsc SWITCH_STATUS, SWITCH_TIME_SET
               01273                 xorwf DISPLAY_BITMASK2, F
               01274 
               01275 ; set alarm
               01276         movlw B'01010000'
               01277         btfsc SWITCH_STATUS, SWITCH_ALARM_SET
               01278                 xorwf DISPLAY_BITMASK2, F
               01279 
               01280 ; mode
               01281         movlw B'00000110'
               01282         btfsc SWITCH_STATUS, SWITCH_MODE
               01283         xorwf DISPLAY_BITMASK3, F
               01284         ENDIF
               01285 
03F8 2447      01286         call load_display
               01287 
03F9 0008      01288         return
               01289 
               01290 
               01291 ; put status of switches in SWITCH_STATUS_NEW
03FA           01292 get_switches:
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03FA 0BCC      01293         decfsz SWITCH_COUNTER, F            ; decrease counter.  skip if 0
03FB 0008      01294         return                              ; not ready for next sample
               01295         SET_REGISTER SWITCH_COUNTER, SWITCH_SAMPLERATE
03FC 3040          M         movlw literal
03FD 00CC          M         movwf reg
               01296         
               01297 
03FE 3012      01298         movlw B'00010010'       ; invert logic on switches with inverted logic
03FF 0608      01299         xorwf PORTD, W
0400 39FA      01300         andlw B'11111010'
               01301         
0401 00B3      01302         movwf SWITCH_STATUS_NEW
               01303 
               01304 
               01305 
               01306         DEBOUNCE B'10000000', SWITCH0_ACCUM
0402 3080          M         movlw bitmask
0403 00BB          M         movwf DEBOUNCE_MASK
0404 3035          M         movlw accumulator
0405 241B          M         call debounce
               01307         DEBOUNCE B'01000000', SWITCH1_ACCUM
0406 3040          M         movlw bitmask
0407 00BB          M         movwf DEBOUNCE_MASK
0408 3036          M         movlw accumulator
0409 241B          M         call debounce
               01308         DEBOUNCE B'00100000', SWITCH2_ACCUM
040A 3020          M         movlw bitmask
040B 00BB          M         movwf DEBOUNCE_MASK
040C 3037          M         movlw accumulator
040D 241B          M         call debounce
               01309         DEBOUNCE B'00010000', SWITCH3_ACCUM
040E 3010          M         movlw bitmask
040F 00BB          M         movwf DEBOUNCE_MASK
0410 3038          M         movlw accumulator
0411 241B          M         call debounce
               01310         DEBOUNCE B'00001000', SWITCH4_ACCUM
0412 3008          M         movlw bitmask
0413 00BB          M         movwf DEBOUNCE_MASK
0414 3039          M         movlw accumulator
0415 241B          M         call debounce
               01311         DEBOUNCE B'00000010', SWITCH5_ACCUM
0416 3002          M         movlw bitmask
0417 00BB          M         movwf DEBOUNCE_MASK
0418 303A          M         movlw accumulator
0419 241B          M         call debounce
               01312 
               01313 
041A 0008      01314         return
               01315 
               01316 
               01317 
               01318 
               01319 
               01320 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01321 
               01322 
               01323 
               01324 
               01325 ; debounce a switch.  SWITCH_STATUS_NEW is changed based on switch accumulator
041B           01326 debounce:
041B 0084      01327         movwf FSR                           ; store debounce accumulator in file select register
               01328 
               01329 
041C 083B      01330         movf DEBOUNCE_MASK, W               ; get bit of switch
041D 0533      01331         andwf SWITCH_STATUS_NEW, W
041E 1903      01332         btfsc STATUS, Z                     ; skip if switch on
041F 2C25      01333         goto debounce_off
               01334 
               01335         SKIP_EQUAL2 INDF, H'ff'              ; increase accumulator.
0420 30FF          M         movlw literal
0421 0200          M         subwf reg, W
0422 1D03          M         btfss STATUS, Z
0423 0A80      01336         incf INDF, F
0424 2C28      01337         goto debounce_done
               01338 
0425           01339 debounce_off:
               01340         SKIP_ZERO INDF
0425 0880          M         movf reg, F
0426 1D03          M         btfss STATUS, Z
0427 0380      01341         decf INDF, F
               01342 
0428           01343 debounce_done:
               01344         SKIP_GREATEREQUAL INDF, H'80'       ; skip if accumulator >= threshold
0428 3080          M         movlw literal
0429 0200          M         subwf reg, W
042A 1C03          M         btfss STATUS, C
042B 2C2F      01345         goto debounce_disable
               01346 
042C           01347 debounce_enable:
042C 083B      01348         movf DEBOUNCE_MASK, W               ; set switch to on
042D 04B3      01349         iorwf SWITCH_STATUS_NEW, F
042E 0008      01350         return
               01351 
042F           01352 debounce_disable:
042F 083B      01353         movf DEBOUNCE_MASK, W
0430 3AFF      01354         xorlw B'11111111'
0431 05B3      01355         andwf SWITCH_STATUS_NEW, F          ; force bit 0 in mask
0432 0008      01356         return
               01357 
               01358 
               01359 
               01360 
               01361 
               01362 
               01363 
               01364 ; get the number in the tens place and the ones place
               01365 ; ONES set by user with whole number.  Returned with ones.
               01366 ; TENS Returned with tens.
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01367 ; HUNDREDS Returned with hundreds
0433           01368 divide:
0433 1283 1303 01369         BANKSEL ONES
0435 30FF      01370         movlw H'ff'                         ; reset hundreds and tens counters to one less than results
0436 00B0      01371         movwf TENS
0437 00C3      01372         movwf HUNDREDS
               01373 
0438 3064      01374         movlw D'100'                        ; load denominator
0439           01375 hundreds_loop:
0439 0AC3      01376         incf HUNDREDS, F                    ; assume numerator > 100
043A 02AF      01377         subwf ONES, F                       ; subtract 100 from numerator
043B 1803      01378         btfsc STATUS, C                     ; skip if remainder < 0
043C 2C39      01379         goto hundreds_loop
043D 3064      01380         movlw D'100'                        ; restore last positive numerator
043E 07AF      01381         addwf ONES, F
               01382 
043F 300A      01383         movlw D'10'                         ; load denominator
0440           01384 tens_loop:
0440 0AB0      01385         incf TENS, F                        ; assume numerator > denominator and increase tens
0441 02AF      01386         subwf ONES, F                       ; subtract 10 from numerator
0442 1803      01387         btfsc STATUS, C                     ; skip if remainder is < 0
0443 2C40      01388         goto tens_loop                      ; remainder is >= 0
0444 300A      01389         movlw D'10'                         ; restore last positive numerator
0445 07AF      01390         addwf ONES,F
0446 0008      01391         return
               01392 
               01393         
               01394 
               01395 
               01396 
               01397 
               01398 
               01399 
               01400 ; load the display bitmask into the display
               01401 ; the display bitmask is destroyed
0447           01402 load_display:                           
0447 1283 1303 01403         BANKSEL PORTA                       ; select bank 0 for all operations
0449 1085      01404         bcf PORTA, 1                        ; disable display
044A 3020      01405         movlw H'20'                         ; set counter to 32
044B 00A4      01406         movwf COUNTER
               01407 
044C           01408 load_display_loop:
044C 1206      01409         bcf PORTB, 4                        ; clear display clock
               01410 
044D 0CA3      01411         rrf DISPLAY_BITMASK3, F             ; get bit 0 of display
044E 1286      01412         bcf PORTB, 5                        ; assume bit is 1.  Set inverted value.
044F 1C03      01413         btfss STATUS,C                      ; skip if bit is 1.
0450 1686      01414         bsf PORTB, 5                        ; bit is 0.  Set inverted value.
               01415 
0451 1606      01416         bsf PORTB, 4                        ; clock in data
               01417 
0452 0CA2      01418         rrf DISPLAY_BITMASK2, F             ; shift rest of register
0453 13A3      01419         bcf DISPLAY_BITMASK3, 7             ; shifted 0 in
0454 1803      01420         btfsc STATUS,C                      ; shifted 1 in
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0455 17A3      01421         bsf DISPLAY_BITMASK3, 7
               01422 
0456 0CA1      01423         rrf DISPLAY_BITMASK1, F             ; shift rest of register
0457 13A2      01424         bcf DISPLAY_BITMASK2, 7             ; shifted 0 in
0458 1803      01425         btfsc STATUS,C                      ; shifted 1 in
0459 17A2      01426         bsf DISPLAY_BITMASK2, 7
               01427 
045A 0CA0      01428         rrf DISPLAY_BITMASK0, F             ; shift rest of register
045B 13A1      01429         bcf DISPLAY_BITMASK1, 7             ; shifted 0 in
045C 1803      01430         btfsc STATUS,C                      ; shifted 1 in
045D 17A1      01431         bsf DISPLAY_BITMASK1, 7
               01432 
045E 0BA4      01433         decfsz COUNTER,F                    ; decrease counter and skip if 0
045F 2C4C      01434         goto load_display_loop              ; counter not 0
               01435 
0460 1485      01436         bsf PORTA, 1                        ; counter 0.  enable display
0461 0008      01437         return
               01438         
               01439 
               01440 
               01441 
               01442 
               01443 
               01444 
0462           01445 interrupt:
0462 0009      01446         retfie                              ; return from interrupt
               01447 
               01448 
               01449 
               01450 
               01451 
0463 1683 1703 01452         BANKSEL EECON1
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0465 178C      01453         bsf EECON1, EEPGD                   ; select program memory
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0466 140C      01454         bsf     EECON1, RD                      ; read word
               01455 
               01456 
               01457 
               01458 
               01459 
               01460 ; Get the bitmask for the number 0 - 9 in  and return it in W.
               01461 ; We could do this by offsetting the program counter but that is less
0467           01462 get_bitmask:
0467 1283 1703 01463         BANKSEL EEADRH                      ; reset data address
               01464 
0469 3E35      01465         addlw LOW(bitmasks)                 ; add bitmask table to bitmask number
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
046A 008D      01466         movwf EEADR                         ; store low byte of read
               01467 
046B 3005      01468         movlw HIGH(bitmasks)                ; load high byte of table
046C 1803      01469         btfsc STATUS, C                     ; carry the 256 of the addition
046D 3E01      01470         addlw H'1'
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
046E 008F      01471         movwf EEADRH                        ; set high byte of read
               01472 
046F 1683 1703 01473         BANKSEL EECON1
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0471 178C      01474         bsf EECON1, EEPGD                   ; select progam memory
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0472 140C      01475         bsf EECON1, RD                      ; read word
0473 0000      01476         nop                                 ; may not be important
0474 0000      01477         nop
               01478 
0475 1283 1703 01479         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0477 080C      01480         movf EEDATA, W                      ; low byte of data is bitmask
               01481 
0478 1283 1303 01482         BANKSEL OPERATION                   ; switch bank back to user space
047A 0008      01483         return
               01484 
               01485 
               01486 
               01487 
               01488 
               01489 
               01490 
               01491 
               01492 ; W contains A/D result.
               01493 ; get the temperature out of the thermotable and put it in W
047B           01494 get_temperature:
047B 1283 1703 01495         BANKSEL EEADR             ; point eeprom address to desired temperature entry
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
047D 008D      01496         movwf EEADR
               01497         SET_REGISTER EEADRH, HIGH(thermotable)
047E 3007          M         movlw literal
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
047F 008F          M         movwf reg
0480 30D9      01498         movlw LOW(thermotable)
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0481 078D      01499         addwf EEADR, F            ; add thermotable start to A/D result
0482 1803      01500         btfsc STATUS, C
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0483 0A8F      01501         incf EEADRH, F
               01502 
0484 1683 1703 01503         BANKSEL EECON1            ; command chip to read program memory
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0486 178C      01504         bsf EECON1, EEPGD
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0487 140C      01505         bsf EECON1, RD
0488 0000      01506         nop
0489 0000      01507         nop
               01508 
048A 1283 1703 01509         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
048C 080C      01510         movf EEDATA, W            ; low byte is temperature
048D 1283 1303 01511         BANKSEL THERMOMETER_VALUEL
048F 0008      01512         return
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01513 
               01514 
               01515 
               01516 
               01517 
               01518 
               01519 
               01520 
               01521 ; Get the current alarm note and duration
0490           01522 get_alarm_note:
0490 1283 1303 01523         BANKSEL ALARM_PTRL
0492 084B      01524         movf ALARM_PTRL, W
               01525 
0493 1283 1703 01526         BANKSEL EEADR                       ; store in low byte register
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0495 008D      01527         movwf EEADR
               01528 
0496 1283 1303 01529         BANKSEL ALARM_PTRH                  ; add high byte of table to current note
0498 084A      01530         movf ALARM_PTRH, W
               01531 
0499 1283 1703 01532         BANKSEL EEADRH                      ; store in high byte register
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
049B 008F      01533         movwf EEADRH
               01534 
049C 1683 1703 01535         BANKSEL EECON1                      ; select program memory
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
049E 178C      01536         bsf EECON1, EEPGD
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
049F 140C      01537         bsf EECON1, RD                      ; start read
04A0 0000      01538         nop
04A1 0000      01539         nop
               01540 
04A2 1283 1703 01541         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04A4 080E      01542         movf EEDATH, W                      ; get high byte
04A5 1283 1303 01543         BANKSEL ALARM_PERIODH               ; store in current half period
04A7 00C5      01544         movwf ALARM_PERIODH
04A8 1283 1703 01545         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04AA 080C      01546         movf EEDATA, W                      ; get low byte
04AB 1283 1303 01547         BANKSEL ALARM_PERIODH               ; store in current half period
04AD 00C6      01548         movwf ALARM_PERIODL
               01549 
04AE 1283 1703 01550         BANKSEL EEADR                       ; increase read ptr
04B0 3001      01551         movlw H'1'
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04B1 078D      01552         addwf EEADR, F
04B2 1803      01553         btfsc STATUS, C                     ; carry 256
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04B3 0A8F      01554         incf EEADRH, F
               01555 
04B4 1683 1703 01556         BANKSEL EECON1                      ; start read
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04B6 140C      01557         bsf EECON1, RD
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
04B7 0000      01558         nop
04B8 0000      01559         nop
               01560 
04B9 1283 1703 01561         BANKSEL EEDATA                      ; get high byte
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04BB 080E      01562         movf EEDATH, W
               01563 
04BC 1283 1303 01564         BANKSEL ALARM_DURATIONH             ; store in duration high byte
04BE 00C9      01565         movwf ALARM_DURATIONH
               01566 
04BF 1283 1703 01567         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04C1 080C      01568         movf EEDATA, W                      ; get low byte
               01569 
04C2 1283 1303 01570         BANKSEL ALARM_DURATIONL
04C4 00CF      01571         movwf ALARM_DURATIONL               ; store in duration low byte
               01572 
               01573 
               01574 
04C5 1283 1703 01575         BANKSEL EEADR                       ; increase read ptr for next note
04C7 3001      01576         movlw H'1'
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04C8 078D      01577         addwf EEADR, F
04C9 1803      01578         btfsc STATUS, C
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04CA 0A8F      01579         incf EEADRH, F
               01580 
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04CB 080F      01581         movf EEADRH, W                      ; copy read ptr back to variable
04CC 1283 1303 01582         BANKSEL ALARM_PTRH
04CE 00CA      01583         movwf ALARM_PTRH
04CF 1283 1703 01584         BANKSEL EEADR
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04D1 080D      01585         movf EEADR, W
04D2 1283 1303 01586         BANKSEL ALARM_PTRL
04D4 00CB      01587         movwf ALARM_PTRL
               01588 
04D5 108C      01589         bcf PIR1, TMR2IF
04D6 1064      01590         bcf BEEP_DURATION_FLAG, 0
               01591 
               01592         SKIP_EQUAL ALARM_PTRH, ALARM_ENDH  ; test for end of song
04D7 084A          M         movf reg1, W
04D8 0257          M         subwf reg2, W
04D9 1D03          M         btfss STATUS, Z
04DA 0008      01593         return
               01594         SKIP_EQUAL ALARM_PTRL, ALARM_ENDL
04DB 084B          M         movf reg1, W
04DC 0258          M         subwf reg2, W
04DD 1D03          M         btfss STATUS, Z
04DE 0008      01595         return
               01596 
               01597         COPY_REGISTER ALARM_PTRH, ALARM_SONGH  ; rewind song pointer
04DF 0855          M         movf src, W
04E0 00CA          M         movwf dst
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01598         COPY_REGISTER ALARM_PTRL, ALARM_SONGL
04E1 0856          M         movf src, W
04E2 00CB          M         movwf dst
04E3 0008      01599         return
               01600 
               01601 
               01602 
               01603 
               01604 
               01605 
               01606 
               01607 
               01608 
               01609 
               01610 ; Get the current alarm note and duration
04E4           01611 get_beep_note:
04E4 1283 1303 01612         BANKSEL BEEP_PTRL
               01613 
               01614         SKIP_EQUAL BEEP_PTRH, BEEP_ENDH  ; test for end of song
04E6 0862          M         movf reg1, W
04E7 0260          M         subwf reg2, W
04E8 1D03          M         btfss STATUS, Z
04E9 2CF1      01615         goto get_beep_note2
               01616         SKIP_EQUAL BEEP_PTRL, BEEP_ENDL
04EA 0863          M         movf reg1, W
04EB 0261          M         subwf reg2, W
04EC 1D03          M         btfss STATUS, Z
04ED 2CF1      01617         goto get_beep_note2
               01618 
04EE 01D9      01619         clrf BEEP_ON    ; stop beep operation but leave timer on in case alarm is on
04EF 1006      01620         bcf PORTB, 0    ; turn off speaker
04F0 0008      01621         return
               01622 
               01623 
04F1           01624 get_beep_note2:
04F1 0863      01625         movf BEEP_PTRL, W
               01626 
04F2 1283 1703 01627         BANKSEL EEADR                       ; store in low byte register
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04F4 008D      01628         movwf EEADR
               01629 
04F5 1283 1303 01630         BANKSEL BEEP_PTRH                  ; add high byte of table to current note
04F7 0862      01631         movf BEEP_PTRH, W
               01632 
04F8 1283 1703 01633         BANKSEL EEADRH                      ; store in high byte register
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04FA 008F      01634         movwf EEADRH
               01635 
04FB 1683 1703 01636         BANKSEL EECON1                      ; select program memory
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04FD 178C      01637         bsf EECON1, EEPGD
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
04FE 140C      01638         bsf EECON1, RD                      ; start read
04FF 0000      01639         nop
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0500 0000      01640         nop
               01641 
0501 1283 1703 01642         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0503 080E      01643         movf EEDATH, W                      ; get high byte
0504 1283 1303 01644         BANKSEL BEEP_PERIODH               ; store in current half period
0506 00DA      01645         movwf BEEP_PERIODH
0507 1283 1703 01646         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0509 080C      01647         movf EEDATA, W                      ; get low byte
050A 1283 1303 01648         BANKSEL BEEP_PERIODH               ; store in current half period
050C 00DB      01649         movwf BEEP_PERIODL
               01650 
050D 1283 1703 01651         BANKSEL EEADR                       ; increase read ptr
050F 3001      01652         movlw H'1'
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0510 078D      01653         addwf EEADR, F
0511 1803      01654         btfsc STATUS, C                     ; carry 256
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0512 0A8F      01655         incf EEADRH, F
               01656 
0513 1683 1703 01657         BANKSEL EECON1                      ; start read
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0515 140C      01658         bsf EECON1, RD
0516 0000      01659         nop
0517 0000      01660         nop
               01661 
0518 1283 1703 01662         BANKSEL EEDATA                      ; get high byte
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
051A 080E      01663         movf EEDATH, W
               01664 
051B 1283 1303 01665         BANKSEL BEEP_DURATIONH             ; store in duration high byte
051D 00DC      01666         movwf BEEP_DURATIONH
               01667 
051E 1283 1703 01668         BANKSEL EEDATA
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0520 080C      01669         movf EEDATA, W                      ; get low byte
               01670 
0521 1283 1303 01671         BANKSEL BEEP_DURATIONL
0523 00DD      01672         movwf BEEP_DURATIONL               ; store in duration low byte
               01673 
               01674 
               01675 
0524 1283 1703 01676         BANKSEL EEADR                       ; increase read ptr for next note
0526 3001      01677         movlw H'1'
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0527 078D      01678         addwf EEADR, F
0528 1803      01679         btfsc STATUS, C
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0529 0A8F      01680         incf EEADRH, F
               01681 
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
052A 080F      01682         movf EEADRH, W                      ; copy read ptr back to variable
052B 1283 1303 01683         BANKSEL BEEP_PTRH
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
052D 00E2      01684         movwf BEEP_PTRH
052E 1283 1703 01685         BANKSEL EEADR
Message [302] : Register in operand not in bank 0. Ensure bank bits are correct.
0530 080D      01686         movf EEADR, W
0531 1283 1303 01687         BANKSEL BEEP_PTRL
0533 00E3      01688         movwf BEEP_PTRL
0534 0008      01689         return
               01690 
               01691 
               01692 
               01693 
               01694 
               01695 
               01696 
               01697 
0535           01698 bitmasks:
0535 34DE      01699         retlw B'11011110'                                       ; 0
0536 3450      01700         retlw B'01010000'                                       ; 1
0537 34EC      01701         retlw B'11101100'                                       ; 2
0538 34F8      01702         retlw B'11111000'                                       ; 3
0539 3472      01703         retlw B'01110010'                                       ; 4
053A 34BA      01704         retlw B'10111010'                                       ; 5
053B 34BE      01705         retlw B'10111110'                                       ; 6
053C 34D0      01706         retlw B'11010000'                                       ; 7
053D 34FE      01707         retlw B'11111110'                                       ; 8
053E 34FA      01708         retlw B'11111010'                                       ; 9
               01709 
               01710 
               01711 
               01712 include "clock2songs.inc"
               00001 ; songs for the alarm
               00002 
               00003 
               00004 ; word1: half period of frequency in prescaled CPU cycles
               00005 ; word2: duration in seconds / 1000
053F           00006 alarm_song1:
               00007 
053F 04F2 007D 00008         DATA NOTE_B * 2, D'125'
0541 04AA 007D 00009         DATA NOTE_C,     D'125'
0543 03B4 007D 00010         DATA NOTE_E,     D'125'
0545 031D 007D 00011         DATA NOTE_G,     D'125'
0547 0279 007D 00012         DATA NOTE_B,     D'125'
               00013 
0549 1388 0177 00014         DATA REST,       D'375'
               00015 
054B 04AA 007D 00016         DATA NOTE_C,     D'125'
054D 03B4 007D 00017         DATA NOTE_E,     D'125'
054F 031D 007D 00018         DATA NOTE_G,     D'125'
0551 0279 007D 00019         DATA NOTE_B,     D'125'
0553 0214 007D 00020         DATA NOTE_D / 2, D'125'
               00021 
0555 1388 0177 00022         DATA REST,       D'375'
               00023 
0557 09E4      00024         DATA NOTE_B * 4
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0558 007D      00025         DATA D'125'
0559 0954      00026         DATA NOTE_C * 2
055A 007D      00027         DATA D'125'
055B 0768      00028         DATA NOTE_E * 2
055C 007D      00029         DATA D'125'
055D 063A      00030         DATA NOTE_G * 2
055E 007D      00031         DATA D'125'
055F 04F2      00032         DATA NOTE_B * 2
0560 007D      00033         DATA D'125'
               00034 
0561 1388      00035         DATA REST
0562 0177      00036         DATA D'375'
               00037 
0563 0954      00038         DATA NOTE_C * 2
0564 007D      00039         DATA D'125'
0565 0768      00040         DATA NOTE_E * 2
0566 007D      00041         DATA D'125'
0567 063A      00042         DATA NOTE_G * 2
0568 007D      00043         DATA D'125'
0569 04F2      00044         DATA NOTE_B * 2
056A 007D      00045         DATA D'125'
056B 0428      00046         DATA NOTE_D
056C 007D      00047         DATA D'125'
               00048 
056D 1388      00049         DATA REST
056E 0177      00050         DATA D'375'
               00051 
               00052 
056F 09E4      00053         DATA NOTE_B * 4
0570 007D      00054         DATA D'125'
0571 0954      00055         DATA NOTE_C * 2
0572 007D      00056         DATA D'125'
0573 0768      00057         DATA NOTE_E * 2
0574 007D      00058         DATA D'125'
0575 063A      00059         DATA NOTE_G * 2
0576 007D      00060         DATA D'125'
0577 04F2      00061         DATA NOTE_B * 2
0578 007D      00062         DATA D'125'
0579 04AA      00063         DATA NOTE_C
057A 007D      00064         DATA D'125'
057B 03B4      00065         DATA NOTE_E
057C 007D      00066         DATA D'125'
057D 031D      00067         DATA NOTE_G
057E 007D      00068         DATA D'125'
057F 0279      00069         DATA NOTE_B
0580 007D      00070         DATA D'125'
0581 0255      00071         DATA NOTE_C / 2
0582 007D      00072         DATA D'125'
0583 01DA      00073         DATA NOTE_E / 2
0584 007D      00074         DATA D'125'
0585 018E      00075         DATA NOTE_G / 2
0586 007D      00076         DATA D'125'
0587 013C      00077         DATA NOTE_B / 2
0588 007D      00078         DATA D'125'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0589 012A      00079         DATA NOTE_C / 4
058A 007D      00080         DATA D'125'
058B 00ED      00081         DATA NOTE_E / 4
058C 007D      00082         DATA D'125'
058D 00C7      00083         DATA NOTE_G / 4
058E 007D      00084         DATA D'125'
058F 0095      00085         DATA NOTE_C / 8
0590 07D0      00086         DATA D'2000'
               00087 
0591 1388      00088         DATA REST
0592 03E8      00089         DATA D'1000'
               00090 
               00091 
               00092 
0593           00093 alarm_end1:
               00094 
               00095 
               00096 
               00097 
               00098 
               00099 
               00100 
0593           00101 alarm_song2:
0593 04AA 007D 00102         DATA NOTE_C,      D'125'
0595 0428 007D 00103         DATA NOTE_D,      D'125'
0597 03B4 007D 00104         DATA NOTE_E,      D'125'
0599 034D 007D 00105         DATA NOTE_FS,     D'125'
059B 02F0 007D 00106         DATA NOTE_AF,     D'125'
059D 029E 007D 00107         DATA NOTE_BF,     D'125'
059F 0255 007D 00108         DATA NOTE_C / 2,  D'125'
05A1 0214 007D 00109         DATA NOTE_D / 2,  D'125'
05A3 01DA 007D 00110         DATA NOTE_E / 2,  D'125'
05A5 01A6 007D 00111         DATA NOTE_FS / 2, D'125'
05A7 0178 007D 00112         DATA NOTE_AF / 2, D'125'
05A9 014F 007D 00113         DATA NOTE_BF / 2, D'125'
05AB 012A 007D 00114         DATA NOTE_C  / 4, D'125'
05AD 014F 007D 00115         DATA NOTE_BF / 2, D'125'
05AF 0178 007D 00116         DATA NOTE_AF / 2, D'125'
05B1 01A6 007D 00117         DATA NOTE_FS / 2, D'125'
05B3 01DA 007D 00118         DATA NOTE_E / 2,  D'125'
05B5 0214 007D 00119         DATA NOTE_D / 2,  D'125'
05B7 0255 007D 00120         DATA NOTE_C / 2,  D'125'
05B9 029E 007D 00121         DATA NOTE_BF,     D'125'
05BB 02F0 007D 00122         DATA NOTE_AF,     D'125'
05BD 034D 007D 00123         DATA NOTE_FS,     D'125'
05BF 03B4 007D 00124         DATA NOTE_E,      D'125'
05C1 0428 007D 00125         DATA NOTE_D,      D'125'
05C3           00126 alarm_end2:
               00127 
               00128 
               00129 
05C3           00130 alarm_song3:
05C3 034D 007D 00131         DATA NOTE_FS,      D'125'
05C5 01A6 007D 00132         DATA NOTE_FS / 2,      D'125'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
05C7 0214 007D 00133         DATA NOTE_D / 2,      D'125'
05C9 034D 007D 00134         DATA NOTE_FS,      D'125'
               00135 
05CB 031D 007D 00136         DATA NOTE_G,      D'125'
05CD 018E 007D 00137         DATA NOTE_G / 2,      D'125'
05CF 0214 007D 00138         DATA NOTE_D / 2,      D'125'
05D1 031D 007D 00139         DATA NOTE_G,      D'125'
               00140 
05D3 034D 007D 00141         DATA NOTE_FS,      D'125'
05D5 01A6 007D 00142         DATA NOTE_FS / 2,      D'125'
05D7 0214 007D 00143         DATA NOTE_D / 2,      D'125'
05D9 034D 007D 00144         DATA NOTE_FS,      D'125'
               00145 
05DB 037F 007D 00146         DATA NOTE_F,      D'125'
05DD 01BF 007D 00147         DATA NOTE_F / 2,      D'125'
05DF 0214 007D 00148         DATA NOTE_D / 2,      D'125'
05E1 037F 007D 00149         DATA NOTE_F,      D'125'
               00150 
05E3 03B4 007D 00151         DATA NOTE_E,      D'125'
05E5 01DA 007D 00152         DATA NOTE_E / 2,      D'125'
05E7 0214 007D 00153         DATA NOTE_D / 2,      D'125'
05E9 03B4 007D 00154         DATA NOTE_E,      D'125'
               00155 
05EB 034D 007D 00156         DATA NOTE_FS,      D'125'
05ED 01A6 007D 00157         DATA NOTE_FS / 2,      D'125'
05EF 0214 007D 00158         DATA NOTE_D / 2,      D'125'
05F1 034D 007D 00159         DATA NOTE_FS,      D'125'
               00160 
05F3 0428 007D 00161         DATA NOTE_D,      D'125'
05F5 0214 007D 00162         DATA NOTE_D / 2,      D'125'
05F7 02C6 007D 00163         DATA NOTE_A,      D'125'
05F9 0428 007D 00164         DATA NOTE_D,      D'125'
               00165 
05FB 058C 007D 00166         DATA NOTE_A * 2,      D'125'
05FD 02C6 007D 00167         DATA NOTE_A,      D'125'
05FF 034D 007D 00168         DATA NOTE_FS,      D'125'
0601 058C 0041 00169         DATA NOTE_A * 2,      D'65'
0603 1388 003C 00170         DATA REST,          D'60'
               00171 
0605 058C 007D 00172         DATA NOTE_A * 2,      D'125'
0607 02C6 007D 00173         DATA NOTE_A,      D'125'
0609 03B4 007D 00174         DATA NOTE_E,      D'125'
060B 058C 0041 00175         DATA NOTE_A * 2,      D'65'
060D 1388 003C 00176         DATA REST,          D'60'
               00177 
060F 058C 007D 00178         DATA NOTE_A * 2,      D'125'
0611 02C6 007D 00179         DATA NOTE_A,      D'125'
0613 03EC 007D 00180         DATA NOTE_EF,      D'125'
0615 058C 007D 00181         DATA NOTE_A * 2,      D'125'
               00182 
0617 05E0 007D 00183         DATA NOTE_GS * 2,      D'125'
0619 02F0 007D 00184         DATA NOTE_GS,   D'125'
061B 0428 007D 00185         DATA NOTE_D,      D'125'
061D 05E0 007D 00186         DATA NOTE_GS * 2,      D'125'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00187 
061F 063A 007D 00188         DATA NOTE_G * 2,      D'125'
0621 031D 007D 00189         DATA NOTE_G,   D'125'
0623 0428 007D 00190         DATA NOTE_D,      D'125'
0625 063A 007D 00191         DATA NOTE_G * 2,      D'125'
               00192 
0627 069A 007D 00193         DATA NOTE_FS * 2,      D'125'
0629 034D 007D 00194         DATA NOTE_FS,   D'125'
062B 0428 007D 00195         DATA NOTE_D,      D'125'
062D 069A 007D 00196         DATA NOTE_FS * 2,      D'125'
               00197 
062F 06FE 007D 00198         DATA NOTE_F * 2,      D'125'
0631 037F 007D 00199         DATA NOTE_F,   D'125'
0633 0428 007D 00200         DATA NOTE_D,      D'125'
0635 06FE 007D 00201         DATA NOTE_F * 2,      D'125'
               00202 
0637 0768 007D 00203         DATA NOTE_E * 2,      D'125'
0639 03B4 007D 00204         DATA NOTE_E,   D'125'
063B 0467 007D 00205         DATA NOTE_CS,      D'125'
063D 0768 007D 00206         DATA NOTE_E * 2,      D'125'
               00207 
063F 0B18 007D 00208         DATA NOTE_A * 4,      D'125'
0641 1388 007D 00209         DATA REST,            D'125'
0643 0BC0 007D 00210         DATA NOTE_GS * 4,     D'125'
0645 1388 007D 00211         DATA REST,            D'125'
               00212 
               00213 
0647           00214 alarm_end3:
               00215 
               00216 
               00217 
               00218 
               00219 
               00220 ; change mode
0647           00221 beep_song1:
0647 012A 0064 00222         DATA NOTE_C / 4,  D'100'
0649 0095 0064 00223         DATA NOTE_C / 8,  D'100'
064B           00224 beep_end1:
               00225 
               00226 ; enter set time
064B           00227 beep_song2:
064B 012A 0064 00228         DATA NOTE_C / 4,  D'100'
064D 00ED 0064 00229         DATA NOTE_E / 4,  D'100'
064F 00C7 0064 00230         DATA NOTE_G / 4,  D'100'
0651 0095 0064 00231         DATA NOTE_C / 8,  D'100'
0653           00232 beep_end2:
               00233 
               00234 ; enter set alarm time
0653           00235 beep_song3:
0653 012A 0064 00236         DATA NOTE_C / 4,  D'100'
0655 00FB 0064 00237         DATA NOTE_EF / 4, D'100'
0657 00C7 0064 00238         DATA NOTE_G / 4,  D'100'
0659 0095 0064 00239         DATA NOTE_C / 8,  D'100'
065B           00240 beep_end3:
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00241 
               00242 ; exit set time
065B           00243 beep_song4:
065B 0095 0064 00244         DATA NOTE_C / 8,  D'100'
065D 00C7 0064 00245         DATA NOTE_G / 4,  D'100'
065F 00ED 0064 00246         DATA NOTE_E / 4,  D'100'
0661 012A 0064 00247         DATA NOTE_C / 4,  D'100'
0663           00248 beep_end4:
               00249 
               00250 ; exit set alarm time
0663           00251 beep_song5:
0663 0095 0064 00252         DATA NOTE_C / 8,  D'100'
0665 00C7 0064 00253         DATA NOTE_G / 4,  D'100'
0667 00FB 0064 00254         DATA NOTE_EF / 4, D'100'
0669 012A 0064 00255         DATA NOTE_C / 4,  D'100'
066B           00256 beep_end5:
               00257 
               00258 ; hour press
066B           00259 beep_song6:
066B 00ED 0064 00260         DATA NOTE_E / 4,  D'100'
066D           00261 beep_end6:
               00262 
               00263 ; minute press
066D           00264 beep_song9:
066D 00C7 0064 00265         DATA NOTE_G / 4,  D'100'
066F           00266 beep_end9:
               00267 
               00268 ; alarm enabled
066F           00269 beep_song7:
066F 012A 0032 00270         DATA NOTE_C / 4, D'50'
0671 010A 0032 00271         DATA NOTE_D / 4, D'50'
0673 00ED 0032 00272         DATA NOTE_E / 4, D'50'
0675 00DF 0032 00273         DATA NOTE_F / 4, D'50'
0677 00C7 0032 00274         DATA NOTE_G / 4, D'50'
0679 00B1 0032 00275         DATA NOTE_A / 4, D'50'
067B 009E 0032 00276         DATA NOTE_B / 4, D'50'
067D 0095 0032 00277         DATA NOTE_C / 8, D'50'
067F           00278 beep_end7:
               00279 
               00280 ; alarm disabled
067F           00281 beep_song8:
067F 0095 0032 00282         DATA NOTE_C / 8, D'50'
0681 00A7 0032 00283         DATA NOTE_BF / 4, D'50'
0683 00BC 0032 00284         DATA NOTE_AF / 4, D'50'
0685 00C7 0032 00285         DATA NOTE_G / 4, D'50'
0687 00DF 0032 00286         DATA NOTE_F / 4, D'50'
0689 00FB 0032 00287         DATA NOTE_EF / 4, D'50'
068B 010A 0032 00288         DATA NOTE_D / 4, D'50'
068D 012A 0032 00289         DATA NOTE_C / 4, D'50'
068F           00290 beep_end8:
               00291 
               00292 ; startup song
068F           00293 beep_song10:
068F 0255 0019 00294         DATA NOTE_C / 2, D'25'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0691 01DA 0019 00295         DATA NOTE_E / 2, D'25'
0693 018E 0019 00296         DATA NOTE_G / 2, D'25'
0695 0255 0019 00297         DATA NOTE_C / 2, D'25'
0697 01DA 0019 00298         DATA NOTE_E / 2, D'25'
0699 018E 0019 00299         DATA NOTE_G / 2, D'25'
069B 0255 0019 00300         DATA NOTE_C / 2, D'25'
069D 01DA 0019 00301         DATA NOTE_E / 2, D'25'
069F 018E 0019 00302         DATA NOTE_G / 2, D'25'
06A1 0255 0019 00303         DATA NOTE_C / 2, D'25'
06A3 01DA 0019 00304         DATA NOTE_E / 2, D'25'
06A5 018E 0019 00305         DATA NOTE_G / 2, D'25'
               00306 
06A7 0255 0019 00307         DATA NOTE_C / 2, D'25'
06A9 01BF 0019 00308         DATA NOTE_F / 2, D'25'
06AB 0163 0019 00309         DATA NOTE_A / 2, D'25'
06AD 0255 0019 00310         DATA NOTE_C / 2, D'25'
06AF 01BF 0019 00311         DATA NOTE_F / 2, D'25'
06B1 0163 0019 00312         DATA NOTE_A / 2, D'25'
06B3 0255 0019 00313         DATA NOTE_C / 2, D'25'
06B5 01BF 0019 00314         DATA NOTE_F / 2, D'25'
06B7 0163 0019 00315         DATA NOTE_A / 2, D'25'
06B9 0255 0019 00316         DATA NOTE_C / 2, D'25'
06BB 01BF 0019 00317         DATA NOTE_F / 2, D'25'
06BD 0163 0019 00318         DATA NOTE_A / 2, D'25'
               00319 
06BF 0255 0019 00320         DATA NOTE_C / 2, D'25'
06C1 01DA 0019 00321         DATA NOTE_E / 2, D'25'
06C3 018E 0019 00322         DATA NOTE_G / 2, D'25'
06C5 0255 0019 00323         DATA NOTE_C / 2, D'25'
06C7 01DA 0019 00324         DATA NOTE_E / 2, D'25'
06C9 018E 0019 00325         DATA NOTE_G / 2, D'25'
06CB 0255 0019 00326         DATA NOTE_C / 2, D'25'
06CD 01DA 0019 00327         DATA NOTE_E / 2, D'25'
06CF 018E 0019 00328         DATA NOTE_G / 2, D'25'
06D1 0255 0019 00329         DATA NOTE_C / 2, D'25'
06D3 01DA 0019 00330         DATA NOTE_E / 2, D'25'
06D5 018E 0019 00331         DATA NOTE_G / 2, D'25'
               00332 
06D7 1388 012C 00333         DATA REST, D'300'
               00334 
06D9 01DA 0019 00335         DATA NOTE_E / 2, D'25'
06DB 018E 0019 00336         DATA NOTE_G / 2, D'25'
06DD 013C 0019 00337         DATA NOTE_B / 2, D'25'
06DF 01DA 0019 00338         DATA NOTE_E / 2, D'25'
06E1 018E 0019 00339         DATA NOTE_G / 2, D'25'
06E3 013C 0019 00340         DATA NOTE_B / 2, D'25'
06E5 01DA 0019 00341         DATA NOTE_E / 2, D'25'
06E7 018E 0019 00342         DATA NOTE_G / 2, D'25'
06E9 013C 0019 00343         DATA NOTE_B / 2, D'25'
06EB 01DA 0019 00344         DATA NOTE_E / 2, D'25'
06ED 018E 0019 00345         DATA NOTE_G / 2, D'25'
06EF 013C 0019 00346         DATA NOTE_B / 2, D'25'
               00347 
06F1 01DA 0019 00348         DATA NOTE_E / 2, D'25'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
06F3 0163 0019 00349         DATA NOTE_A / 2, D'25'
06F5 012A 0019 00350         DATA NOTE_C / 4, D'25'
06F7 01DA 0019 00351         DATA NOTE_E / 2, D'25'
06F9 0163 0019 00352         DATA NOTE_A / 2, D'25'
06FB 012A 0019 00353         DATA NOTE_C / 4, D'25'
06FD 01DA 0019 00354         DATA NOTE_E / 2, D'25'
06FF 0163 0019 00355         DATA NOTE_A / 2, D'25'
0701 012A 0019 00356         DATA NOTE_C / 4, D'25'
0703 01DA 0019 00357         DATA NOTE_E / 2, D'25'
0705 0163 0019 00358         DATA NOTE_A / 2, D'25'
0707 012A 0019 00359         DATA NOTE_C / 4, D'25'
               00360 
0709 01DA 0019 00361         DATA NOTE_E / 2, D'25'
070B 018E 0019 00362         DATA NOTE_G / 2, D'25'
070D 013C 0019 00363         DATA NOTE_B / 2, D'25'
070F 01DA 0019 00364         DATA NOTE_E / 2, D'25'
0711 018E 0019 00365         DATA NOTE_G / 2, D'25'
0713 013C 0019 00366         DATA NOTE_B / 2, D'25'
0715 01DA 0019 00367         DATA NOTE_E / 2, D'25'
0717 018E 0019 00368         DATA NOTE_G / 2, D'25'
0719 013C 0019 00369         DATA NOTE_B / 2, D'25'
071B 01DA 0019 00370         DATA NOTE_E / 2, D'25'
071D 018E 0019 00371         DATA NOTE_G / 2, D'25'
071F 013C 0019 00372         DATA NOTE_B / 2, D'25'
               00373 
0721 1388 012C 00374         DATA REST, D'300'
               00375 
0723 018E 0019 00376         DATA NOTE_G / 2, D'25'
0725 013C 0019 00377         DATA NOTE_B / 2, D'25'
0727 010A 0019 00378         DATA NOTE_D / 4, D'25'
0729 018E 0019 00379         DATA NOTE_G / 2, D'25'
072B 013C 0019 00380         DATA NOTE_B / 2, D'25'
072D 010A 0019 00381         DATA NOTE_D / 4, D'25'
072F 018E 0019 00382         DATA NOTE_G / 2, D'25'
0731 013C 0019 00383         DATA NOTE_B / 2, D'25'
0733 010A 0019 00384         DATA NOTE_D / 4, D'25'
0735 018E 0019 00385         DATA NOTE_G / 2, D'25'
0737 013C 0019 00386         DATA NOTE_B / 2, D'25'
0739 010A 0019 00387         DATA NOTE_D / 4, D'25'
               00388 
073B 018E 0019 00389         DATA NOTE_G / 2, D'25'
073D 012A 0019 00390         DATA NOTE_C / 4, D'25'
073F 00ED 0019 00391         DATA NOTE_E / 4, D'25'
0741 018E 0019 00392         DATA NOTE_G / 2, D'25'
0743 012A 0019 00393         DATA NOTE_C / 4, D'25'
0745 00ED 0019 00394         DATA NOTE_E / 4, D'25'
0747 018E 0019 00395         DATA NOTE_G / 2, D'25'
0749 012A 0019 00396         DATA NOTE_C / 4, D'25'
074B 00ED 0019 00397         DATA NOTE_E / 4, D'25'
074D 018E 0019 00398         DATA NOTE_G / 2, D'25'
074F 012A 0019 00399         DATA NOTE_C / 4, D'25'
0751 00ED 0019 00400         DATA NOTE_E / 4, D'25'
               00401 
0753 018E 0019 00402         DATA NOTE_G / 2, D'25'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0755 013C 0019 00403         DATA NOTE_B / 2, D'25'
0757 010A 0019 00404         DATA NOTE_D / 4, D'25'
0759 018E 0019 00405         DATA NOTE_G / 2, D'25'
075B 013C 0019 00406         DATA NOTE_B / 2, D'25'
075D 010A 0019 00407         DATA NOTE_D / 4, D'25'
075F 018E 0019 00408         DATA NOTE_G / 2, D'25'
0761 013C 0019 00409         DATA NOTE_B / 2, D'25'
0763 010A 0019 00410         DATA NOTE_D / 4, D'25'
0765 018E 0019 00411         DATA NOTE_G / 2, D'25'
0767 013C 0019 00412         DATA NOTE_B / 2, D'25'
0769 010A 0019 00413         DATA NOTE_D / 4, D'25'
               00414 
076B 1388 012C 00415         DATA REST, D'300'
               00416 
076D 0255 0019 00417         DATA NOTE_C / 2, D'25'
076F 01DA 0019 00418         DATA NOTE_E / 2, D'25'
0771 018E 0019 00419         DATA NOTE_G / 2, D'25'
0773 0255 0019 00420         DATA NOTE_C / 2, D'25'
0775 01DA 0019 00421         DATA NOTE_E / 2, D'25'
0777 018E 0019 00422         DATA NOTE_G / 2, D'25'
0779 0255 0019 00423         DATA NOTE_C / 2, D'25'
077B 01DA 0019 00424         DATA NOTE_E / 2, D'25'
               00425 
077D 1388 0064 00426         DATA REST, D'100'
077F 0255 0019 00427         DATA NOTE_C / 2, D'25'
0781 01DA 0019 00428         DATA NOTE_E / 2, D'25'
0783 018E 0019 00429         DATA NOTE_G / 2, D'25'
0785 0255 0019 00430         DATA NOTE_C / 2, D'25'
0787 01DA 0019 00431         DATA NOTE_E / 2, D'25'
0789 018E 0019 00432         DATA NOTE_G / 2, D'25'
078B 0255 0019 00433         DATA NOTE_C / 2, D'25'
078D 01DA 0019 00434         DATA NOTE_E / 2, D'25'
               00435 
078F 1388 0064 00436         DATA REST, D'100'
0791 0255 0019 00437         DATA NOTE_C / 2, D'25'
0793 01DA 0019 00438         DATA NOTE_E / 2, D'25'
0795 018E 0019 00439         DATA NOTE_G / 2, D'25'
0797 0255 0019 00440         DATA NOTE_C / 2, D'25'
0799 01DA 0019 00441         DATA NOTE_E / 2, D'25'
079B 018E 0019 00442         DATA NOTE_G / 2, D'25'
079D 0255 0019 00443         DATA NOTE_C / 2, D'25'
079F 01DA 0019 00444         DATA NOTE_E / 2, D'25'
07A1 018E 0019 00445         DATA NOTE_G / 2, D'25'
07A3 0255 0019 00446         DATA NOTE_C / 2, D'25'
07A5 01DA 0019 00447         DATA NOTE_E / 2, D'25'
07A7 018E 0019 00448         DATA NOTE_G / 2, D'25'
07A9 0255 0019 00449         DATA NOTE_C / 2, D'25'
07AB 01DA 0019 00450         DATA NOTE_E / 2, D'25'
07AD 018E 0019 00451         DATA NOTE_G / 2, D'25'
07AF 0255 0019 00452         DATA NOTE_C / 2, D'25'
07B1 01DA 0019 00453         DATA NOTE_E / 2, D'25'
07B3 018E 0019 00454         DATA NOTE_G / 2, D'25'
07B5 0255 0019 00455         DATA NOTE_C / 2, D'25'
07B7 01DA 0019 00456         DATA NOTE_E / 2, D'25'
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
07B9 018E 0019 00457         DATA NOTE_G / 2, D'25'
07BB 0255 0019 00458         DATA NOTE_C / 2, D'25'
07BD 01DA 0019 00459         DATA NOTE_E / 2, D'25'
07BF 018E 0019 00460         DATA NOTE_G / 2, D'25'
07C1 0255 0019 00461         DATA NOTE_C / 2, D'25'
07C3 01DA 0019 00462         DATA NOTE_E / 2, D'25'
07C5 018E 0019 00463         DATA NOTE_G / 2, D'25'
07C7 0255 0019 00464         DATA NOTE_C / 2, D'25'
07C9 01DA 0019 00465         DATA NOTE_E / 2, D'25'
07CB 018E 0019 00466         DATA NOTE_G / 2, D'25'
07CD 0255 0019 00467         DATA NOTE_C / 2, D'25'
07CF 01DA 0019 00468         DATA NOTE_E / 2, D'25'
07D1 018E 0019 00469         DATA NOTE_G / 2, D'25'
07D3 0255 0019 00470         DATA NOTE_C / 2, D'25'
07D5 01DA 0019 00471         DATA NOTE_E / 2, D'25'
07D7 018E 0019 00472         DATA NOTE_G / 2, D'25'
               00473 
               00474 
07D9           00475 beep_end10:
               00476 
               01713 include "thermotable.inc"
               00001 ; thermister conversion table generated by thermotable.c
07D9           00002 thermotable:
07D9 0020      00003         DATA D'32'  ; 0
07DA 0023      00004         DATA D'35'  ; 1
07DB 0026      00005         DATA D'38'  ; 2
07DC 0029      00006         DATA D'41'  ; 3
07DD 002C      00007         DATA D'44'  ; 4
07DE 002F      00008         DATA D'47'  ; 5
07DF 0032      00009         DATA D'50'  ; 6
07E0 0035      00010         DATA D'53'  ; 7
07E1 0037      00011         DATA D'55'  ; 8
07E2 003A      00012         DATA D'58'  ; 9
07E3 003C      00013         DATA D'60'  ; 10
07E4 003E      00014         DATA D'62'  ; 11
07E5 0040      00015         DATA D'64'  ; 12
07E6 0042      00016         DATA D'66'  ; 13
07E7 0044      00017         DATA D'68'  ; 14
07E8 0046      00018         DATA D'70'  ; 15
07E9 0048      00019         DATA D'72'  ; 16
07EA 004A      00020         DATA D'74'  ; 17
07EB 004C      00021         DATA D'76'  ; 18
07EC 004D      00022         DATA D'77'  ; 19
07ED 004F      00023         DATA D'79'  ; 20
07EE 0051      00024         DATA D'81'  ; 21
07EF 0052      00025         DATA D'82'  ; 22
07F0 0054      00026         DATA D'84'  ; 23
07F1 0055      00027         DATA D'85'  ; 24
07F2 0057      00028         DATA D'87'  ; 25
07F3 0058      00029         DATA D'88'  ; 26
07F4 005A      00030         DATA D'90'  ; 27
07F5 005B      00031         DATA D'91'  ; 28
07F6 005C      00032         DATA D'92'  ; 29
07F7 005E      00033         DATA D'94'  ; 30
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
07F8 005F      00034         DATA D'95'  ; 31
07F9 0060      00035         DATA D'96'  ; 32
07FA 0061      00036         DATA D'97'  ; 33
07FB 0063      00037         DATA D'99'  ; 34
07FC 0064      00038         DATA D'100'  ; 35
07FD 0065      00039         DATA D'101'  ; 36
07FE 0066      00040         DATA D'102'  ; 37
07FF 0067      00041         DATA D'103'  ; 38
0800 0068      00042         DATA D'104'  ; 39
0801 0069      00043         DATA D'105'  ; 40
0802 006A      00044         DATA D'106'  ; 41
0803 006C      00045         DATA D'108'  ; 42
0804 006D      00046         DATA D'109'  ; 43
0805 006E      00047         DATA D'110'  ; 44
0806 006F      00048         DATA D'111'  ; 45
0807 0070      00049         DATA D'112'  ; 46
0808 0071      00050         DATA D'113'  ; 47
0809 0072      00051         DATA D'114'  ; 48
080A 0073      00052         DATA D'115'  ; 49
080B 0073      00053         DATA D'115'  ; 50
080C 0074      00054         DATA D'116'  ; 51
080D 0075      00055         DATA D'117'  ; 52
080E 0076      00056         DATA D'118'  ; 53
080F 0077      00057         DATA D'119'  ; 54
0810 0078      00058         DATA D'120'  ; 55
0811 0079      00059         DATA D'121'  ; 56
0812 007A      00060         DATA D'122'  ; 57
0813 007B      00061         DATA D'123'  ; 58
0814 007B      00062         DATA D'123'  ; 59
0815 007C      00063         DATA D'124'  ; 60
0816 007D      00064         DATA D'125'  ; 61
0817 007E      00065         DATA D'126'  ; 62
0818 007F      00066         DATA D'127'  ; 63
0819 007F      00067         DATA D'127'  ; 64
081A 0080      00068         DATA D'128'  ; 65
081B 0081      00069         DATA D'129'  ; 66
081C 0082      00070         DATA D'130'  ; 67
081D 0083      00071         DATA D'131'  ; 68
081E 0083      00072         DATA D'131'  ; 69
081F 0084      00073         DATA D'132'  ; 70
0820 0085      00074         DATA D'133'  ; 71
0821 0085      00075         DATA D'133'  ; 72
0822 0086      00076         DATA D'134'  ; 73
0823 0087      00077         DATA D'135'  ; 74
0824 0087      00078         DATA D'135'  ; 75
0825 0088      00079         DATA D'136'  ; 76
0826 0089      00080         DATA D'137'  ; 77
0827 008A      00081         DATA D'138'  ; 78
0828 008A      00082         DATA D'138'  ; 79
0829 008B      00083         DATA D'139'  ; 80
082A 008C      00084         DATA D'140'  ; 81
082B 008C      00085         DATA D'140'  ; 82
082C 008D      00086         DATA D'141'  ; 83
082D 008E      00087         DATA D'142'  ; 84
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
082E 008E      00088         DATA D'142'  ; 85
082F 008F      00089         DATA D'143'  ; 86
0830 008F      00090         DATA D'143'  ; 87
0831 0090      00091         DATA D'144'  ; 88
0832 0091      00092         DATA D'145'  ; 89
0833 0091      00093         DATA D'145'  ; 90
0834 0092      00094         DATA D'146'  ; 91
0835 0092      00095         DATA D'146'  ; 92
0836 0093      00096         DATA D'147'  ; 93
0837 0094      00097         DATA D'148'  ; 94
0838 0094      00098         DATA D'148'  ; 95
0839 0095      00099         DATA D'149'  ; 96
083A 0095      00100         DATA D'149'  ; 97
083B 0096      00101         DATA D'150'  ; 98
083C 0097      00102         DATA D'151'  ; 99
083D 0097      00103         DATA D'151'  ; 100
083E 0098      00104         DATA D'152'  ; 101
083F 0098      00105         DATA D'152'  ; 102
0840 0099      00106         DATA D'153'  ; 103
0841 0099      00107         DATA D'153'  ; 104
0842 009A      00108         DATA D'154'  ; 105
0843 009A      00109         DATA D'154'  ; 106
0844 009B      00110         DATA D'155'  ; 107
0845 009B      00111         DATA D'155'  ; 108
0846 009C      00112         DATA D'156'  ; 109
0847 009D      00113         DATA D'157'  ; 110
0848 009D      00114         DATA D'157'  ; 111
0849 009E      00115         DATA D'158'  ; 112
084A 009E      00116         DATA D'158'  ; 113
084B 009F      00117         DATA D'159'  ; 114
084C 009F      00118         DATA D'159'  ; 115
084D 00A0      00119         DATA D'160'  ; 116
084E 00A0      00120         DATA D'160'  ; 117
084F 00A1      00121         DATA D'161'  ; 118
0850 00A1      00122         DATA D'161'  ; 119
0851 00A1      00123         DATA D'161'  ; 120
0852 00A2      00124         DATA D'162'  ; 121
0853 00A2      00125         DATA D'162'  ; 122
0854 00A3      00126         DATA D'163'  ; 123
0855 00A3      00127         DATA D'163'  ; 124
0856 00A4      00128         DATA D'164'  ; 125
0857 00A4      00129         DATA D'164'  ; 126
0858 00A5      00130         DATA D'165'  ; 127
0859 00A5      00131         DATA D'165'  ; 128
085A 00A6      00132         DATA D'166'  ; 129
085B 00A6      00133         DATA D'166'  ; 130
085C 00A7      00134         DATA D'167'  ; 131
085D 00A7      00135         DATA D'167'  ; 132
085E 00A8      00136         DATA D'168'  ; 133
085F 00A8      00137         DATA D'168'  ; 134
0860 00A9      00138         DATA D'169'  ; 135
0861 00A9      00139         DATA D'169'  ; 136
0862 00A9      00140         DATA D'169'  ; 137
0863 00AA      00141         DATA D'170'  ; 138
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0864 00AA      00142         DATA D'170'  ; 139
0865 00AB      00143         DATA D'171'  ; 140
0866 00AB      00144         DATA D'171'  ; 141
0867 00AC      00145         DATA D'172'  ; 142
0868 00AC      00146         DATA D'172'  ; 143
0869 00AC      00147         DATA D'172'  ; 144
086A 00AD      00148         DATA D'173'  ; 145
086B 00AD      00149         DATA D'173'  ; 146
086C 00AE      00150         DATA D'174'  ; 147
086D 00AE      00151         DATA D'174'  ; 148
086E 00AF      00152         DATA D'175'  ; 149
086F 00AF      00153         DATA D'175'  ; 150
0870 00AF      00154         DATA D'175'  ; 151
0871 00B0      00155         DATA D'176'  ; 152
0872 00B0      00156         DATA D'176'  ; 153
0873 00B1      00157         DATA D'177'  ; 154
0874 00B1      00158         DATA D'177'  ; 155
0875 00B1      00159         DATA D'177'  ; 156
0876 00B2      00160         DATA D'178'  ; 157
0877 00B2      00161         DATA D'178'  ; 158
0878 00B3      00162         DATA D'179'  ; 159
0879 00B3      00163         DATA D'179'  ; 160
087A 00B3      00164         DATA D'179'  ; 161
087B 00B4      00165         DATA D'180'  ; 162
087C 00B4      00166         DATA D'180'  ; 163
087D 00B4      00167         DATA D'180'  ; 164
087E 00B5      00168         DATA D'181'  ; 165
087F 00B5      00169         DATA D'181'  ; 166
0880 00B6      00170         DATA D'182'  ; 167
0881 00B6      00171         DATA D'182'  ; 168
0882 00B6      00172         DATA D'182'  ; 169
0883 00B7      00173         DATA D'183'  ; 170
0884 00B7      00174         DATA D'183'  ; 171
0885 00B7      00175         DATA D'183'  ; 172
0886 00B8      00176         DATA D'184'  ; 173
0887 00B8      00177         DATA D'184'  ; 174
0888 00B9      00178         DATA D'185'  ; 175
0889 00BA      00179         DATA D'186'  ; 176
088A 00BA      00180         DATA D'186'  ; 177
088B 00BB      00181         DATA D'187'  ; 178
088C 00BC      00182         DATA D'188'  ; 179
088D 00BD      00183         DATA D'189'  ; 180
088E 00BE      00184         DATA D'190'  ; 181
088F 00BE      00185         DATA D'190'  ; 182
0890 00BF      00186         DATA D'191'  ; 183
0891 00C0      00187         DATA D'192'  ; 184
0892 00C1      00188         DATA D'193'  ; 185
0893 00C1      00189         DATA D'193'  ; 186
0894 00C2      00190         DATA D'194'  ; 187
0895 00C2      00191         DATA D'194'  ; 188
0896 00C2      00192         DATA D'194'  ; 189
0897 00C2      00193         DATA D'194'  ; 190
0898 00C3      00194         DATA D'195'  ; 191
0899 00C3      00195         DATA D'195'  ; 192
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
089A 00C3      00196         DATA D'195'  ; 193
089B 00C3      00197         DATA D'195'  ; 194
089C 00C3      00198         DATA D'195'  ; 195
089D 00C4      00199         DATA D'196'  ; 196
089E 00C4      00200         DATA D'196'  ; 197
089F 00C4      00201         DATA D'196'  ; 198
08A0 00C4      00202         DATA D'196'  ; 199
08A1 00C4      00203         DATA D'196'  ; 200
08A2 00C5      00204         DATA D'197'  ; 201
08A3 00C5      00205         DATA D'197'  ; 202
08A4 00C5      00206         DATA D'197'  ; 203
08A5 00C5      00207         DATA D'197'  ; 204
08A6 00C5      00208         DATA D'197'  ; 205
08A7 00C6      00209         DATA D'198'  ; 206
08A8 00C6      00210         DATA D'198'  ; 207
08A9 00C6      00211         DATA D'198'  ; 208
08AA 00C6      00212         DATA D'198'  ; 209
08AB 00C6      00213         DATA D'198'  ; 210
08AC 00C7      00214         DATA D'199'  ; 211
08AD 00C7      00215         DATA D'199'  ; 212
08AE 00C7      00216         DATA D'199'  ; 213
08AF 00C7      00217         DATA D'199'  ; 214
08B0 00C7      00218         DATA D'199'  ; 215
08B1 00C8      00219         DATA D'200'  ; 216
08B2 00C8      00220         DATA D'200'  ; 217
08B3 00C8      00221         DATA D'200'  ; 218
08B4 00C8      00222         DATA D'200'  ; 219
08B5 00C8      00223         DATA D'200'  ; 220
08B6 00C9      00224         DATA D'201'  ; 221
08B7 00C9      00225         DATA D'201'  ; 222
08B8 00C9      00226         DATA D'201'  ; 223
08B9 00C9      00227         DATA D'201'  ; 224
08BA 00C9      00228         DATA D'201'  ; 225
08BB 00CA      00229         DATA D'202'  ; 226
08BC 00CA      00230         DATA D'202'  ; 227
08BD 00CA      00231         DATA D'202'  ; 228
08BE 00CA      00232         DATA D'202'  ; 229
08BF 00CA      00233         DATA D'202'  ; 230
08C0 00CB      00234         DATA D'203'  ; 231
08C1 00CB      00235         DATA D'203'  ; 232
08C2 00CC      00236         DATA D'204'  ; 233
08C3 00CC      00237         DATA D'204'  ; 234
08C4 00CC      00238         DATA D'204'  ; 235
08C5 00CD      00239         DATA D'205'  ; 236
08C6 00CD      00240         DATA D'205'  ; 237
08C7 00CD      00241         DATA D'205'  ; 238
08C8 00CE      00242         DATA D'206'  ; 239
08C9 00CE      00243         DATA D'206'  ; 240
08CA 00CE      00244         DATA D'206'  ; 241
08CB 00CF      00245         DATA D'207'  ; 242
08CC 00CF      00246         DATA D'207'  ; 243
08CD 00CF      00247         DATA D'207'  ; 244
08CE 00D0      00248         DATA D'208'  ; 245
08CF 00D0      00249         DATA D'208'  ; 246
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
08D0 00D0      00250         DATA D'208'  ; 247
08D1 00D1      00251         DATA D'209'  ; 248
08D2 00D1      00252         DATA D'209'  ; 249
08D3 00D2      00253         DATA D'210'  ; 250
08D4 00D2      00254         DATA D'210'  ; 251
08D5 00D2      00255         DATA D'210'  ; 252
08D6 00D3      00256         DATA D'211'  ; 253
08D7 00D3      00257         DATA D'211'  ; 254
08D8 00D3      00258         DATA D'211'  ; 255
               01714 
               01715 
               01716 ; display bitmask
               01717 ; 80000000 - alarm
               01718 ; 40000000 - heroine
               01719 ; 20000000 - pm
               01720 ; 10000000 - 1 top
               01721 ; 08000000 - 1 bottom
               01722 ; 04000000 - :
               01723 
               01724 ; Accidentally the first bit in each chip was sacrificed for cascading even
               01725 ; though it didn't need to be.  Fortunately this accident aligned the digits
               01726 ; to bytes.
               01727 ; 00020000 - digit 3 segment 1
               01728 ; 00800000 - digit 3 segment 2
               01729 ; 00400000 - digit 3 segment 3
               01730 ; 00200000 - digit 3 segment 4
               01731 ; 00100000 - digit 3 segment 5
               01732 ; 00080000 - digit 3 segment 6
               01733 ; 00040000 - digit 3 segment 7
               01734 
               01735 ; 00000200 - digit 2 segment 1
               01736 ; 00008000 - digit 2 segment 2
               01737 ; 00004000 - digit 2 segment 3
               01738 ; 00002000 - digit 2 segment 4
               01739 ; 00001000 - digit 2 segment 5
               01740 ; 00000800 - digit 2 segment 6
               01741 ; 00000400 - digit 2 segment 7
               01742 
               01743 ; 00000002 - digit 1 segment 1
               01744 ; 00000080 - digit 1 segment 2
               01745 ; 00000040 - digit 1 segment 3
               01746 ; 00000020 - digit 1 segment 4
               01747 ; 00000010 - digit 1 segment 5
               01748 ; 00000008 - digit 1 segment 6
               01749 ; 00000004 - digit 1 segment 7
               01750 
               01751 
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_AMPM                        0000002D
ALARM_DURATIONH                   00000049
ALARM_DURATIONL                   0000004F
ALARM_ENABLED                     0000002E
ALARM_ENDH                        00000057
ALARM_ENDL                        00000058
ALARM_HOUR                        0000002A
ALARM_MINUTE                      0000002B
ALARM_ON                          0000004E
ALARM_PERIODH                     00000045
ALARM_PERIODL                     00000046
ALARM_PREVIEW                     00000054
ALARM_PTRH                        0000004A
ALARM_PTRL                        0000004B
ALARM_SONGH                       00000055
ALARM_SONGL                       00000056
ALARM_TIMEOUT                     000001E0
ALARM_TIMEOUT_COUNTERH            00000052
ALARM_TIMEOUT_COUNTERL            00000053
AUTO_COUNTER                      00000027
AUTO_DURATION                     00000028
BCLIE                             00000003
BCLIF                             00000003
BEEP_DURATIONH                    0000005C
BEEP_DURATIONL                    0000005D
BEEP_DURATION_FLAG                00000064
BEEP_ENDH                         00000060
BEEP_ENDL                         00000061
BEEP_ON                           00000059
BEEP_PERIODH                      0000005A
BEEP_PERIODL                      0000005B
BEEP_PTRH                         00000062
BEEP_PTRL                         00000063
BEEP_SONGH                        0000005E
BEEP_SONGL                        0000005F
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
COUNTER                           00000024
CREN                              00000004
CSRC                              00000007
CURRENT_AMPM                      00000028
CURRENT_DOTS                      00000029
CURRENT_FRACSECONDH               0000003C
CURRENT_FRACSECONDL               0000003D
CURRENT_HOUR                      00000025
CURRENT_MINUTE                    00000026
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEBOUNCE_MASK                     0000003B
DISPLAY_0                         00000044
DISPLAY_BITMASK0                  00000020
DISPLAY_BITMASK1                  00000021
DISPLAY_BITMASK2                  00000022
DISPLAY_BITMASK3                  00000023
D_A                               00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FRACSECONDS                       000001E0
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
HUNDREDS                          00000043
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INTVECTOR                         00000004
IRP                               00000007
IS_SET                            00000047
NEED_UPDATE_DISPLAY               0000004D
NOTE_A                            000002C6
NOTE_AF                           000002F0
NOTE_AS                           0000029E
NOTE_B                            00000279
NOTE_BF                           0000029E
NOTE_C                            000004AA
NOTE_C2                           00000255
NOTE_CS                           00000467
NOTE_D                            00000428
NOTE_DF                           00000467
NOTE_DS                           000003EC
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
NOTE_DURATION_TIMER               00000014
NOTE_E                            000003B4
NOTE_EF                           000003EC
NOTE_F                            0000037F
NOTE_FS                           0000034D
NOTE_G                            0000031D
NOTE_GS                           000002F0
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OLD_ALARM_ENABLED                 00000034
ONES                              0000002F
OPERATION                         0000007E
OPERATION_AUTO                    00000009
OPERATION_CURRENT_TIME            00000000
OPERATION_SET_ALARM               00000004
OPERATION_SET_TIME                00000001
OPERATION_TEST                    00000008
OPERATION_THERMOMETER             00000007
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PREV_OPERATION                    0000002C
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESETVECTOR                       00000000
REST                              00001388
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SUBOPERATION                      0000007F
SUBOPERATION_COUNTER              0000003E
SUBOPERATION_DELAY1               00000008
SUBOPERATION_DELAY2               00000001
SUBOPERATION_NONE                 00000000
SUBOPERATION_SET_HOUR             00000001
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
SUBOPERATION_SET_MINUTE           00000002
SUBOPERATION_TEMP                 00000004
SUBOPERATION_TIME                 00000003
SWITCH0_ACCUM                     00000035
SWITCH1_ACCUM                     00000036
SWITCH2_ACCUM                     00000037
SWITCH3_ACCUM                     00000038
SWITCH4_ACCUM                     00000039
SWITCH5_ACCUM                     0000003A
SWITCH_ALARM_ENABLE               00000007
SWITCH_ALARM_SET                  00000004
SWITCH_COUNTDOWNH                 00000065
SWITCH_COUNTDOWNL                 00000066
SWITCH_COUNTER                    0000004C
SWITCH_HOUR                       00000005
SWITCH_MINUTE                     00000001
SWITCH_MODE                       00000006
SWITCH_SAMPLERATE                 00000040
SWITCH_STATUS                     00000032
SWITCH_STATUS_NEW                 00000033
SWITCH_TIME_SET                   00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TENS                              00000030
THERMOMETER_COUNTER               00000048
THERMOMETER_COUNTER2              00000051
THERMOMETER_INPUT                 00000040
THERMOMETER_PRECHARGE             000000FF
THERMOMETER_VALUEH                00000042
THERMOMETER_VALUEL                00000041
TIMER_COUNTER                     00000031
TIMER_SCALE1                      00000C35
TIMER_SCALE2                      00000019
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_XT_OSC                           00003FFD
__16F877A                         00000001
alarm_change_done                 00000080
alarm_done                        0000026D
alarm_enabled                     00000077
alarm_enabled1                    00000380
alarm_end1                        00000593
alarm_end2                        000005C3
alarm_end3                        00000647
alarm_loop                        00000267
alarm_loop1                       0000026C
alarm_preview1                    00000275
alarm_preview_done                00000278
alarm_song1                       0000053F
alarm_song2                       00000593
alarm_song3                       000005C3
autoadvance_alarm_hour1           0000021C
autoadvance_alarm_hour2           00000223
autoadvance_alarm_minute1         0000023F
autoadvance_hour                  00000200
autoadvance_hour_done             0000022A
autoadvance_minute                0000022D
autoadvance_minute_done           00000247
autoadvance_time_hour1            0000020A
autoadvance_time_hour2            00000211
autoadvance_time_minute1          00000237
beep_done                         0000029F
beep_end1                         0000064B
beep_end10                        000007D9
beep_end2                         00000653
beep_end3                         0000065B
beep_end4                         00000663
beep_end5                         0000066B
beep_end6                         0000066D
beep_end7                         0000067F
beep_end8                         0000068F
beep_end9                         0000066F
beep_song1                        00000647
beep_song10                       0000068F
beep_song2                        0000064B
beep_song3                        00000653
beep_song4                        0000065B
beep_song5                        00000663
beep_song6                        0000066B
beep_song7                        0000066F
beep_song8                        0000067F
beep_song9                        0000066D
bitmasks                          00000535
change_mode1                      000000FA
change_mode2                      00000106
change_mode3                      000000EA
change_mode4                      000000E7
change_mode5                      0000010D
change_mode_done                  00000110
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
debounce                          0000041B
debounce_disable                  0000042F
debounce_done                     00000428
debounce_enable                   0000042C
debounce_off                      00000425
decrease_countdown                000002A6
display_alarm_time                000003B2
display_current_time              00000391
display_current_time1             00000396
display_current_time2             000003AC
divide                            00000433
done_halfsecond                   000001D4
enter_set_alarm                   000000B4
enter_set_alarm2                  000000C3
enter_set_time                    00000088
enter_set_time2                   00000097
even_halfsecond                   000001CF
exit_set_alarm                    000000C9
exit_set_time                     0000009D
get_alarm_note                    00000490
get_beep_note                     000004E4
get_beep_note2                    000004F1
get_bitmask                       00000467
get_switches                      000003FA
get_temperature                   0000047B
handle_halfsecond                 000001C8
handle_soliddots                  000001C5
hundreds_loop                     00000439
increase_alarm_hour1              00000133
increase_alarm_hour2              0000013E
increase_alarm_minute1            00000169
increase_hour_done1               00000144
increase_minute_done1             00000174
increase_time_hour1               00000125
increase_time_hour2               0000012D
increase_time_minute1             0000015F
interrupt                         00000462
load_display                      00000447
load_display_loop                 0000044C
loop                              00000056
loop2                             00000057
loop4                             0000018E
loop5                             0000024B
loop6                             0000026D
loop7                             00000278
loop8                             0000029C
loop9                             0000029F
next_song                         0000033F
next_song1                        00000350
next_song2                        00000361
odd_halfsecond                    000001CA
set_alarm_done                    000000D8
set_time_done                     000000AC
skip_thermometer                  0000018D
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
start                             00000005
start_alarm                       000002F2
start_beep                        000002AC
start_thermometer                 0000036A
stop_alarm                        0000030B
switches_done                     0000017A
tens_loop                         00000440
test_release_hour                 00000144
test_release_minute               00000174
test_set_hour                     00000110
test_set_minute                   0000014A
thermometer2                      0000029B
thermometer_event                 00000284
thermometer_ones                  000003E7
thermometer_tens                  000003E0
thermometer_tens1                 000003E5
thermotable                       000007D9
timer_event                       00000192
timer_event1                      000001EB
timer_event2                      000001BC
timer_event_done                  000001F1
timer_event_done1                 000001FD
timer_event_done2                 0000024B
toggle_auto1                      000001B7
update_alarm                      0000030E
update_alarm2                     00000329
update_alarm3                     00000335
update_alarm4                     00000337
update_alarm5                     00000318
update_beep                       000002C7
update_beep2                      000002CB
update_beep3                      000002DA
update_beep4                      000002E8
update_beep5                      000002EA
update_display                    00000377
update_display2                   000003AE
update_display6                   000003CA
update_display9                   000003EC
update_thermometer                000003D6


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

00000000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000000c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000001c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
gpasm-0.12.0 beta               clock2.s    4-24-2005  19:06:55          PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000002c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000003c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000004c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000005c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000006c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000007c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000008c0 : XXXXXXXXXXXXXXXX XXXXXXXXX------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used: 2262


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :      49 reported,       0 suppressed

