

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Sep 23 05:43:02 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 1.45
    48                           ; Generated 16/11/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18LF458 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	smallconst
    83  000600                     __psmallconst:
    84                           	opt stack 0
    85  000600  00                 	db	0
    86  000601                     _led_masks2:
    87                           	opt stack 0
    88  000601  0D                 	db	13
    89  000602  83                 	db	131
    90  000603  04                 	db	4
    91  000604  80                 	db	128
    92  000605  0F                 	db	15
    93  000606  01                 	db	1
    94  000607  0F                 	db	15
    95  000608  80                 	db	128
    96  000609  06                 	db	6
    97  00060A  82                 	db	130
    98  00060B  0B                 	db	11
    99  00060C  82                 	db	130
   100  00060D  0B                 	db	11
   101  00060E  83                 	db	131
   102  00060F  0C                 	db	12
   103  000610  80                 	db	128
   104  000611  0F                 	db	15
   105  000612  83                 	db	131
   106  000613  0F                 	db	15
   107  000614  82                 	db	130
   108  000615                     __end_of_led_masks2:
   109                           	opt stack 0
   110  000615                     _led_masks1:
   111                           	opt stack 0
   112  000615  20                 	db	32
   113  000616  7C                 	db	124
   114  000617  20                 	db	32
   115  000618  08                 	db	8
   116  000619  30                 	db	48
   117  00061A  34                 	db	52
   118  00061B  30                 	db	48
   119  00061C  1C                 	db	28
   120  00061D  30                 	db	48
   121  00061E  48                 	db	72
   122  00061F  10                 	db	16
   123  000620  5C                 	db	92
   124  000621  10                 	db	16
   125  000622  7C                 	db	124
   126  000623  20                 	db	32
   127  000624  18                 	db	24
   128  000625  30                 	db	48
   129  000626  7C                 	db	124
   130  000627  30                 	db	48
   131  000628  5C                 	db	92
   132  000629                     __end_of_led_masks1:
   133                           	opt stack 0
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _PR2	set	4043
   137  0000                     _T2CON	set	4042
   138  0000                     _SPBRG	set	4015
   139  0000                     _RCSTA	set	4011
   140  0000                     _TXSTA	set	4012
   141  0000                     _ADCON1	set	4033
   142  0000                     _PORTAbits	set	3968
   143  0000                     _LATD	set	3980
   144  0000                     _LATC	set	3979
   145  0000                     _TXREG	set	4013
   146  0000                     _TMR2IF	set	31985
   147  0000                     _PEIE	set	32662
   148  0000                     _GIE	set	32663
   149  0000                     _LATA4	set	31820
   150  0000                     _LATA5	set	31821
   151  0000                     _TMR2IE	set	31977
   152  0000                     _TRISA5	set	31893
   153  0000                     _TRISA4	set	31892
   154  0000                     _TXIF	set	31988
   155  000629                     STR_1:
   156  000629  57                 	db	87	;'W'
   157  00062A  65                 	db	101	;'e'
   158  00062B  6C                 	db	108	;'l'
   159  00062C  63                 	db	99	;'c'
   160  00062D  6F                 	db	111	;'o'
   161  00062E  6D                 	db	109	;'m'
   162  00062F  65                 	db	101	;'e'
   163  000630  20                 	db	32
   164  000631  74                 	db	116	;'t'
   165  000632  6F                 	db	111	;'o'
   166  000633  20                 	db	32
   167  000634  48                 	db	72	;'H'
   168  000635  75                 	db	117	;'u'
   169  000636  67                 	db	103	;'g'
   170  000637  65                 	db	101	;'e'
   171  000638  20                 	db	32
   172  000639  48                 	db	72	;'H'
   173  00063A  79                 	db	121	;'y'
   174  00063B  67                 	db	103	;'g'
   175  00063C  72                 	db	114	;'r'
   176  00063D  6F                 	db	111	;'o'
   177  00063E  6D                 	db	109	;'m'
   178  00063F  65                 	db	101	;'e'
   179  000640  74                 	db	116	;'t'
   180  000641  65                 	db	101	;'e'
   181  000642  72                 	db	114	;'r'
   182  000643  0A                 	db	10
   183  000644  00                 	db	0
   184  000645                     STR_2:
   185  000645  53                 	db	83	;'S'
   186  000646  74                 	db	116	;'t'
   187  000647  61                 	db	97	;'a'
   188  000648  72                 	db	114	;'r'
   189  000649  74                 	db	116	;'t'
   190  00064A  69                 	db	105	;'i'
   191  00064B  6E                 	db	110	;'n'
   192  00064C  67                 	db	103	;'g'
   193  00064D  20                 	db	32
   194  00064E  41                 	db	65	;'A'
   195  00064F  48                 	db	72	;'H'
   196  000650  54                 	db	84	;'T'
   197  000651  32                 	db	50	;'2'
   198  000652  30                 	db	48	;'0'
   199  000653  0A                 	db	10
   200  000654  00                 	db	0
   201  000655                     STR_3:
   202  000655  4D                 	db	77	;'M'
   203  000656  41                 	db	65	;'A'
   204  000657  6E                 	db	110	;'n'
   205  000658  65                 	db	101	;'e'
   206  000659  20                 	db	32
   207  00065A  6C                 	db	108	;'l'
   208  00065B  6F                 	db	111	;'o'
   209  00065C  6F                 	db	111	;'o'
   210  00065D  70                 	db	112	;'p'
   211  00065E  0A                 	db	10
   212  00065F  00                 	db	0
   213  000660                     STR_5:
   214  000660  48                 	db	72	;'H'
   215  000661  55                 	db	85	;'U'
   216  000662  4D                 	db	77	;'M'
   217  000663  49                 	db	73	;'I'
   218  000664  44                 	db	68	;'D'
   219  000665  49                 	db	73	;'I'
   220  000666  54                 	db	84	;'T'
   221  000667  59                 	db	89	;'Y'
   222  000668  3D                 	db	61	;'='
   223  000669  00                 	db	0
   224  00066A                     STR_4:
   225  00066A  54                 	db	84	;'T'
   226  00066B  45                 	db	69	;'E'
   227  00066C  4D                 	db	77	;'M'
   228  00066D  50                 	db	80	;'P'
   229  00066E  3D                 	db	61	;'='
   230  00066F  00                 	db	0
   231  0000                     
   232                           ; #config settings
   233  000670  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           	psect	cinit
   236  001350                     __pcinit:
   237                           	opt stack 0
   238  001350                     start_initialization:
   239                           	opt stack 0
   240  001350                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (72 bytes)
   244  001350  EE00  F060         	lfsr	0,__pbssBANK0
   245  001354  0E48               	movlw	72
   246  001356                     clear_0:
   247  001356  6AEE               	clrf	postinc0,c
   248  001358  06E8               	decf	wreg,f,c
   249  00135A  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to COMRAM (17 bytes)
   252  00135C  EE00  F03C         	lfsr	0,__pbssCOMRAM
   253  001360  0E11               	movlw	17
   254  001362                     clear_1:
   255  001362  6AEE               	clrf	postinc0,c
   256  001364  06E8               	decf	wreg,f,c
   257  001366  E1FD               	bnz	clear_1
   258  001368                     end_of_initialization:
   259                           	opt stack 0
   260  001368                     __end_of__initialization:
   261                           	opt stack 0
   262  001368  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  00136A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  00136C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   265  00136E  6EF8               	movwf	tblptru,c
   266  001370  0E06               	movlw	high __Lsmallconst
   267  001372  6EF7               	movwf	tblptrh,c
   268  001374  0100               	movlb	0
   269  001376  EFD6  F004         	goto	_main	;jump to C main() function
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           
   275                           	psect	bssCOMRAM
   276  00003C                     __pbssCOMRAM:
   277                           	opt stack 0
   278  00003C                     _i2c_buffer:
   279                           	opt stack 0
   280  00003C                     	ds	8
   281  000044                     _force:
   282                           	opt stack 0
   283  000044                     	ds	2
   284  000046                     _number:
   285                           	opt stack 0
   286  000046                     	ds	2
   287  000048                     _uart_position2:
   288                           	opt stack 0
   289  000048                     	ds	1
   290  000049                     _uart_position1:
   291                           	opt stack 0
   292  000049                     	ds	1
   293  00004A                     _uart_size:
   294                           	opt stack 0
   295  00004A                     	ds	1
   296  00004B                     _flags:
   297                           	opt stack 0
   298  00004B                     	ds	1
   299  00004C                     _tick:
   300                           	opt stack 0
   301  00004C                     	ds	1
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           
   307                           	psect	bssBANK0
   308  000060                     __pbssBANK0:
   309                           	opt stack 0
   310  000060                     _uart_buffer:
   311                           	opt stack 0
   312  000060                     	ds	64
   313  0000A0                     _led_mask1:
   314                           	opt stack 0
   315  0000A0                     	ds	1
   316  0000A1                     _led_mask0:
   317                           	opt stack 0
   318  0000A1                     	ds	1
   319  0000A2                     _sensor:
   320                           	opt stack 0
   321  0000A2                     	ds	6
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           
   327                           	psect	cstackBANK0
   328  0000A8                     __pcstackBANK0:
   329                           	opt stack 0
   330  0000A8                     ?___ftadd:
   331                           	opt stack 0
   332  0000A8                     ___ftadd@f1:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x0
   336  0000A8                     	ds	3
   337  0000AB                     ___ftadd@f2:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0x3
   341  0000AB                     	ds	3
   342  0000AE                     ___ftadd@sign:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x6
   346  0000AE                     	ds	1
   347  0000AF                     ___ftadd@exp2:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x7
   351  0000AF                     	ds	1
   352  0000B0                     ___ftadd@exp1:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x8
   356  0000B0                     	ds	1
   357  0000B1                     ?___fttol:
   358                           	opt stack 0
   359  0000B1                     read_aht20@ptr:
   360                           	opt stack 0
   361  0000B1                     ___fttol@f1:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x9
   365  0000B1                     	ds	2
   366  0000B3                     read_aht20@x:
   367                           	opt stack 0
   368                           
   369                           ; 4 bytes @ 0xB
   370  0000B3                     	ds	2
   371  0000B5                     ??___fttol:
   372                           
   373                           ; 1 bytes @ 0xD
   374  0000B5                     	ds	5
   375  0000BA                     ___fttol@sign1:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x12
   379  0000BA                     	ds	1
   380  0000BB                     ___fttol@lval:
   381                           	opt stack 0
   382                           
   383                           ; 4 bytes @ 0x13
   384  0000BB                     	ds	4
   385  0000BF                     ___fttol@exp1:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x17
   389  0000BF                     	ds	1
   390  0000C0                     print_number@number_arg:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x18
   394  0000C0                     	ds	2
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           	psect	cstackCOMRAM
   401  000001                     __pcstackCOMRAM:
   402                           	opt stack 0
   403  000001                     ??_isr:
   404                           
   405                           ; 1 bytes @ 0x0
   406  000001                     	ds	18
   407  000013                     ?___awdiv:
   408                           	opt stack 0
   409  000013                     ?___awmod:
   410                           	opt stack 0
   411  000013                     ?___lwdiv:
   412                           	opt stack 0
   413  000013                     ?___lwmod:
   414                           	opt stack 0
   415  000013                     ?___ftpack:
   416                           	opt stack 0
   417  000013                     ?___lmul:
   418                           	opt stack 0
   419  000013                     send_uart@c:
   420                           	opt stack 0
   421  000013                     set_data@value:
   422                           	opt stack 0
   423  000013                     set_clock@value:
   424                           	opt stack 0
   425  000013                     ___awdiv@dividend:
   426                           	opt stack 0
   427  000013                     ___awmod@dividend:
   428                           	opt stack 0
   429  000013                     ___lwdiv@dividend:
   430                           	opt stack 0
   431  000013                     ___lwmod@dividend:
   432                           	opt stack 0
   433  000013                     ___ftpack@arg:
   434                           	opt stack 0
   435  000013                     ___lmul@multiplier:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0x12
   439  000013                     	ds	1
   440  000014                     ??_i2c_read:
   441  000014                     i2c_write@ack:
   442                           	opt stack 0
   443  000014                     print_text@s:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x13
   447  000014                     	ds	1
   448  000015                     i2c_write@value:
   449                           	opt stack 0
   450  000015                     ___awdiv@divisor:
   451                           	opt stack 0
   452  000015                     ___awmod@divisor:
   453                           	opt stack 0
   454  000015                     ___lwdiv@divisor:
   455                           	opt stack 0
   456  000015                     ___lwmod@divisor:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x14
   460  000015                     	ds	1
   461  000016                     i2c_write@i:
   462                           	opt stack 0
   463  000016                     ___ftpack@exp:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x15
   467  000016                     	ds	1
   468  000017                     i2c_write_device2@len:
   469                           	opt stack 0
   470  000017                     ___awdiv@counter:
   471                           	opt stack 0
   472  000017                     ___awmod@counter:
   473                           	opt stack 0
   474  000017                     ___ftpack@sign:
   475                           	opt stack 0
   476  000017                     ___lwmod@counter:
   477                           	opt stack 0
   478  000017                     ___lwdiv@quotient:
   479                           	opt stack 0
   480  000017                     ___lmul@multiplicand:
   481                           	opt stack 0
   482                           
   483                           ; 4 bytes @ 0x16
   484  000017                     	ds	1
   485  000018                     ??___ftpack:
   486  000018                     i2c_write_device2@i:
   487                           	opt stack 0
   488  000018                     ___awdiv@sign:
   489                           	opt stack 0
   490  000018                     ___awmod@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x17
   494  000018                     	ds	1
   495  000019                     ___lwdiv@counter:
   496                           	opt stack 0
   497  000019                     ___awdiv@quotient:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x18
   501  000019                     	ds	1
   502  00001A                     print_digit@place:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x19
   506  00001A                     	ds	1
   507  00001B                     i2c_read@value:
   508                           	opt stack 0
   509  00001B                     ___lmul@product:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x1A
   513  00001B                     	ds	1
   514  00001C                     i2c_read@bytes:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x1B
   518  00001C                     	ds	1
   519  00001D                     i2c_read@j:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x1C
   523  00001D                     	ds	1
   524  00001E                     i2c_read@i:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x1D
   528  00001E                     	ds	1
   529  00001F                     ?___altoft:
   530                           	opt stack 0
   531  00001F                     i2c_read_device2@bytes:
   532                           	opt stack 0
   533  00001F                     ___altoft@c:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x1E
   537  00001F                     	ds	1
   538  000020                     i2c_read_device2@i:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x1F
   542  000020                     	ds	1
   543  000021                     init_aht20@ptr:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x20
   547  000021                     	ds	2
   548  000023                     ??_init_aht20:
   549  000023                     ??___altoft:
   550                           
   551                           ; 1 bytes @ 0x22
   552  000023                     	ds	4
   553  000027                     ___altoft@exp:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x26
   557  000027                     	ds	1
   558  000028                     ___altoft@sign:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x27
   562  000028                     	ds	1
   563  000029                     ?___ftdiv:
   564                           	opt stack 0
   565  000029                     ___ftdiv@f1:
   566                           	opt stack 0
   567                           
   568                           ; 3 bytes @ 0x28
   569  000029                     	ds	3
   570  00002C                     ___ftdiv@f2:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x2B
   574  00002C                     	ds	3
   575  00002F                     ??___ftdiv:
   576                           
   577                           ; 1 bytes @ 0x2E
   578  00002F                     	ds	3
   579  000032                     ___ftdiv@cntr:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x31
   583  000032                     	ds	1
   584  000033                     ___ftdiv@f3:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x32
   588  000033                     	ds	3
   589  000036                     ___ftdiv@exp:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x35
   593  000036                     	ds	1
   594  000037                     ___ftdiv@sign:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x36
   598  000037                     	ds	1
   599  000038                     ??___ftadd:
   600                           
   601                           ; 1 bytes @ 0x37
   602  000038                     	ds	3
   603  00003B                     ??_read_aht20:
   604  00003B                     draw_value@value:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x3A
   608  00003B                     	ds	1
   609  00003C                     tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           
   614                           ; 1 bytes @ 0x3B
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 515 in file "mane.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels required when called:    6
   640 ;; This function calls:
   641 ;;		___ftadd
   642 ;;		___fttol
   643 ;;		_draw_value
   644 ;;		_flush_uart
   645 ;;		_handle_uart
   646 ;;		_init_aht20
   647 ;;		_print_number
   648 ;;		_print_text
   649 ;;		_read_aht20
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text0
   656  0009AC                     __ptext0:
   657                           	opt stack 0
   658  0009AC                     _main:
   659                           	opt stack 25
   660                           
   661                           ;mane.c: 518: ADCON1 = 0b00000111;
   662                           
   663                           ;incstack = 0
   664  0009AC  0E07               	movlw	7
   665  0009AE  6EC1               	movwf	4033,c	;volatile
   666                           
   667                           ;mane.c: 521: TXSTA = 0b00100100;
   668  0009B0  0E24               	movlw	36
   669  0009B2  6EAC               	movwf	4012,c	;volatile
   670                           
   671                           ;mane.c: 522: RCSTA = 0b10000000;
   672  0009B4  0E80               	movlw	128
   673  0009B6  6EAB               	movwf	4011,c	;volatile
   674                           
   675                           ;mane.c: 524: SPBRG = 3;
   676  0009B8  0E03               	movlw	3
   677  0009BA  6EAF               	movwf	4015,c	;volatile
   678                           
   679                           ;mane.c: 527: T2CON = 0b01111111;
   680  0009BC  0E7F               	movlw	127
   681  0009BE  6ECA               	movwf	4042,c	;volatile
   682                           
   683                           ;mane.c: 528: TMR2IE = 1;
   684  0009C0  829D               	bsf	3997,1,c	;volatile
   685                           
   686                           ;mane.c: 529: PR2 = 0xff;
   687  0009C2  68CB               	setf	4043,c	;volatile
   688                           
   689                           ;mane.c: 532: TRISC = ~0b00111111;
   690  0009C4  0EC0               	movlw	192
   691  0009C6  6E94               	movwf	3988,c	;volatile
   692                           
   693                           ;mane.c: 533: TRISD = ~0b11111111;
   694  0009C8  0E00               	movlw	0
   695  0009CA  6E95               	movwf	3989,c	;volatile
   696                           
   697                           ;mane.c: 535: LATC = 0b00111111;
   698  0009CC  0E3F               	movlw	63
   699  0009CE  6E8B               	movwf	3979,c	;volatile
   700                           
   701                           ;mane.c: 536: LATD = 0b11111111;
   702  0009D0  688C               	setf	3980,c	;volatile
   703                           
   704                           ;mane.c: 538: print_text("Welcome to Huge Hygrometer\n");
   705  0009D2  0E29               	movlw	low STR_1
   706  0009D4  6E14               	movwf	print_text@s,c
   707  0009D6  0E06               	movlw	high STR_1
   708  0009D8  6E15               	movwf	print_text@s+1,c
   709  0009DA  ECBD  F009         	call	_print_text	;wreg free
   710                           
   711                           ;mane.c: 539: flush_uart();
   712  0009DE  EC1F  F00A         	call	_flush_uart	;wreg free
   713                           
   714                           ;mane.c: 542: LATA5 = 0;
   715  0009E2  9A89               	bcf	3977,5,c	;volatile
   716                           
   717                           ;mane.c: 543: LATA4 = 0;
   718  0009E4  9889               	bcf	3977,4,c	;volatile
   719                           
   720                           ;mane.c: 544: TRISA5 = 1;
   721  0009E6  8A92               	bsf	3986,5,c	;volatile
   722                           
   723                           ;mane.c: 545: TRISA4 = 1;
   724  0009E8  8892               	bsf	3986,4,c	;volatile
   725                           
   726                           ;mane.c: 546: print_text("Starting AHT20\n");
   727  0009EA  0E45               	movlw	low STR_2
   728  0009EC  6E14               	movwf	print_text@s,c
   729  0009EE  0E06               	movlw	high STR_2
   730  0009F0  6E15               	movwf	print_text@s+1,c
   731  0009F2  ECBD  F009         	call	_print_text	;wreg free
   732                           
   733                           ;mane.c: 547: flush_uart();
   734  0009F6  EC1F  F00A         	call	_flush_uart	;wreg free
   735                           
   736                           ;mane.c: 548: init_aht20(&sensor);
   737  0009FA  0EA2               	movlw	low _sensor
   738  0009FC  6E21               	movwf	init_aht20@ptr,c
   739  0009FE  0E00               	movlw	high _sensor
   740  000A00  6E22               	movwf	init_aht20@ptr+1,c
   741  000A02  ECD2  F009         	call	_init_aht20	;wreg free
   742                           
   743                           ;mane.c: 551: GIE = 1;
   744  000A06  8EF2               	bsf	intcon,7,c	;volatile
   745                           
   746                           ;mane.c: 552: PEIE = 1;
   747  000A08  8CF2               	bsf	intcon,6,c	;volatile
   748                           
   749                           ;mane.c: 553: print_text("MAne loop\n");
   750  000A0A  0E55               	movlw	low STR_3
   751  000A0C  6E14               	movwf	print_text@s,c
   752  000A0E  0E06               	movlw	high STR_3
   753  000A10  6E15               	movwf	print_text@s+1,c
   754  000A12  ECBD  F009         	call	_print_text	;wreg free
   755                           
   756                           ;mane.c: 554: flush_uart();
   757  000A16  EC1F  F00A         	call	_flush_uart	;wreg free
   758  000A1A                     l186:
   759  000A1A  0004               	clrwdt		;# 
   760                           
   761                           ;mane.c: 559: handle_uart();
   762  000A1C  EC7A  F009         	call	_handle_uart	;wreg free
   763                           
   764                           ;mane.c: 560: if(tick >= 16)
   765  000A20  0E0F               	movlw	15
   766  000A22  644C               	cpfsgt	_tick,c
   767  000A24  D7FA               	goto	l186
   768                           
   769                           ;mane.c: 561: {
   770                           ;mane.c: 562: tick = 0;
   771  000A26  0E00               	movlw	0
   772  000A28  6E4C               	movwf	_tick,c
   773                           
   774                           ;mane.c: 564: read_aht20(&sensor);
   775  000A2A  0EA2               	movlw	low _sensor
   776  000A2C  0100               	movlb	0	; () banked
   777  000A2E  6FB1               	movwf	read_aht20@ptr& (0+255),b
   778  000A30  0E00               	movlw	high _sensor
   779  000A32  6FB2               	movwf	(read_aht20@ptr+1)& (0+255),b
   780  000A34  EC10  F004         	call	_read_aht20	;wreg free
   781                           
   782                           ;mane.c: 565: print_text("TEMP=");
   783  000A38  0E6A               	movlw	low STR_4
   784  000A3A  6E14               	movwf	print_text@s,c
   785  000A3C  0E06               	movlw	high STR_4
   786  000A3E  6E15               	movwf	print_text@s+1,c
   787  000A40  ECBD  F009         	call	_print_text	;wreg free
   788                           
   789                           ;mane.c: 566: print_number((uint16_t)sensor.t);
   790  000A44  C0A5  F0B1         	movff	_sensor+3,___fttol@f1
   791  000A48  C0A6  F0B2         	movff	_sensor+4,___fttol@f1+1
   792  000A4C  C0A7  F0B3         	movff	_sensor+5,___fttol@f1+2
   793  000A50  ECDF  F005         	call	___fttol	;wreg free
   794  000A54  C0B1  F0C0         	movff	?___fttol,print_number@number_arg
   795  000A58  C0B2  F0C1         	movff	?___fttol+1,print_number@number_arg+1
   796  000A5C  EC7B  F007         	call	_print_number	;wreg free
   797                           
   798                           ;mane.c: 567: print_text("HUMIDITY=");
   799  000A60  0E60               	movlw	low STR_5
   800  000A62  6E14               	movwf	print_text@s,c
   801  000A64  0E06               	movlw	high STR_5
   802  000A66  6E15               	movwf	print_text@s+1,c
   803  000A68  ECBD  F009         	call	_print_text	;wreg free
   804                           
   805                           ;mane.c: 568: print_number((uint16_t)(sensor.h + 0.5));
   806  000A6C  0E00               	movlw	0
   807  000A6E  0100               	movlb	0	; () banked
   808  000A70  6FAB               	movwf	___ftadd@f2& (0+255),b
   809  000A72  0E00               	movlw	0
   810  000A74  6FAC               	movwf	(___ftadd@f2+1)& (0+255),b
   811  000A76  0E3F               	movlw	63
   812  000A78  6FAD               	movwf	(___ftadd@f2+2)& (0+255),b
   813  000A7A  C0A2  F0A8         	movff	_sensor,___ftadd@f1
   814  000A7E  C0A3  F0A9         	movff	_sensor+1,___ftadd@f1+1
   815  000A82  C0A4  F0AA         	movff	_sensor+2,___ftadd@f1+2
   816  000A86  EC39  F003         	call	___ftadd	;wreg free
   817  000A8A  C0A8  F0B1         	movff	?___ftadd,___fttol@f1
   818  000A8E  C0A9  F0B2         	movff	?___ftadd+1,___fttol@f1+1
   819  000A92  C0AA  F0B3         	movff	?___ftadd+2,___fttol@f1+2
   820  000A96  ECDF  F005         	call	___fttol	;wreg free
   821  000A9A  C0B1  F0C0         	movff	?___fttol,print_number@number_arg
   822  000A9E  C0B2  F0C1         	movff	?___fttol+1,print_number@number_arg+1
   823  000AA2  EC7B  F007         	call	_print_number	;wreg free
   824                           
   825                           ;mane.c: 569: print_text("\n");
   826  000AA6  0E53               	movlw	low (STR_2+14)
   827  000AA8  6E14               	movwf	print_text@s,c
   828  000AAA  0E06               	movlw	high (STR_2+14)
   829  000AAC  6E15               	movwf	print_text@s+1,c
   830  000AAE  ECBD  F009         	call	_print_text	;wreg free
   831                           
   832                           ;mane.c: 572: draw_value();
   833  000AB2  EC5C  F005         	call	_draw_value	;wreg free
   834  000AB6  D7B1               	goto	l186
   835  000AB8                     __end_of_main:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           intcon	equ	0xFF2
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           
   843 ;; *************** function _read_aht20 *****************
   844 ;; Defined at:
   845 ;;		line 469 in file "mane.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  ptr             2    9[BANK0 ] PTR struct .
   848 ;;		 -> sensor(6), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  x               4   11[BANK0 ] long 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   860 ;;      Params:         0       2       0       0       0       0       0
   861 ;;      Locals:         0       4       0       0       0       0       0
   862 ;;      Temps:          1       0       0       0       0       0       0
   863 ;;      Totals:         1       6       0       0       0       0       0
   864 ;;Total ram usage:        7 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    5
   867 ;; This function calls:
   868 ;;		___altoft
   869 ;;		___ftadd
   870 ;;		___ftdiv
   871 ;;		___lmul
   872 ;;		_aht20_status
   873 ;;		_i2c_read_device2
   874 ;;		_i2c_write_device2
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text1
   881  000820                     __ptext1:
   882                           	opt stack 0
   883  000820                     _read_aht20:
   884                           	opt stack 25
   885                           
   886                           ;mane.c: 471: i2c_buffer[0] = 0xAC;
   887                           
   888                           ;incstack = 0
   889  000820  0EAC               	movlw	172
   890  000822  6E3C               	movwf	_i2c_buffer,c
   891                           
   892                           ;mane.c: 472: i2c_buffer[1] = 0x33;
   893  000824  0E33               	movlw	51
   894  000826  6E3D               	movwf	_i2c_buffer+1,c
   895                           
   896                           ;mane.c: 473: i2c_buffer[2] = 0x00;
   897  000828  0E00               	movlw	0
   898  00082A  6E3E               	movwf	_i2c_buffer+2,c
   899                           
   900                           ;mane.c: 474: i2c_write_device2(3);
   901  00082C  0E03               	movlw	3
   902  00082E  EC5E  F009         	call	_i2c_write_device2
   903  000832                     
   904                           ;mane.c: 478: {
   905                           ;mane.c: 479: ;
   906  000832  EC32  F00A         	call	_aht20_status	;wreg free
   907  000836  6E3B               	movwf	??_read_aht20& (0+255),c
   908  000838  BE3B               	btfsc	??_read_aht20,7,c
   909  00083A  D7FB               	goto	l173
   910                           
   911                           ;mane.c: 480: }
   912                           ;mane.c: 483: i2c_read_device2(6);
   913  00083C  0E06               	movlw	6
   914  00083E  EC40  F009         	call	_i2c_read_device2
   915                           
   916                           ;mane.c: 484: int32_t x = i2c_buffer[1];
   917  000842  503D               	movf	_i2c_buffer+1,w,c
   918  000844  0100               	movlb	0	; () banked
   919  000846  6FB3               	movwf	read_aht20@x& (0+255),b
   920  000848  6BB4               	clrf	(read_aht20@x+1)& (0+255),b
   921  00084A  6BB5               	clrf	(read_aht20@x+2)& (0+255),b
   922  00084C  6BB6               	clrf	(read_aht20@x+3)& (0+255),b
   923                           
   924                           ; BSR set to: 0
   925                           ;mane.c: 485: x <<= 8;
   926  00084E  C0B5  F0B6         	movff	read_aht20@x+2,read_aht20@x+3
   927  000852  C0B4  F0B5         	movff	read_aht20@x+1,read_aht20@x+2
   928  000856  C0B3  F0B4         	movff	read_aht20@x,read_aht20@x+1
   929  00085A  6BB3               	clrf	read_aht20@x& (0+255),b
   930                           
   931                           ; BSR set to: 0
   932                           ;mane.c: 486: x |= i2c_buffer[2];
   933  00085C  503E               	movf	_i2c_buffer+2,w,c
   934  00085E  13B3               	iorwf	read_aht20@x& (0+255),f,b
   935                           
   936                           ; BSR set to: 0
   937                           ;mane.c: 487: x <<= 4;
   938  000860  0E04               	movlw	4
   939  000862                     u2695:
   940  000862  90D8               	bcf	status,0,c
   941  000864  37B3               	rlcf	read_aht20@x& (0+255),f,b
   942  000866  37B4               	rlcf	(read_aht20@x+1)& (0+255),f,b
   943  000868  37B5               	rlcf	(read_aht20@x+2)& (0+255),f,b
   944  00086A  37B6               	rlcf	(read_aht20@x+3)& (0+255),f,b
   945  00086C  2EE8               	decfsz	wreg,f,c
   946  00086E  D7F9               	goto	u2695
   947                           
   948                           ; BSR set to: 0
   949                           ;mane.c: 488: x |= i2c_buffer[3] >> 4;
   950  000870  C03F  F03B         	movff	_i2c_buffer+3,??_read_aht20
   951  000874  3A3B               	swapf	??_read_aht20,f,c
   952  000876  0E0F               	movlw	15
   953  000878  163B               	andwf	??_read_aht20,f,c
   954  00087A  503B               	movf	??_read_aht20,w,c
   955  00087C  13B3               	iorwf	read_aht20@x& (0+255),f,b
   956                           
   957                           ; BSR set to: 0
   958                           ;mane.c: 489: ptr->h = (float)(x * 100) / 0x100000;
   959  00087E  C0B3  F013         	movff	read_aht20@x,___lmul@multiplier
   960  000882  C0B4  F014         	movff	read_aht20@x+1,___lmul@multiplier+1
   961  000886  C0B5  F015         	movff	read_aht20@x+2,___lmul@multiplier+2
   962  00088A  C0B6  F016         	movff	read_aht20@x+3,___lmul@multiplier+3
   963  00088E  0E64               	movlw	100
   964  000890  6E17               	movwf	___lmul@multiplicand,c
   965  000892  0E00               	movlw	0
   966  000894  6E18               	movwf	___lmul@multiplicand+1,c
   967  000896  0E00               	movlw	0
   968  000898  6E19               	movwf	___lmul@multiplicand+2,c
   969  00089A  0E00               	movlw	0
   970  00089C  6E1A               	movwf	___lmul@multiplicand+3,c
   971  00089E  EC75  F008         	call	___lmul	;wreg free
   972  0008A2  C013  F01F         	movff	?___lmul,___altoft@c
   973  0008A6  C014  F020         	movff	?___lmul+1,___altoft@c+1
   974  0008AA  C015  F021         	movff	?___lmul+2,___altoft@c+2
   975  0008AE  C016  F022         	movff	?___lmul+3,___altoft@c+3
   976  0008B2  EC01  F008         	call	___altoft	;wreg free
   977  0008B6  C01F  F029         	movff	?___altoft,___ftdiv@f1
   978  0008BA  C020  F02A         	movff	?___altoft+1,___ftdiv@f1+1
   979  0008BE  C021  F02B         	movff	?___altoft+2,___ftdiv@f1+2
   980  0008C2  0E00               	movlw	0
   981  0008C4  6E2C               	movwf	___ftdiv@f2,c
   982  0008C6  0E80               	movlw	128
   983  0008C8  6E2D               	movwf	___ftdiv@f2+1,c
   984  0008CA  0E49               	movlw	73
   985  0008CC  6E2E               	movwf	___ftdiv@f2+2,c
   986  0008CE  EC5B  F006         	call	___ftdiv	;wreg free
   987  0008D2  C0B1  FFD9         	movff	read_aht20@ptr,fsr2l
   988  0008D6  C0B2  FFDA         	movff	read_aht20@ptr+1,fsr2h
   989  0008DA  C029  FFDE         	movff	?___ftdiv,postinc2
   990  0008DE  C02A  FFDE         	movff	?___ftdiv+1,postinc2
   991  0008E2  C02B  FFDE         	movff	?___ftdiv+2,postinc2
   992                           
   993                           ;mane.c: 491: x = i2c_buffer[3] & 0x0f;
   994  0008E6  C03F  F03B         	movff	_i2c_buffer+3,??_read_aht20
   995  0008EA  0E0F               	movlw	15
   996  0008EC  163B               	andwf	??_read_aht20,f,c
   997  0008EE  503B               	movf	??_read_aht20,w,c
   998  0008F0  0100               	movlb	0	; () banked
   999  0008F2  6FB3               	movwf	read_aht20@x& (0+255),b
  1000  0008F4  6BB4               	clrf	(read_aht20@x+1)& (0+255),b
  1001  0008F6  6BB5               	clrf	(read_aht20@x+2)& (0+255),b
  1002  0008F8  6BB6               	clrf	(read_aht20@x+3)& (0+255),b
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;mane.c: 492: x <<= 8;
  1006  0008FA  C0B5  F0B6         	movff	read_aht20@x+2,read_aht20@x+3
  1007  0008FE  C0B4  F0B5         	movff	read_aht20@x+1,read_aht20@x+2
  1008  000902  C0B3  F0B4         	movff	read_aht20@x,read_aht20@x+1
  1009  000906  6BB3               	clrf	read_aht20@x& (0+255),b
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;mane.c: 493: x |= i2c_buffer[4];
  1013  000908  5040               	movf	_i2c_buffer+4,w,c
  1014  00090A  13B3               	iorwf	read_aht20@x& (0+255),f,b
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;mane.c: 494: x <<= 8;
  1018  00090C  C0B5  F0B6         	movff	read_aht20@x+2,read_aht20@x+3
  1019  000910  C0B4  F0B5         	movff	read_aht20@x+1,read_aht20@x+2
  1020  000914  C0B3  F0B4         	movff	read_aht20@x,read_aht20@x+1
  1021  000918  6BB3               	clrf	read_aht20@x& (0+255),b
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;mane.c: 495: x |= i2c_buffer[5];
  1025  00091A  5041               	movf	_i2c_buffer+5,w,c
  1026  00091C  13B3               	iorwf	read_aht20@x& (0+255),f,b
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;mane.c: 496: ptr->t = (float)(x * 200) / 0x100000 - 50;
  1030  00091E  0E00               	movlw	0
  1031  000920  6E2C               	movwf	___ftdiv@f2,c
  1032  000922  0E80               	movlw	128
  1033  000924  6E2D               	movwf	___ftdiv@f2+1,c
  1034  000926  0E49               	movlw	73
  1035  000928  6E2E               	movwf	___ftdiv@f2+2,c
  1036  00092A  C0B3  F013         	movff	read_aht20@x,___lmul@multiplier
  1037  00092E  C0B4  F014         	movff	read_aht20@x+1,___lmul@multiplier+1
  1038  000932  C0B5  F015         	movff	read_aht20@x+2,___lmul@multiplier+2
  1039  000936  C0B6  F016         	movff	read_aht20@x+3,___lmul@multiplier+3
  1040  00093A  0EC8               	movlw	200
  1041  00093C  6E17               	movwf	___lmul@multiplicand,c
  1042  00093E  0E00               	movlw	0
  1043  000940  6E18               	movwf	___lmul@multiplicand+1,c
  1044  000942  0E00               	movlw	0
  1045  000944  6E19               	movwf	___lmul@multiplicand+2,c
  1046  000946  0E00               	movlw	0
  1047  000948  6E1A               	movwf	___lmul@multiplicand+3,c
  1048  00094A  EC75  F008         	call	___lmul	;wreg free
  1049  00094E  C013  F01F         	movff	?___lmul,___altoft@c
  1050  000952  C014  F020         	movff	?___lmul+1,___altoft@c+1
  1051  000956  C015  F021         	movff	?___lmul+2,___altoft@c+2
  1052  00095A  C016  F022         	movff	?___lmul+3,___altoft@c+3
  1053  00095E  EC01  F008         	call	___altoft	;wreg free
  1054  000962  C01F  F029         	movff	?___altoft,___ftdiv@f1
  1055  000966  C020  F02A         	movff	?___altoft+1,___ftdiv@f1+1
  1056  00096A  C021  F02B         	movff	?___altoft+2,___ftdiv@f1+2
  1057  00096E  EC5B  F006         	call	___ftdiv	;wreg free
  1058  000972  C029  F0A8         	movff	?___ftdiv,___ftadd@f1
  1059  000976  C02A  F0A9         	movff	?___ftdiv+1,___ftadd@f1+1
  1060  00097A  C02B  F0AA         	movff	?___ftdiv+2,___ftadd@f1+2
  1061  00097E  0E00               	movlw	0
  1062  000980  0100               	movlb	0	; () banked
  1063  000982  6FAB               	movwf	___ftadd@f2& (0+255),b
  1064  000984  0E48               	movlw	72
  1065  000986  6FAC               	movwf	(___ftadd@f2+1)& (0+255),b
  1066  000988  0EC2               	movlw	194
  1067  00098A  6FAD               	movwf	(___ftadd@f2+2)& (0+255),b
  1068  00098C  EC39  F003         	call	___ftadd	;wreg free
  1069  000990  0100               	movlb	0	; () banked
  1070  000992  EE20 F003          	lfsr	2,3
  1071  000996  51B1               	movf	read_aht20@ptr& (0+255),w,b
  1072  000998  26D9               	addwf	fsr2l,f,c
  1073  00099A  51B2               	movf	(read_aht20@ptr+1)& (0+255),w,b
  1074  00099C  22DA               	addwfc	fsr2h,f,c
  1075  00099E  C0A8  FFDE         	movff	?___ftadd,postinc2
  1076  0009A2  C0A9  FFDE         	movff	?___ftadd+1,postinc2
  1077  0009A6  C0AA  FFDE         	movff	?___ftadd+2,postinc2
  1078                           
  1079                           ; BSR set to: 0
  1080  0009AA  0012               	return		;funcret
  1081  0009AC                     __end_of_read_aht20:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           intcon	equ	0xFF2
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           postinc2	equ	0xFDE
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function ___lmul *****************
  1094 ;; Defined at:
  1095 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  multiplier      4   18[COMRAM] unsigned long 
  1098 ;;  multiplicand    4   22[COMRAM] unsigned long 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  product         4   26[COMRAM] unsigned long 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  4   18[COMRAM] unsigned long 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1110 ;;      Params:         8       0       0       0       0       0       0
  1111 ;;      Locals:         4       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0
  1113 ;;      Totals:        12       0       0       0       0       0       0
  1114 ;;Total ram usage:       12 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_read_aht20
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  0010EA                     __ptext2:
  1126                           	opt stack 0
  1127  0010EA                     ___lmul:
  1128                           	opt stack 28
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;incstack = 0
  1132  0010EA  0E00               	movlw	0
  1133  0010EC  6E1B               	movwf	___lmul@product,c
  1134  0010EE  0E00               	movlw	0
  1135  0010F0  6E1C               	movwf	___lmul@product+1,c
  1136  0010F2  0E00               	movlw	0
  1137  0010F4  6E1D               	movwf	___lmul@product+2,c
  1138  0010F6  0E00               	movlw	0
  1139  0010F8  6E1E               	movwf	___lmul@product+3,c
  1140  0010FA  A013               	btfss	___lmul@multiplier,0,c
  1141  0010FC  D008               	goto	l212
  1142  0010FE  5017               	movf	___lmul@multiplicand,w,c
  1143  001100  261B               	addwf	___lmul@product,f,c
  1144  001102  5018               	movf	___lmul@multiplicand+1,w,c
  1145  001104  221C               	addwfc	___lmul@product+1,f,c
  1146  001106  5019               	movf	___lmul@multiplicand+2,w,c
  1147  001108  221D               	addwfc	___lmul@product+2,f,c
  1148  00110A  501A               	movf	___lmul@multiplicand+3,w,c
  1149  00110C  221E               	addwfc	___lmul@product+3,f,c
  1150  00110E                     l212:
  1151  00110E  90D8               	bcf	status,0,c
  1152  001110  3617               	rlcf	___lmul@multiplicand,f,c
  1153  001112  3618               	rlcf	___lmul@multiplicand+1,f,c
  1154  001114  3619               	rlcf	___lmul@multiplicand+2,f,c
  1155  001116  361A               	rlcf	___lmul@multiplicand+3,f,c
  1156  001118  90D8               	bcf	status,0,c
  1157  00111A  3216               	rrcf	___lmul@multiplier+3,f,c
  1158  00111C  3215               	rrcf	___lmul@multiplier+2,f,c
  1159  00111E  3214               	rrcf	___lmul@multiplier+1,f,c
  1160  001120  3213               	rrcf	___lmul@multiplier,f,c
  1161  001122  5013               	movf	___lmul@multiplier,w,c
  1162  001124  1014               	iorwf	___lmul@multiplier+1,w,c
  1163  001126  1015               	iorwf	___lmul@multiplier+2,w,c
  1164  001128  1016               	iorwf	___lmul@multiplier+3,w,c
  1165  00112A  A4D8               	btfss	status,2,c
  1166  00112C  D7E6               	goto	l211
  1167  00112E  C01B  F013         	movff	___lmul@product,?___lmul
  1168  001132  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  1169  001136  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  1170  00113A  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  1171  00113E  0012               	return		;funcret
  1172  001140                     __end_of___lmul:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           intcon	equ	0xFF2
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postinc2	equ	0xFDE
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function ___ftdiv *****************
  1185 ;; Defined at:
  1186 ;;		line 54 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  f1              3   40[COMRAM] float 
  1189 ;;  f2              3   43[COMRAM] float 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  f3              3   50[COMRAM] float 
  1192 ;;  sign            1   54[COMRAM] unsigned char 
  1193 ;;  exp             1   53[COMRAM] unsigned char 
  1194 ;;  cntr            1   49[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  3   40[COMRAM] float 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1204 ;;      Params:         6       0       0       0       0       0       0
  1205 ;;      Locals:         6       0       0       0       0       0       0
  1206 ;;      Temps:          3       0       0       0       0       0       0
  1207 ;;      Totals:        15       0       0       0       0       0       0
  1208 ;;Total ram usage:       15 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    2
  1211 ;; This function calls:
  1212 ;;		___ftpack
  1213 ;; This function is called by:
  1214 ;;		_read_aht20
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text3
  1219  000CB6                     __ptext3:
  1220                           	opt stack 0
  1221  000CB6                     ___ftdiv:
  1222                           	opt stack 27
  1223                           
  1224                           ;incstack = 0
  1225  000CB6  C02B  F02F         	movff	___ftdiv@f1+2,??___ftdiv
  1226  000CBA  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  1227  000CBC  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  1228  000CBE  342A               	rlcf	___ftdiv@f1+1,w,c
  1229  000CC0  362F               	rlcf	??___ftdiv& (0+255),f,c
  1230  000CC2  E301               	bnc	u2431
  1231  000CC4  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  1232  000CC6                     u2431:
  1233  000CC6  502F               	movf	??___ftdiv,w,c
  1234  000CC8  6E36               	movwf	___ftdiv@exp,c
  1235  000CCA  5036               	movf	___ftdiv@exp,w,c
  1236  000CCC  A4D8               	btfss	status,2,c
  1237  000CCE  D007               	goto	l478
  1238  000CD0  0E00               	movlw	0
  1239  000CD2  6E29               	movwf	?___ftdiv,c
  1240  000CD4  0E00               	movlw	0
  1241  000CD6  6E2A               	movwf	?___ftdiv+1,c
  1242  000CD8  0E00               	movlw	0
  1243  000CDA  6E2B               	movwf	?___ftdiv+2,c
  1244  000CDC  0012               	return	
  1245  000CDE                     l478:
  1246  000CDE  C02E  F02F         	movff	___ftdiv@f2+2,??___ftdiv
  1247  000CE2  6A30               	clrf	(??___ftdiv+1)& (0+255),c
  1248  000CE4  6A31               	clrf	(??___ftdiv+2)& (0+255),c
  1249  000CE6  342D               	rlcf	___ftdiv@f2+1,w,c
  1250  000CE8  362F               	rlcf	??___ftdiv& (0+255),f,c
  1251  000CEA  E301               	bnc	u2451
  1252  000CEC  8030               	bsf	(??___ftdiv+1)& (0+255),0,c
  1253  000CEE                     u2451:
  1254  000CEE  502F               	movf	??___ftdiv,w,c
  1255  000CF0  6E37               	movwf	___ftdiv@sign,c
  1256  000CF2  5037               	movf	___ftdiv@sign,w,c
  1257  000CF4  A4D8               	btfss	status,2,c
  1258  000CF6  D007               	goto	l480
  1259  000CF8  0E00               	movlw	0
  1260  000CFA  6E29               	movwf	?___ftdiv,c
  1261  000CFC  0E00               	movlw	0
  1262  000CFE  6E2A               	movwf	?___ftdiv+1,c
  1263  000D00  0E00               	movlw	0
  1264  000D02  6E2B               	movwf	?___ftdiv+2,c
  1265  000D04  0012               	return	
  1266  000D06                     l480:
  1267  000D06  0E00               	movlw	0
  1268  000D08  6E33               	movwf	___ftdiv@f3,c
  1269  000D0A  0E00               	movlw	0
  1270  000D0C  6E34               	movwf	___ftdiv@f3+1,c
  1271  000D0E  0E00               	movlw	0
  1272  000D10  6E35               	movwf	___ftdiv@f3+2,c
  1273  000D12  5037               	movf	___ftdiv@sign,w,c
  1274  000D14  0F89               	addlw	137
  1275  000D16  5E36               	subwf	___ftdiv@exp,f,c
  1276  000D18  C02B  F037         	movff	___ftdiv@f1+2,___ftdiv@sign
  1277  000D1C  502E               	movf	___ftdiv@f2+2,w,c
  1278  000D1E  1A37               	xorwf	___ftdiv@sign,f,c
  1279  000D20  0E80               	movlw	128
  1280  000D22  1637               	andwf	___ftdiv@sign,f,c
  1281  000D24  8E2A               	bsf	___ftdiv@f1+1,7,c
  1282  000D26  0EFF               	movlw	255
  1283  000D28  1629               	andwf	___ftdiv@f1,f,c
  1284  000D2A  0EFF               	movlw	255
  1285  000D2C  162A               	andwf	___ftdiv@f1+1,f,c
  1286  000D2E  0E00               	movlw	0
  1287  000D30  162B               	andwf	___ftdiv@f1+2,f,c
  1288  000D32  8E2D               	bsf	___ftdiv@f2+1,7,c
  1289  000D34  0EFF               	movlw	255
  1290  000D36  162C               	andwf	___ftdiv@f2,f,c
  1291  000D38  0EFF               	movlw	255
  1292  000D3A  162D               	andwf	___ftdiv@f2+1,f,c
  1293  000D3C  0E00               	movlw	0
  1294  000D3E  162E               	andwf	___ftdiv@f2+2,f,c
  1295  000D40  0E18               	movlw	24
  1296  000D42  6E32               	movwf	___ftdiv@cntr,c
  1297  000D44  90D8               	bcf	status,0,c
  1298  000D46  3633               	rlcf	___ftdiv@f3,f,c
  1299  000D48  3634               	rlcf	___ftdiv@f3+1,f,c
  1300  000D4A  3635               	rlcf	___ftdiv@f3+2,f,c
  1301  000D4C  502C               	movf	___ftdiv@f2,w,c
  1302  000D4E  5C29               	subwf	___ftdiv@f1,w,c
  1303  000D50  502D               	movf	___ftdiv@f2+1,w,c
  1304  000D52  582A               	subwfb	___ftdiv@f1+1,w,c
  1305  000D54  502E               	movf	___ftdiv@f2+2,w,c
  1306  000D56  582B               	subwfb	___ftdiv@f1+2,w,c
  1307  000D58  A0D8               	btfss	status,0,c
  1308  000D5A  D007               	goto	l482
  1309  000D5C  502C               	movf	___ftdiv@f2,w,c
  1310  000D5E  5E29               	subwf	___ftdiv@f1,f,c
  1311  000D60  502D               	movf	___ftdiv@f2+1,w,c
  1312  000D62  5A2A               	subwfb	___ftdiv@f1+1,f,c
  1313  000D64  502E               	movf	___ftdiv@f2+2,w,c
  1314  000D66  5A2B               	subwfb	___ftdiv@f1+2,f,c
  1315  000D68  8033               	bsf	___ftdiv@f3,0,c
  1316  000D6A                     l482:
  1317  000D6A  90D8               	bcf	status,0,c
  1318  000D6C  3629               	rlcf	___ftdiv@f1,f,c
  1319  000D6E  362A               	rlcf	___ftdiv@f1+1,f,c
  1320  000D70  362B               	rlcf	___ftdiv@f1+2,f,c
  1321  000D72  2E32               	decfsz	___ftdiv@cntr,f,c
  1322  000D74  D7E7               	goto	l481
  1323  000D76  C033  F013         	movff	___ftdiv@f3,___ftpack@arg
  1324  000D7A  C034  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1325  000D7E  C035  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1326  000D82  C036  F016         	movff	___ftdiv@exp,___ftpack@exp
  1327  000D86  C037  F017         	movff	___ftdiv@sign,___ftpack@sign
  1328  000D8A  ECCE  F006         	call	___ftpack	;wreg free
  1329  000D8E  C013  F029         	movff	?___ftpack,?___ftdiv
  1330  000D92  C014  F02A         	movff	?___ftpack+1,?___ftdiv+1
  1331  000D96  C015  F02B         	movff	?___ftpack+2,?___ftdiv+2
  1332  000D9A  0012               	return	
  1333  000D9C                     __end_of___ftdiv:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           intcon	equ	0xFF2
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           postinc2	equ	0xFDE
  1341                           fsr2h	equ	0xFDA
  1342                           fsr2l	equ	0xFD9
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function ___altoft *****************
  1346 ;; Defined at:
  1347 ;;		line 42 in file "/opt/microchip/xc8/v1.45/sources/common/altoft.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  c               4   30[COMRAM] long 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  sign            1   39[COMRAM] unsigned char 
  1352 ;;  exp             1   38[COMRAM] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  3   30[COMRAM] float 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         4       0       0       0       0       0       0
  1363 ;;      Locals:         2       0       0       0       0       0       0
  1364 ;;      Temps:          4       0       0       0       0       0       0
  1365 ;;      Totals:        10       0       0       0       0       0       0
  1366 ;;Total ram usage:       10 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    2
  1369 ;; This function calls:
  1370 ;;		___ftpack
  1371 ;; This function is called by:
  1372 ;;		_read_aht20
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text4
  1377  001002                     __ptext4:
  1378                           	opt stack 0
  1379  001002                     ___altoft:
  1380                           	opt stack 27
  1381                           
  1382                           ;incstack = 0
  1383  001002  0E00               	movlw	0
  1384  001004  6E28               	movwf	___altoft@sign,c
  1385  001006  0E8E               	movlw	142
  1386  001008  6E27               	movwf	___altoft@exp,c
  1387  00100A  AE22               	btfss	___altoft@c+3,7,c
  1388  00100C  D011               	goto	l284
  1389  00100E  1E22               	comf	___altoft@c+3,f,c
  1390  001010  1E21               	comf	___altoft@c+2,f,c
  1391  001012  1E20               	comf	___altoft@c+1,f,c
  1392  001014  6C1F               	negf	___altoft@c,c
  1393  001016  0E00               	movlw	0
  1394  001018  2220               	addwfc	___altoft@c+1,f,c
  1395  00101A  2221               	addwfc	___altoft@c+2,f,c
  1396  00101C  2222               	addwfc	___altoft@c+3,f,c
  1397  00101E  0E01               	movlw	1
  1398  001020  6E28               	movwf	___altoft@sign,c
  1399  001022  D006               	goto	l284
  1400  001024  90D8               	bcf	status,0,c
  1401  001026  3222               	rrcf	___altoft@c+3,f,c
  1402  001028  3221               	rrcf	___altoft@c+2,f,c
  1403  00102A  3220               	rrcf	___altoft@c+1,f,c
  1404  00102C  321F               	rrcf	___altoft@c,f,c
  1405  00102E  2A27               	incf	___altoft@exp,f,c
  1406  001030                     l284:
  1407  001030  0E00               	movlw	0
  1408  001032  141F               	andwf	___altoft@c,w,c
  1409  001034  6E23               	movwf	??___altoft& (0+255),c
  1410  001036  0E00               	movlw	0
  1411  001038  1420               	andwf	___altoft@c+1,w,c
  1412  00103A  6E24               	movwf	(??___altoft+1)& (0+255),c
  1413  00103C  0E00               	movlw	0
  1414  00103E  1421               	andwf	___altoft@c+2,w,c
  1415  001040  6E25               	movwf	(??___altoft+2)& (0+255),c
  1416  001042  0EFF               	movlw	255
  1417  001044  1422               	andwf	___altoft@c+3,w,c
  1418  001046  6E26               	movwf	(??___altoft+3)& (0+255),c
  1419  001048  5023               	movf	??___altoft,w,c
  1420  00104A  1024               	iorwf	??___altoft+1,w,c
  1421  00104C  1025               	iorwf	??___altoft+2,w,c
  1422  00104E  1026               	iorwf	??___altoft+3,w,c
  1423  001050  A4D8               	btfss	status,2,c
  1424  001052  D7E8               	goto	l285
  1425  001054  C01F  F013         	movff	___altoft@c,___ftpack@arg
  1426  001058  C020  F014         	movff	___altoft@c+1,___ftpack@arg+1
  1427  00105C  C021  F015         	movff	___altoft@c+2,___ftpack@arg+2
  1428  001060  C027  F016         	movff	___altoft@exp,___ftpack@exp
  1429  001064  C028  F017         	movff	___altoft@sign,___ftpack@sign
  1430  001068  ECCE  F006         	call	___ftpack	;wreg free
  1431  00106C  C013  F01F         	movff	?___ftpack,?___altoft
  1432  001070  C014  F020         	movff	?___ftpack+1,?___altoft+1
  1433  001074  C015  F021         	movff	?___ftpack+2,?___altoft+2
  1434  001078  0012               	return	
  1435  00107A                     __end_of___altoft:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           intcon	equ	0xFF2
  1440                           postinc0	equ	0xFEE
  1441                           wreg	equ	0xFE8
  1442                           postinc2	equ	0xFDE
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _print_text *****************
  1448 ;; Defined at:
  1449 ;;		line 239 in file "mane.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  s               2   19[COMRAM] PTR const unsigned char 
  1452 ;;		 -> STR_6(2), STR_5(10), STR_4(6), STR_3(11), 
  1453 ;;		 -> STR_2(16), STR_1(28), 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1465 ;;      Params:         2       0       0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0
  1468 ;;      Totals:         2       0       0       0       0       0       0
  1469 ;;Total ram usage:        2 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    2
  1472 ;; This function calls:
  1473 ;;		_send_uart
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text5
  1480  00137A                     __ptext5:
  1481                           	opt stack 0
  1482  00137A                     _print_text:
  1483                           	opt stack 28
  1484                           
  1485                           ;mane.c: 241: while(*s != 0)
  1486                           
  1487                           ;incstack = 0
  1488  00137A  D00A               	goto	l98
  1489  00137C                     
  1490                           ;mane.c: 242: {
  1491                           ;mane.c: 243: send_uart(*s);
  1492  00137C  C014  FFF6         	movff	print_text@s,tblptrl
  1493  001380  C015  FFF7         	movff	print_text@s+1,tblptrh
  1494  001384                     	if	0	;tblptru may be non-zero
  1495  001384                     	endif
  1496  001384                     	if	0	;tblptru may be non-zero
  1497  001384                     	endif
  1498  001384  0008               	tblrd		*
  1499  001386  50F5               	movf	tablat,w,c
  1500  001388  EC92  F009         	call	_send_uart
  1501                           
  1502                           ;mane.c: 244: s++;
  1503  00138C  4A14               	infsnz	print_text@s,f,c
  1504  00138E  2A15               	incf	print_text@s+1,f,c
  1505  001390                     l98:
  1506  001390  C014  FFF6         	movff	print_text@s,tblptrl
  1507  001394  C015  FFF7         	movff	print_text@s+1,tblptrh
  1508  001398                     	if	0	;tblptru may be non-zero
  1509  001398                     	endif
  1510  001398                     	if	0	;tblptru may be non-zero
  1511  001398                     	endif
  1512  001398  0008               	tblrd		*
  1513  00139A  50F5               	movf	tablat,w,c
  1514  00139C  0900               	iorlw	0
  1515  00139E  B4D8               	btfsc	status,2,c
  1516  0013A0  0012               	return	
  1517  0013A2  D7EC               	goto	l99
  1518  0013A4                     __end_of_print_text:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           intcon	equ	0xFF2
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postinc2	equ	0xFDE
  1528                           fsr2h	equ	0xFDA
  1529                           fsr2l	equ	0xFD9
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _print_number *****************
  1533 ;; Defined at:
  1534 ;;		line 224 in file "mane.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  number_arg      2   24[BANK0 ] unsigned int 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1548 ;;      Params:         0       2       0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0
  1551 ;;      Totals:         0       2       0       0       0       0       0
  1552 ;;Total ram usage:        2 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    3
  1555 ;; This function calls:
  1556 ;;		___lwmod
  1557 ;;		_print_digit
  1558 ;;		_send_uart
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text6
  1565  000EF6                     __ptext6:
  1566                           	opt stack 0
  1567  000EF6                     _print_number:
  1568                           	opt stack 27
  1569                           
  1570                           ;mane.c: 226: number = number_arg;
  1571                           
  1572                           ;incstack = 0
  1573  000EF6  C0C0  F046         	movff	print_number@number_arg,_number
  1574  000EFA  C0C1  F047         	movff	print_number@number_arg+1,_number+1
  1575                           
  1576                           ;mane.c: 227: force = 0;
  1577  000EFE  0E00               	movlw	0
  1578  000F00  6E45               	movwf	_force+1,c
  1579  000F02  0E00               	movlw	0
  1580  000F04  6E44               	movwf	_force,c
  1581                           
  1582                           ;mane.c: 228: print_digit(10000000);
  1583  000F06  0E96               	movlw	150
  1584  000F08  6E1B               	movwf	print_digit@place+1,c
  1585  000F0A  0E80               	movlw	128
  1586  000F0C  6E1A               	movwf	print_digit@place,c
  1587  000F0E  ECA0  F008         	call	_print_digit	;wreg free
  1588                           
  1589                           ;mane.c: 229: print_digit(1000000);
  1590  000F12  0E42               	movlw	66
  1591  000F14  6E1B               	movwf	print_digit@place+1,c
  1592  000F16  0E40               	movlw	64
  1593  000F18  6E1A               	movwf	print_digit@place,c
  1594  000F1A  ECA0  F008         	call	_print_digit	;wreg free
  1595                           
  1596                           ;mane.c: 230: print_digit(100000);
  1597  000F1E  0E86               	movlw	134
  1598  000F20  6E1B               	movwf	print_digit@place+1,c
  1599  000F22  0EA0               	movlw	160
  1600  000F24  6E1A               	movwf	print_digit@place,c
  1601  000F26  ECA0  F008         	call	_print_digit	;wreg free
  1602                           
  1603                           ;mane.c: 231: print_digit(10000);
  1604  000F2A  0E27               	movlw	39
  1605  000F2C  6E1B               	movwf	print_digit@place+1,c
  1606  000F2E  0E10               	movlw	16
  1607  000F30  6E1A               	movwf	print_digit@place,c
  1608  000F32  ECA0  F008         	call	_print_digit	;wreg free
  1609                           
  1610                           ;mane.c: 232: print_digit(1000);
  1611  000F36  0E03               	movlw	3
  1612  000F38  6E1B               	movwf	print_digit@place+1,c
  1613  000F3A  0EE8               	movlw	232
  1614  000F3C  6E1A               	movwf	print_digit@place,c
  1615  000F3E  ECA0  F008         	call	_print_digit	;wreg free
  1616                           
  1617                           ;mane.c: 233: print_digit(100);
  1618  000F42  0E00               	movlw	0
  1619  000F44  6E1B               	movwf	print_digit@place+1,c
  1620  000F46  0E64               	movlw	100
  1621  000F48  6E1A               	movwf	print_digit@place,c
  1622  000F4A  ECA0  F008         	call	_print_digit	;wreg free
  1623                           
  1624                           ;mane.c: 234: print_digit(10);
  1625  000F4E  0E00               	movlw	0
  1626  000F50  6E1B               	movwf	print_digit@place+1,c
  1627  000F52  0E0A               	movlw	10
  1628  000F54  6E1A               	movwf	print_digit@place,c
  1629  000F56  ECA0  F008         	call	_print_digit	;wreg free
  1630                           
  1631                           ;mane.c: 235: send_uart('0' + (number % 10));
  1632  000F5A  C046  F013         	movff	_number,___lwmod@dividend
  1633  000F5E  C047  F014         	movff	_number+1,___lwmod@dividend+1
  1634  000F62  0E00               	movlw	0
  1635  000F64  6E16               	movwf	___lwmod@divisor+1,c
  1636  000F66  0E0A               	movlw	10
  1637  000F68  6E15               	movwf	___lwmod@divisor,c
  1638  000F6A  EC1F  F009         	call	___lwmod	;wreg free
  1639  000F6E  5013               	movf	?___lwmod,w,c
  1640  000F70  0F30               	addlw	48
  1641  000F72  EC92  F009         	call	_send_uart
  1642                           
  1643                           ;mane.c: 236: send_uart(' ');
  1644  000F76  0E20               	movlw	32
  1645  000F78  EC92  F009         	call	_send_uart
  1646  000F7C  0012               	return		;funcret
  1647  000F7E                     __end_of_print_number:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postinc2	equ	0xFDE
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _print_digit *****************
  1662 ;; Defined at:
  1663 ;;		line 214 in file "mane.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  place           2   25[COMRAM] unsigned int 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         2       0       0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         2       0       0       0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    2
  1684 ;; This function calls:
  1685 ;;		___lwdiv
  1686 ;;		___lwmod
  1687 ;;		_send_uart
  1688 ;; This function is called by:
  1689 ;;		_print_number
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694  001140                     __ptext7:
  1695                           	opt stack 0
  1696  001140                     _print_digit:
  1697                           	opt stack 27
  1698                           
  1699                           ;mane.c: 216: if(number >= place || force)
  1700                           
  1701                           ;incstack = 0
  1702  001140  501A               	movf	print_digit@place,w,c
  1703  001142  5C46               	subwf	_number,w,c
  1704  001144  501B               	movf	print_digit@place+1,w,c
  1705  001146  5847               	subwfb	_number+1,w,c
  1706  001148  B0D8               	btfsc	status,0,c
  1707  00114A  D004               	goto	u1340
  1708  00114C  5044               	movf	_force,w,c
  1709  00114E  1045               	iorwf	_force+1,w,c
  1710  001150  B4D8               	btfsc	status,2,c
  1711  001152  0012               	return	
  1712  001154                     u1340:
  1713                           
  1714                           ;mane.c: 217: {
  1715                           ;mane.c: 218: force = 1;
  1716  001154  0E00               	movlw	0
  1717  001156  6E45               	movwf	_force+1,c
  1718  001158  0E01               	movlw	1
  1719  00115A  6E44               	movwf	_force,c
  1720                           
  1721                           ;mane.c: 219: send_uart('0' + number / place);
  1722  00115C  C046  F013         	movff	_number,___lwdiv@dividend
  1723  001160  C047  F014         	movff	_number+1,___lwdiv@dividend+1
  1724  001164  C01A  F015         	movff	print_digit@place,___lwdiv@divisor
  1725  001168  C01B  F016         	movff	print_digit@place+1,___lwdiv@divisor+1
  1726  00116C  ECF6  F008         	call	___lwdiv	;wreg free
  1727  001170  5013               	movf	?___lwdiv,w,c
  1728  001172  0F30               	addlw	48
  1729  001174  EC92  F009         	call	_send_uart
  1730                           
  1731                           ;mane.c: 220: number %= place;
  1732  001178  C046  F013         	movff	_number,___lwmod@dividend
  1733  00117C  C047  F014         	movff	_number+1,___lwmod@dividend+1
  1734  001180  C01A  F015         	movff	print_digit@place,___lwmod@divisor
  1735  001184  C01B  F016         	movff	print_digit@place+1,___lwmod@divisor+1
  1736  001188  EC1F  F009         	call	___lwmod	;wreg free
  1737  00118C  C013  F046         	movff	?___lwmod,_number
  1738  001190  C014  F047         	movff	?___lwmod+1,_number+1
  1739  001194  0012               	return	
  1740  001196                     __end_of_print_digit:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           intcon	equ	0xFF2
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postinc2	equ	0xFDE
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _send_uart *****************
  1755 ;; Defined at:
  1756 ;;		line 199 in file "mane.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  c               1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  c               1   18[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         1       0       0       0       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_print_digit
  1781 ;;		_print_number
  1782 ;;		_print_text
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text8
  1787  001324                     __ptext8:
  1788                           	opt stack 0
  1789  001324                     _send_uart:
  1790                           	opt stack 28
  1791                           
  1792                           ;incstack = 0
  1793                           ;send_uart@c stored from wreg
  1794  001324  6E13               	movwf	send_uart@c,c
  1795                           
  1796                           ;mane.c: 201: if(uart_size < 64)
  1797  001326  0E40               	movlw	64
  1798  001328  604A               	cpfslt	_uart_size,c
  1799  00132A  0012               	return	
  1800                           
  1801                           ;mane.c: 202: {
  1802                           ;mane.c: 203: uart_buffer[uart_position1++] = c;
  1803  00132C  5049               	movf	_uart_position1,w,c
  1804  00132E  0D01               	mullw	1
  1805  001330  0E60               	movlw	low _uart_buffer
  1806  001332  24F3               	addwf	prodl,w,c
  1807  001334  6ED9               	movwf	fsr2l,c
  1808  001336  0E00               	movlw	high _uart_buffer
  1809  001338  20F4               	addwfc	prodh,w,c
  1810  00133A  6EDA               	movwf	fsr2h,c
  1811  00133C  C013  FFDF         	movff	send_uart@c,indf2
  1812  001340  2A49               	incf	_uart_position1,f,c
  1813                           
  1814                           ;mane.c: 204: uart_size++;
  1815  001342  2A4A               	incf	_uart_size,f,c
  1816                           
  1817                           ;mane.c: 205: if(uart_position1 >= 64)
  1818  001344  0E3F               	movlw	63
  1819  001346  6449               	cpfsgt	_uart_position1,c
  1820  001348  0012               	return	
  1821                           
  1822                           ;mane.c: 206: {
  1823                           ;mane.c: 207: uart_position1 = 0;
  1824  00134A  0E00               	movlw	0
  1825  00134C  6E49               	movwf	_uart_position1,c
  1826  00134E  0012               	return	
  1827  001350                     __end_of_send_uart:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           indf2	equ	0xFDF
  1839                           postinc2	equ	0xFDE
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function ___lwmod *****************
  1845 ;; Defined at:
  1846 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  dividend        2   18[COMRAM] unsigned int 
  1849 ;;  divisor         2   20[COMRAM] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  counter         1   22[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2   18[COMRAM] unsigned int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1861 ;;      Params:         4       0       0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0
  1864 ;;      Totals:         5       0       0       0       0       0       0
  1865 ;;Total ram usage:        5 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_print_digit
  1872 ;;		_print_number
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text9
  1877  00123E                     __ptext9:
  1878                           	opt stack 0
  1879  00123E                     ___lwmod:
  1880                           	opt stack 27
  1881                           
  1882                           ;incstack = 0
  1883  00123E  5015               	movf	___lwmod@divisor,w,c
  1884  001240  1016               	iorwf	___lwmod@divisor+1,w,c
  1885  001242  B4D8               	btfsc	status,2,c
  1886  001244  D018               	goto	l618
  1887  001246  0E01               	movlw	1
  1888  001248  6E17               	movwf	___lwmod@counter,c
  1889  00124A  D004               	goto	l613
  1890  00124C  90D8               	bcf	status,0,c
  1891  00124E  3615               	rlcf	___lwmod@divisor,f,c
  1892  001250  3616               	rlcf	___lwmod@divisor+1,f,c
  1893  001252  2A17               	incf	___lwmod@counter,f,c
  1894  001254                     l613:
  1895  001254  AE16               	btfss	___lwmod@divisor+1,7,c
  1896  001256  D7FA               	goto	l614
  1897  001258                     u1280:
  1898  001258  5015               	movf	___lwmod@divisor,w,c
  1899  00125A  5C13               	subwf	___lwmod@dividend,w,c
  1900  00125C  5016               	movf	___lwmod@divisor+1,w,c
  1901  00125E  5814               	subwfb	___lwmod@dividend+1,w,c
  1902  001260  A0D8               	btfss	status,0,c
  1903  001262  D004               	goto	l617
  1904  001264  5015               	movf	___lwmod@divisor,w,c
  1905  001266  5E13               	subwf	___lwmod@dividend,f,c
  1906  001268  5016               	movf	___lwmod@divisor+1,w,c
  1907  00126A  5A14               	subwfb	___lwmod@dividend+1,f,c
  1908  00126C                     l617:
  1909  00126C  90D8               	bcf	status,0,c
  1910  00126E  3216               	rrcf	___lwmod@divisor+1,f,c
  1911  001270  3215               	rrcf	___lwmod@divisor,f,c
  1912  001272  2E17               	decfsz	___lwmod@counter,f,c
  1913  001274  D7F1               	goto	u1280
  1914  001276                     l618:
  1915  001276  C013  F013         	movff	___lwmod@dividend,?___lwmod
  1916  00127A  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  1917  00127E  0012               	return		;funcret
  1918  001280                     __end_of___lwmod:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           intcon	equ	0xFF2
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           indf2	equ	0xFDF
  1930                           postinc2	equ	0xFDE
  1931                           fsr2h	equ	0xFDA
  1932                           fsr2l	equ	0xFD9
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function ___lwdiv *****************
  1936 ;; Defined at:
  1937 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  dividend        2   18[COMRAM] unsigned int 
  1940 ;;  divisor         2   20[COMRAM] unsigned int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  quotient        2   22[COMRAM] unsigned int 
  1943 ;;  counter         1   24[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   18[COMRAM] unsigned int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1953 ;;      Params:         4       0       0       0       0       0       0
  1954 ;;      Locals:         3       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0
  1956 ;;      Totals:         7       0       0       0       0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_print_digit
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text10
  1968  0011EC                     __ptext10:
  1969                           	opt stack 0
  1970  0011EC                     ___lwdiv:
  1971                           	opt stack 27
  1972                           
  1973                           ;incstack = 0
  1974  0011EC  0E00               	movlw	0
  1975  0011EE  6E18               	movwf	___lwdiv@quotient+1,c
  1976  0011F0  0E00               	movlw	0
  1977  0011F2  6E17               	movwf	___lwdiv@quotient,c
  1978  0011F4  5015               	movf	___lwdiv@divisor,w,c
  1979  0011F6  1016               	iorwf	___lwdiv@divisor+1,w,c
  1980  0011F8  B4D8               	btfsc	status,2,c
  1981  0011FA  D01C               	goto	l608
  1982  0011FC  0E01               	movlw	1
  1983  0011FE  6E19               	movwf	___lwdiv@counter,c
  1984  001200  D004               	goto	l603
  1985  001202  90D8               	bcf	status,0,c
  1986  001204  3615               	rlcf	___lwdiv@divisor,f,c
  1987  001206  3616               	rlcf	___lwdiv@divisor+1,f,c
  1988  001208  2A19               	incf	___lwdiv@counter,f,c
  1989  00120A                     l603:
  1990  00120A  AE16               	btfss	___lwdiv@divisor+1,7,c
  1991  00120C  D7FA               	goto	l604
  1992  00120E                     u1250:
  1993  00120E  90D8               	bcf	status,0,c
  1994  001210  3617               	rlcf	___lwdiv@quotient,f,c
  1995  001212  3618               	rlcf	___lwdiv@quotient+1,f,c
  1996  001214  5015               	movf	___lwdiv@divisor,w,c
  1997  001216  5C13               	subwf	___lwdiv@dividend,w,c
  1998  001218  5016               	movf	___lwdiv@divisor+1,w,c
  1999  00121A  5814               	subwfb	___lwdiv@dividend+1,w,c
  2000  00121C  A0D8               	btfss	status,0,c
  2001  00121E  D005               	goto	l607
  2002  001220  5015               	movf	___lwdiv@divisor,w,c
  2003  001222  5E13               	subwf	___lwdiv@dividend,f,c
  2004  001224  5016               	movf	___lwdiv@divisor+1,w,c
  2005  001226  5A14               	subwfb	___lwdiv@dividend+1,f,c
  2006  001228  8017               	bsf	___lwdiv@quotient,0,c
  2007  00122A                     l607:
  2008  00122A  90D8               	bcf	status,0,c
  2009  00122C  3216               	rrcf	___lwdiv@divisor+1,f,c
  2010  00122E  3215               	rrcf	___lwdiv@divisor,f,c
  2011  001230  2E19               	decfsz	___lwdiv@counter,f,c
  2012  001232  D7ED               	goto	u1250
  2013  001234                     l608:
  2014  001234  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  2015  001238  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2016  00123C  0012               	return		;funcret
  2017  00123E                     __end_of___lwdiv:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           indf2	equ	0xFDF
  2029                           postinc2	equ	0xFDE
  2030                           fsr2h	equ	0xFDA
  2031                           fsr2l	equ	0xFD9
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function _init_aht20 *****************
  2035 ;; Defined at:
  2036 ;;		line 499 in file "mane.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  ptr             2   32[COMRAM] PTR struct .
  2039 ;;		 -> sensor(6), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         2       0       0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0       0       0
  2054 ;;      Totals:         3       0       0       0       0       0       0
  2055 ;;Total ram usage:        3 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    5
  2058 ;; This function calls:
  2059 ;;		_aht20_status
  2060 ;;		_i2c_write_device2
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text11
  2067  0013A4                     __ptext11:
  2068                           	opt stack 0
  2069  0013A4                     _init_aht20:
  2070                           	opt stack 25
  2071                           
  2072                           ;mane.c: 501: i2c_buffer[0] = 0xBA;
  2073                           
  2074                           ;incstack = 0
  2075  0013A4  0EBA               	movlw	186
  2076  0013A6  6E3C               	movwf	_i2c_buffer,c
  2077                           
  2078                           ;mane.c: 502: i2c_write_device2(1);
  2079  0013A8  0E01               	movlw	1
  2080  0013AA  EC5E  F009         	call	_i2c_write_device2
  2081                           
  2082                           ;mane.c: 504: i2c_buffer[0] = 0xE1;
  2083  0013AE  0EE1               	movlw	225
  2084  0013B0  6E3C               	movwf	_i2c_buffer,c
  2085                           
  2086                           ;mane.c: 505: i2c_buffer[1] = 0x08;
  2087  0013B2  0E08               	movlw	8
  2088  0013B4  6E3D               	movwf	_i2c_buffer+1,c
  2089                           
  2090                           ;mane.c: 506: i2c_buffer[2] = 0x00;
  2091  0013B6  0E00               	movlw	0
  2092  0013B8  6E3E               	movwf	_i2c_buffer+2,c
  2093                           
  2094                           ;mane.c: 507: i2c_write_device2(3);
  2095  0013BA  0E03               	movlw	3
  2096  0013BC  EC5E  F009         	call	_i2c_write_device2
  2097  0013C0                     
  2098                           ;mane.c: 510: {
  2099                           ;mane.c: 511: ;
  2100  0013C0  EC32  F00A         	call	_aht20_status	;wreg free
  2101  0013C4  6E23               	movwf	??_init_aht20& (0+255),c
  2102  0013C6  AE23               	btfss	??_init_aht20,7,c
  2103  0013C8  0012               	return	
  2104  0013CA  D7FA               	goto	l179
  2105  0013CC                     __end_of_init_aht20:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           intcon	equ	0xFF2
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           indf2	equ	0xFDF
  2117                           postinc2	equ	0xFDE
  2118                           fsr2h	equ	0xFDA
  2119                           fsr2l	equ	0xFD9
  2120                           status	equ	0xFD8
  2121                           
  2122 ;; *************** function _i2c_write_device2 *****************
  2123 ;; Defined at:
  2124 ;;		line 443 in file "mane.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  len             1    wreg     unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  len             1   22[COMRAM] unsigned char 
  2129 ;;  i               1   23[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2139 ;;      Params:         0       0       0       0       0       0       0
  2140 ;;      Locals:         2       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    3
  2146 ;; This function calls:
  2147 ;;		_i2c_start
  2148 ;;		_i2c_stop
  2149 ;;		_i2c_write
  2150 ;; This function is called by:
  2151 ;;		_read_aht20
  2152 ;;		_init_aht20
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text12
  2157  0012BC                     __ptext12:
  2158                           	opt stack 0
  2159  0012BC                     _i2c_write_device2:
  2160                           	opt stack 26
  2161                           
  2162                           ;incstack = 0
  2163                           ;i2c_write_device2@len stored from wreg
  2164  0012BC  6E17               	movwf	i2c_write_device2@len,c
  2165                           
  2166                           ;mane.c: 446: i2c_start();
  2167  0012BE  EC08  F00A         	call	_i2c_start	;wreg free
  2168                           
  2169                           ;mane.c: 449: i2c_write(((uint8_t)(((0x38 << 1)) & (~((uint32_t)0x00000001)))));
  2170  0012C2  0E70               	movlw	112
  2171  0012C4  ECCB  F008         	call	_i2c_write
  2172                           
  2173                           ;mane.c: 450: uint8_t i;
  2174                           ;mane.c: 451: for(i = 0; i < len; i++)
  2175  0012C8  0E00               	movlw	0
  2176  0012CA  6E18               	movwf	i2c_write_device2@i,c
  2177  0012CC  D00C               	goto	l163
  2178  0012CE                     
  2179                           ;mane.c: 452: {
  2180                           ;mane.c: 453: i2c_write(i2c_buffer[i]);
  2181  0012CE  5018               	movf	i2c_write_device2@i,w,c
  2182  0012D0  0D01               	mullw	1
  2183  0012D2  0E3C               	movlw	low _i2c_buffer
  2184  0012D4  24F3               	addwf	prodl,w,c
  2185  0012D6  6ED9               	movwf	fsr2l,c
  2186  0012D8  0E00               	movlw	high _i2c_buffer
  2187  0012DA  20F4               	addwfc	prodh,w,c
  2188  0012DC  6EDA               	movwf	fsr2h,c
  2189  0012DE  50DF               	movf	indf2,w,c
  2190  0012E0  ECCB  F008         	call	_i2c_write
  2191  0012E4  2A18               	incf	i2c_write_device2@i,f,c
  2192  0012E6                     l163:
  2193  0012E6  5017               	movf	i2c_write_device2@len,w,c
  2194  0012E8  5C18               	subwf	i2c_write_device2@i,w,c
  2195  0012EA  A0D8               	btfss	status,0,c
  2196  0012EC  D7F0               	goto	l164
  2197                           
  2198                           ;mane.c: 454: }
  2199                           ;mane.c: 456: i2c_stop();
  2200  0012EE  EC15  F00A         	call	_i2c_stop	;wreg free
  2201  0012F2  0012               	return		;funcret
  2202  0012F4                     __end_of_i2c_write_device2:
  2203                           	opt stack 0
  2204                           tblptru	equ	0xFF8
  2205                           tblptrh	equ	0xFF7
  2206                           tblptrl	equ	0xFF6
  2207                           tablat	equ	0xFF5
  2208                           prodh	equ	0xFF4
  2209                           prodl	equ	0xFF3
  2210                           intcon	equ	0xFF2
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           indf2	equ	0xFDF
  2214                           postinc2	equ	0xFDE
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _aht20_status *****************
  2220 ;; Defined at:
  2221 ;;		line 459 in file "mane.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2235 ;;      Params:         0       0       0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    4
  2242 ;; This function calls:
  2243 ;;		_i2c_read_device2
  2244 ;; This function is called by:
  2245 ;;		_read_aht20
  2246 ;;		_init_aht20
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text13
  2251  001464                     __ptext13:
  2252                           	opt stack 0
  2253  001464                     _aht20_status:
  2254                           	opt stack 25
  2255                           
  2256                           ;mane.c: 461: i2c_read_device2(1);
  2257                           
  2258                           ;incstack = 0
  2259  001464  0E01               	movlw	1
  2260  001466  EC40  F009         	call	_i2c_read_device2
  2261                           
  2262                           ;mane.c: 466: return i2c_buffer[0];
  2263  00146A  503C               	movf	_i2c_buffer,w,c
  2264  00146C  0012               	return	
  2265  00146E                     __end_of_aht20_status:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           indf2	equ	0xFDF
  2277                           postinc2	equ	0xFDE
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _i2c_read_device2 *****************
  2283 ;; Defined at:
  2284 ;;		line 413 in file "mane.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  bytes           1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  bytes           1   30[COMRAM] unsigned char 
  2289 ;;  i               1   31[COMRAM] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2299 ;;      Params:         0       0       0       0       0       0       0
  2300 ;;      Locals:         2       0       0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0
  2302 ;;      Totals:         2       0       0       0       0       0       0
  2303 ;;Total ram usage:        2 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    3
  2306 ;; This function calls:
  2307 ;;		_i2c_read
  2308 ;;		_i2c_start
  2309 ;;		_i2c_stop
  2310 ;;		_i2c_write
  2311 ;; This function is called by:
  2312 ;;		_aht20_status
  2313 ;;		_read_aht20
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text14
  2318  001280                     __ptext14:
  2319                           	opt stack 0
  2320  001280                     _i2c_read_device2:
  2321                           	opt stack 26
  2322                           
  2323                           ;incstack = 0
  2324                           ;i2c_read_device2@bytes stored from wreg
  2325  001280  6E1F               	movwf	i2c_read_device2@bytes,c
  2326                           
  2327                           ;mane.c: 415: uint8_t i;
  2328                           ;mane.c: 416: for(i = 0; i < bytes; i++)
  2329  001282  0E00               	movlw	0
  2330  001284  6E20               	movwf	i2c_read_device2@i,c
  2331  001286  D00B               	goto	l154
  2332  001288                     
  2333                           ;mane.c: 417: {
  2334                           ;mane.c: 418: i2c_buffer[i] = 0xff;
  2335  001288  5020               	movf	i2c_read_device2@i,w,c
  2336  00128A  0D01               	mullw	1
  2337  00128C  0E3C               	movlw	low _i2c_buffer
  2338  00128E  24F3               	addwf	prodl,w,c
  2339  001290  6ED9               	movwf	fsr2l,c
  2340  001292  0E00               	movlw	high _i2c_buffer
  2341  001294  20F4               	addwfc	prodh,w,c
  2342  001296  6EDA               	movwf	fsr2h,c
  2343  001298  0EFF               	movlw	255
  2344  00129A  6EDF               	movwf	indf2,c
  2345  00129C  2A20               	incf	i2c_read_device2@i,f,c
  2346  00129E                     l154:
  2347  00129E  501F               	movf	i2c_read_device2@bytes,w,c
  2348  0012A0  5C20               	subwf	i2c_read_device2@i,w,c
  2349  0012A2  A0D8               	btfss	status,0,c
  2350  0012A4  D7F1               	goto	l155
  2351                           
  2352                           ;mane.c: 419: }
  2353                           ;mane.c: 421: i2c_start();
  2354  0012A6  EC08  F00A         	call	_i2c_start	;wreg free
  2355                           
  2356                           ;mane.c: 423: i2c_write(((uint8_t)(((0x38 << 1)) | ((uint32_t)0x00000001))));
  2357  0012AA  0E71               	movlw	113
  2358  0012AC  ECCB  F008         	call	_i2c_write
  2359                           
  2360                           ;mane.c: 424: i2c_read(bytes);
  2361  0012B0  501F               	movf	i2c_read_device2@bytes,w,c
  2362  0012B2  EC25  F007         	call	_i2c_read
  2363                           
  2364                           ;mane.c: 426: i2c_stop();
  2365  0012B6  EC15  F00A         	call	_i2c_stop	;wreg free
  2366  0012BA  0012               	return		;funcret
  2367  0012BC                     __end_of_i2c_read_device2:
  2368                           	opt stack 0
  2369                           tblptru	equ	0xFF8
  2370                           tblptrh	equ	0xFF7
  2371                           tblptrl	equ	0xFF6
  2372                           tablat	equ	0xFF5
  2373                           prodh	equ	0xFF4
  2374                           prodl	equ	0xFF3
  2375                           intcon	equ	0xFF2
  2376                           postinc0	equ	0xFEE
  2377                           wreg	equ	0xFE8
  2378                           indf2	equ	0xFDF
  2379                           postinc2	equ	0xFDE
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _i2c_write *****************
  2385 ;; Defined at:
  2386 ;;		line 308 in file "mane.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  value           1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  value           1   20[COMRAM] unsigned char 
  2391 ;;  i               1   21[COMRAM] unsigned char 
  2392 ;;  ack             1   19[COMRAM] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2402 ;;      Params:         0       0       0       0       0       0       0
  2403 ;;      Locals:         3       0       0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0
  2405 ;;      Totals:         3       0       0       0       0       0       0
  2406 ;;Total ram usage:        3 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    2
  2409 ;; This function calls:
  2410 ;;		_get_clock
  2411 ;;		_get_data
  2412 ;;		_set_clock
  2413 ;;		_set_data
  2414 ;; This function is called by:
  2415 ;;		_i2c_read_device2
  2416 ;;		_i2c_write_device2
  2417 ;;		_i2c_read_device
  2418 ;;		_i2c_write_device
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text15
  2423  001196                     __ptext15:
  2424                           	opt stack 0
  2425  001196                     _i2c_write:
  2426                           	opt stack 26
  2427                           
  2428                           ;incstack = 0
  2429                           ;i2c_write@value stored from wreg
  2430  001196  6E15               	movwf	i2c_write@value,c
  2431                           
  2432                           ;mane.c: 310: uint8_t i = 0;
  2433  001198  0E00               	movlw	0
  2434  00119A  6E16               	movwf	i2c_write@i,c
  2435                           
  2436                           ;mane.c: 311: for(i = 0; i < 8; i++)
  2437  00119C  0E00               	movlw	0
  2438  00119E  6E16               	movwf	i2c_write@i,c
  2439  0011A0                     l2193:
  2440  0011A0  0E07               	movlw	7
  2441  0011A2  6416               	cpfsgt	i2c_write@i,c
  2442  0011A4  D001               	goto	l119
  2443  0011A6  D013               	goto	u2010
  2444  0011A8                     l119:
  2445                           
  2446                           ;mane.c: 312: {
  2447                           ;mane.c: 313: if((value & 0x80))
  2448  0011A8  AE15               	btfss	i2c_write@value,7,c
  2449  0011AA  D004               	goto	l121
  2450                           
  2451                           ;mane.c: 314: {
  2452                           ;mane.c: 315: set_data(1);
  2453  0011AC  0E01               	movlw	1
  2454  0011AE  ECE6  F009         	call	_set_data
  2455                           
  2456                           ;mane.c: 316: }
  2457  0011B2  D003               	goto	l122
  2458  0011B4                     l121:
  2459                           
  2460                           ;mane.c: 317: else
  2461                           ;mane.c: 318: {
  2462                           ;mane.c: 319: set_data(0);
  2463  0011B4  0E00               	movlw	0
  2464  0011B6  ECE6  F009         	call	_set_data
  2465  0011BA                     l122:
  2466                           
  2467                           ;mane.c: 320: }
  2468                           ;mane.c: 321: set_clock(1);
  2469  0011BA  0E01               	movlw	1
  2470  0011BC  ECF7  F009         	call	_set_clock
  2471                           
  2472                           ;mane.c: 322: set_clock(0);
  2473  0011C0  0E00               	movlw	0
  2474  0011C2  ECF7  F009         	call	_set_clock
  2475                           
  2476                           ;mane.c: 323: value <<= 1;
  2477  0011C6  90D8               	bcf	status,0,c
  2478  0011C8  3615               	rlcf	i2c_write@value,f,c
  2479  0011CA  2A16               	incf	i2c_write@i,f,c
  2480  0011CC  D7E9               	goto	l2193
  2481  0011CE                     u2010:
  2482                           
  2483                           ;mane.c: 324: }
  2484                           ;mane.c: 327: set_clock(1);
  2485  0011CE  0E01               	movlw	1
  2486  0011D0  ECF7  F009         	call	_set_clock
  2487  0011D4                     
  2488                           ;mane.c: 330: {
  2489                           ;mane.c: 331: ;
  2490  0011D4  EC2C  F00A         	call	_get_clock	;wreg free
  2491  0011D8  0900               	iorlw	0
  2492  0011DA  B4D8               	btfsc	status,2,c
  2493  0011DC  D7FB               	goto	l124
  2494                           
  2495                           ;mane.c: 332: }
  2496                           ;mane.c: 333: uint8_t ack = get_data();
  2497  0011DE  EC26  F00A         	call	_get_data	;wreg free
  2498  0011E2  6E14               	movwf	i2c_write@ack,c
  2499                           
  2500                           ;mane.c: 334: set_clock(0);
  2501  0011E4  0E00               	movlw	0
  2502  0011E6  ECF7  F009         	call	_set_clock
  2503  0011EA  0012               	return		;funcret
  2504  0011EC                     __end_of_i2c_write:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           intcon	equ	0xFF2
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           indf2	equ	0xFDF
  2516                           postinc2	equ	0xFDE
  2517                           fsr2h	equ	0xFDA
  2518                           fsr2l	equ	0xFD9
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _i2c_stop *****************
  2522 ;; Defined at:
  2523 ;;		line 385 in file "mane.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2537 ;;      Params:         0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		_set_clock
  2546 ;;		_set_data
  2547 ;; This function is called by:
  2548 ;;		_i2c_read_device2
  2549 ;;		_i2c_write_device2
  2550 ;;		_i2c_read_device
  2551 ;;		_i2c_write_device
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text16
  2556  00142A                     __ptext16:
  2557                           	opt stack 0
  2558  00142A                     _i2c_stop:
  2559                           	opt stack 26
  2560                           
  2561                           ;mane.c: 387: set_data(0);
  2562                           
  2563                           ;incstack = 0
  2564  00142A  0E00               	movlw	0
  2565  00142C  ECE6  F009         	call	_set_data
  2566                           
  2567                           ;mane.c: 388: set_clock(1);
  2568  001430  0E01               	movlw	1
  2569  001432  ECF7  F009         	call	_set_clock
  2570                           
  2571                           ;mane.c: 389: set_data(1);
  2572  001436  0E01               	movlw	1
  2573  001438  ECE6  F009         	call	_set_data
  2574  00143C  0012               	return		;funcret
  2575  00143E                     __end_of_i2c_stop:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           indf2	equ	0xFDF
  2587                           postinc2	equ	0xFDE
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _i2c_start *****************
  2593 ;; Defined at:
  2594 ;;		line 377 in file "mane.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2608 ;;      Params:         0       0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    2
  2615 ;; This function calls:
  2616 ;;		_set_clock
  2617 ;;		_set_data
  2618 ;; This function is called by:
  2619 ;;		_i2c_read_device2
  2620 ;;		_i2c_write_device2
  2621 ;;		_i2c_read_device
  2622 ;;		_i2c_write_device
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text17
  2627  001410                     __ptext17:
  2628                           	opt stack 0
  2629  001410                     _i2c_start:
  2630                           	opt stack 26
  2631                           
  2632                           ;mane.c: 379: set_clock(1);
  2633                           
  2634                           ;incstack = 0
  2635  001410  0E01               	movlw	1
  2636  001412  ECF7  F009         	call	_set_clock
  2637                           
  2638                           ;mane.c: 380: set_data(1);
  2639  001416  0E01               	movlw	1
  2640  001418  ECE6  F009         	call	_set_data
  2641                           
  2642                           ;mane.c: 381: set_data(0);
  2643  00141C  0E00               	movlw	0
  2644  00141E  ECE6  F009         	call	_set_data
  2645                           
  2646                           ;mane.c: 382: set_clock(0);
  2647  001422  0E00               	movlw	0
  2648  001424  ECF7  F009         	call	_set_clock
  2649  001428  0012               	return		;funcret
  2650  00142A                     __end_of_i2c_start:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           prodh	equ	0xFF4
  2657                           prodl	equ	0xFF3
  2658                           intcon	equ	0xFF2
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _i2c_read *****************
  2668 ;; Defined at:
  2669 ;;		line 337 in file "mane.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  bytes           1    wreg     unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  bytes           1   27[COMRAM] unsigned char 
  2674 ;;  value           1   26[COMRAM] unsigned char 
  2675 ;;  i               1   29[COMRAM] unsigned char 
  2676 ;;  j               1   28[COMRAM] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         0       0       0       0       0       0       0
  2687 ;;      Locals:         4       0       0       0       0       0       0
  2688 ;;      Temps:          7       0       0       0       0       0       0
  2689 ;;      Totals:        11       0       0       0       0       0       0
  2690 ;;Total ram usage:       11 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    2
  2693 ;; This function calls:
  2694 ;;		_get_clock
  2695 ;;		_get_data
  2696 ;;		_set_clock
  2697 ;;		_set_data
  2698 ;; This function is called by:
  2699 ;;		_i2c_read_device2
  2700 ;;		_i2c_read_device
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text18
  2705  000E4A                     __ptext18:
  2706                           	opt stack 0
  2707  000E4A                     _i2c_read:
  2708                           	opt stack 26
  2709                           
  2710                           ;incstack = 0
  2711                           ;i2c_read@bytes stored from wreg
  2712  000E4A  6E1C               	movwf	i2c_read@bytes,c
  2713                           
  2714                           ;mane.c: 339: uint8_t i, j;
  2715                           ;mane.c: 340: for(i = 0; i < bytes; i++)
  2716  000E4C  0E00               	movlw	0
  2717  000E4E  6E1E               	movwf	i2c_read@i,c
  2718  000E50  D04D               	goto	l129
  2719  000E52                     
  2720                           ;mane.c: 341: {
  2721                           ;mane.c: 342: uint8_t value = 0;
  2722  000E52  0E00               	movlw	0
  2723  000E54  6E1B               	movwf	i2c_read@value,c
  2724                           
  2725                           ;mane.c: 345: set_data(1);
  2726  000E56  0E01               	movlw	1
  2727  000E58  ECE6  F009         	call	_set_data
  2728                           
  2729                           ;mane.c: 347: for(j = 0; j < 8; j++)
  2730  000E5C  0E00               	movlw	0
  2731  000E5E  6E1D               	movwf	i2c_read@j,c
  2732  000E60                     l2223:
  2733  000E60  0E07               	movlw	7
  2734  000E62  641D               	cpfsgt	i2c_read@j,c
  2735  000E64  D001               	goto	l131
  2736  000E66  D012               	goto	u2050
  2737  000E68                     l131:
  2738                           
  2739                           ;mane.c: 348: {
  2740                           ;mane.c: 349: value <<= 1;
  2741  000E68  90D8               	bcf	status,0,c
  2742  000E6A  361B               	rlcf	i2c_read@value,f,c
  2743                           
  2744                           ;mane.c: 350: set_clock(1);
  2745  000E6C  0E01               	movlw	1
  2746  000E6E  ECF7  F009         	call	_set_clock
  2747  000E72                     
  2748                           ;mane.c: 352: {
  2749  000E72  EC2C  F00A         	call	_get_clock	;wreg free
  2750  000E76  0900               	iorlw	0
  2751  000E78  B4D8               	btfsc	status,2,c
  2752  000E7A  D7FB               	goto	l134
  2753                           
  2754                           ;mane.c: 353: }
  2755                           ;mane.c: 355: value |= get_data();
  2756  000E7C  EC26  F00A         	call	_get_data	;wreg free
  2757  000E80  121B               	iorwf	i2c_read@value,f,c
  2758                           
  2759                           ;mane.c: 356: set_clock(0);
  2760  000E82  0E00               	movlw	0
  2761  000E84  ECF7  F009         	call	_set_clock
  2762  000E88  2A1D               	incf	i2c_read@j,f,c
  2763  000E8A  D7EA               	goto	l2223
  2764  000E8C                     u2050:
  2765                           
  2766                           ;mane.c: 357: }
  2767                           ;mane.c: 359: i2c_buffer[i] = value;
  2768  000E8C  501E               	movf	i2c_read@i,w,c
  2769  000E8E  0D01               	mullw	1
  2770  000E90  0E3C               	movlw	low _i2c_buffer
  2771  000E92  24F3               	addwf	prodl,w,c
  2772  000E94  6ED9               	movwf	fsr2l,c
  2773  000E96  0E00               	movlw	high _i2c_buffer
  2774  000E98  20F4               	addwfc	prodh,w,c
  2775  000E9A  6EDA               	movwf	fsr2h,c
  2776  000E9C  C01B  FFDF         	movff	i2c_read@value,indf2
  2777                           
  2778                           ;mane.c: 362: if(i >= bytes - 1)
  2779  000EA0  0EFF               	movlw	255
  2780  000EA2  6E14               	movwf	??_i2c_read& (0+255),c
  2781  000EA4  0EFF               	movlw	255
  2782  000EA6  6E15               	movwf	(??_i2c_read+1)& (0+255),c
  2783  000EA8  501C               	movf	i2c_read@bytes,w,c
  2784  000EAA  6E16               	movwf	(??_i2c_read+2)& (0+255),c
  2785  000EAC  6A17               	clrf	(??_i2c_read+3)& (0+255),c
  2786  000EAE  5014               	movf	??_i2c_read,w,c
  2787  000EB0  2616               	addwf	??_i2c_read+2,f,c
  2788  000EB2  5015               	movf	??_i2c_read+1,w,c
  2789  000EB4  2217               	addwfc	??_i2c_read+3,f,c
  2790  000EB6  501E               	movf	i2c_read@i,w,c
  2791  000EB8  6E18               	movwf	(??_i2c_read+4)& (0+255),c
  2792  000EBA  6A19               	clrf	(??_i2c_read+5)& (0+255),c
  2793  000EBC  5016               	movf	??_i2c_read+2,w,c
  2794  000EBE  5C18               	subwf	??_i2c_read+4,w,c
  2795  000EC0  5019               	movf	??_i2c_read+5,w,c
  2796  000EC2  0A80               	xorlw	128
  2797  000EC4  6E1A               	movwf	(??_i2c_read+6)& (0+255),c
  2798  000EC6  5017               	movf	??_i2c_read+3,w,c
  2799  000EC8  0A80               	xorlw	128
  2800  000ECA  581A               	subwfb	(??_i2c_read+6)& (0+255),w,c
  2801  000ECC  A0D8               	btfss	status,0,c
  2802  000ECE  D004               	goto	l136
  2803                           
  2804                           ;mane.c: 363: {
  2805                           ;mane.c: 364: set_data(1);
  2806  000ED0  0E01               	movlw	1
  2807  000ED2  ECE6  F009         	call	_set_data
  2808                           
  2809                           ;mane.c: 365: }
  2810  000ED6  D003               	goto	l137
  2811  000ED8                     l136:
  2812                           
  2813                           ;mane.c: 366: else
  2814                           ;mane.c: 367: {
  2815                           ;mane.c: 368: set_data(0);
  2816  000ED8  0E00               	movlw	0
  2817  000EDA  ECE6  F009         	call	_set_data
  2818  000EDE                     l137:
  2819                           
  2820                           ;mane.c: 369: }
  2821                           ;mane.c: 372: set_clock(1);
  2822  000EDE  0E01               	movlw	1
  2823  000EE0  ECF7  F009         	call	_set_clock
  2824                           
  2825                           ;mane.c: 373: set_clock(0);
  2826  000EE4  0E00               	movlw	0
  2827  000EE6  ECF7  F009         	call	_set_clock
  2828  000EEA  2A1E               	incf	i2c_read@i,f,c
  2829  000EEC                     l129:
  2830  000EEC  501C               	movf	i2c_read@bytes,w,c
  2831  000EEE  5C1E               	subwf	i2c_read@i,w,c
  2832  000EF0  B0D8               	btfsc	status,0,c
  2833  000EF2  0012               	return	
  2834  000EF4  D7AE               	goto	l130
  2835  000EF6                     __end_of_i2c_read:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _set_data *****************
  2853 ;; Defined at:
  2854 ;;		line 286 in file "mane.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  value           1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  value           1   18[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2868 ;;      Params:         0       0       0       0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0
  2871 ;;      Totals:         1       0       0       0       0       0       0
  2872 ;;Total ram usage:        1 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_i2c_write
  2879 ;;		_i2c_read
  2880 ;;		_i2c_start
  2881 ;;		_i2c_stop
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text19
  2886  0013CC                     __ptext19:
  2887                           	opt stack 0
  2888  0013CC                     _set_data:
  2889                           	opt stack 26
  2890                           
  2891                           ;incstack = 0
  2892                           ;set_data@value stored from wreg
  2893  0013CC  6E13               	movwf	set_data@value,c
  2894                           
  2895                           ;mane.c: 288: TRISA4 = value;
  2896  0013CE  A013               	btfss	set_data@value,0,c
  2897  0013D0  D002               	goto	u1930
  2898  0013D2  8892               	bsf	3986,4,c	;volatile
  2899  0013D4  D001               	goto	u1945
  2900  0013D6                     u1930:
  2901  0013D6  9892               	bcf	3986,4,c	;volatile
  2902  0013D8                     u1945:
  2903  0013D8  F000               	nop		;# 
  2904  0013DA  F000               	nop		;# 
  2905  0013DC  F000               	nop		;# 
  2906  0013DE  F000               	nop		;# 
  2907  0013E0  F000               	nop		;# 
  2908  0013E2  F000               	nop		;# 
  2909  0013E4  F000               	nop		;# 
  2910  0013E6  F000               	nop		;# 
  2911  0013E8  F000               	nop		;# 
  2912  0013EA  F000               	nop		;# 
  2913  0013EC  0012               	return		;funcret
  2914  0013EE                     __end_of_set_data:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _set_clock *****************
  2932 ;; Defined at:
  2933 ;;		line 292 in file "mane.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  value           1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  value           1   18[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2947 ;;      Params:         0       0       0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0
  2950 ;;      Totals:         1       0       0       0       0       0       0
  2951 ;;Total ram usage:        1 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_i2c_write
  2958 ;;		_i2c_read
  2959 ;;		_i2c_start
  2960 ;;		_i2c_stop
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text20
  2965  0013EE                     __ptext20:
  2966                           	opt stack 0
  2967  0013EE                     _set_clock:
  2968                           	opt stack 26
  2969                           
  2970                           ;incstack = 0
  2971                           ;set_clock@value stored from wreg
  2972  0013EE  6E13               	movwf	set_clock@value,c
  2973                           
  2974                           ;mane.c: 294: TRISA5 = value;
  2975  0013F0  A013               	btfss	set_clock@value,0,c
  2976  0013F2  D002               	goto	u1950
  2977  0013F4  8A92               	bsf	3986,5,c	;volatile
  2978  0013F6  D001               	goto	u1965
  2979  0013F8                     u1950:
  2980  0013F8  9A92               	bcf	3986,5,c	;volatile
  2981  0013FA                     u1965:
  2982  0013FA  F000               	nop		;# 
  2983  0013FC  F000               	nop		;# 
  2984  0013FE  F000               	nop		;# 
  2985  001400  F000               	nop		;# 
  2986  001402  F000               	nop		;# 
  2987  001404  F000               	nop		;# 
  2988  001406  F000               	nop		;# 
  2989  001408  F000               	nop		;# 
  2990  00140A  F000               	nop		;# 
  2991  00140C  F000               	nop		;# 
  2992  00140E  0012               	return		;funcret
  2993  001410                     __end_of_set_clock:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           indf2	equ	0xFDF
  3005                           postinc2	equ	0xFDE
  3006                           fsr2h	equ	0xFDA
  3007                           fsr2l	equ	0xFD9
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function _get_data *****************
  3011 ;; Defined at:
  3012 ;;		line 298 in file "mane.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      unsigned char 
  3019 ;; Registers used:
  3020 ;;		wreg
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3026 ;;      Params:         0       0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_i2c_write
  3037 ;;		_i2c_read
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text21
  3042  00144C                     __ptext21:
  3043                           	opt stack 0
  3044  00144C                     _get_data:
  3045                           	opt stack 26
  3046                           
  3047                           ;mane.c: 300: return PORTAbits.RA4;
  3048                           
  3049                           ;incstack = 0
  3050  00144C  A880               	btfss	3968,4,c	;volatile
  3051  00144E  D002               	goto	u1970
  3052  001450  0E01               	movlw	1
  3053  001452  0012               	return	
  3054  001454                     u1970:
  3055  001454  0E00               	movlw	0
  3056  001456  0012               	return	
  3057  001458                     __end_of_get_data:
  3058                           	opt stack 0
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           postinc0	equ	0xFEE
  3067                           wreg	equ	0xFE8
  3068                           indf2	equ	0xFDF
  3069                           postinc2	equ	0xFDE
  3070                           fsr2h	equ	0xFDA
  3071                           fsr2l	equ	0xFD9
  3072                           status	equ	0xFD8
  3073                           
  3074 ;; *************** function _get_clock *****************
  3075 ;; Defined at:
  3076 ;;		line 303 in file "mane.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      unsigned char 
  3083 ;; Registers used:
  3084 ;;		wreg
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3090 ;;      Params:         0       0       0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0
  3093 ;;      Totals:         0       0       0       0       0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_i2c_write
  3101 ;;		_i2c_read
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text22
  3106  001458                     __ptext22:
  3107                           	opt stack 0
  3108  001458                     _get_clock:
  3109                           	opt stack 26
  3110                           
  3111                           ;mane.c: 305: return PORTAbits.RA5;
  3112                           
  3113                           ;incstack = 0
  3114  001458  AA80               	btfss	3968,5,c	;volatile
  3115  00145A  D002               	goto	u1980
  3116  00145C  0E01               	movlw	1
  3117  00145E  0012               	return	
  3118  001460                     u1980:
  3119  001460  0E00               	movlw	0
  3120  001462  0012               	return	
  3121  001464                     __end_of_get_clock:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           intcon	equ	0xFF2
  3130                           postinc0	equ	0xFEE
  3131                           wreg	equ	0xFE8
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _flush_uart *****************
  3139 ;; Defined at:
  3140 ;;		line 192 in file "mane.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		_handle_uart
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text23
  3169  00143E                     __ptext23:
  3170                           	opt stack 0
  3171  00143E                     _flush_uart:
  3172                           	opt stack 28
  3173                           
  3174                           ;mane.c: 194: while(uart_size > 0)
  3175                           
  3176                           ;incstack = 0
  3177  00143E  D002               	goto	l74
  3178  001440                     
  3179                           ;mane.c: 195: handle_uart();
  3180  001440  EC7A  F009         	call	_handle_uart	;wreg free
  3181  001444                     l74:
  3182  001444  504A               	movf	_uart_size,w,c
  3183  001446  B4D8               	btfsc	status,2,c
  3184  001448  0012               	return	
  3185  00144A  D7FA               	goto	l75
  3186  00144C                     __end_of_flush_uart:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           prodh	equ	0xFF4
  3193                           prodl	equ	0xFF3
  3194                           intcon	equ	0xFF2
  3195                           postinc0	equ	0xFEE
  3196                           wreg	equ	0xFE8
  3197                           indf2	equ	0xFDF
  3198                           postinc2	equ	0xFDE
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _handle_uart *****************
  3204 ;; Defined at:
  3205 ;;		line 177 in file "mane.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3219 ;;      Params:         0       0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_flush_uart
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text24
  3235  0012F4                     __ptext24:
  3236                           	opt stack 0
  3237  0012F4                     _handle_uart:
  3238                           	opt stack 29
  3239                           
  3240                           ;mane.c: 180: if(uart_size > 0 && TXIF)
  3241                           
  3242                           ;incstack = 0
  3243  0012F4  504A               	movf	_uart_size,w,c
  3244  0012F6  B4D8               	btfsc	status,2,c
  3245  0012F8  0012               	return	
  3246  0012FA  A89E               	btfss	3998,4,c	;volatile
  3247  0012FC  0012               	return	
  3248                           
  3249                           ;mane.c: 181: {
  3250                           ;mane.c: 182: TXIF = 0;
  3251  0012FE  989E               	bcf	3998,4,c	;volatile
  3252                           
  3253                           ;mane.c: 183: TXREG = uart_buffer[uart_position2++];
  3254  001300  5048               	movf	_uart_position2,w,c
  3255  001302  0D01               	mullw	1
  3256  001304  0E60               	movlw	low _uart_buffer
  3257  001306  24F3               	addwf	prodl,w,c
  3258  001308  6ED9               	movwf	fsr2l,c
  3259  00130A  0E00               	movlw	high _uart_buffer
  3260  00130C  20F4               	addwfc	prodh,w,c
  3261  00130E  6EDA               	movwf	fsr2h,c
  3262  001310  50DF               	movf	indf2,w,c
  3263  001312  6EAD               	movwf	4013,c	;volatile
  3264  001314  2A48               	incf	_uart_position2,f,c
  3265                           
  3266                           ;mane.c: 184: uart_size--;
  3267  001316  064A               	decf	_uart_size,f,c
  3268                           
  3269                           ;mane.c: 185: if(uart_position2 >= 64)
  3270  001318  0E3F               	movlw	63
  3271  00131A  6448               	cpfsgt	_uart_position2,c
  3272  00131C  0012               	return	
  3273                           
  3274                           ;mane.c: 186: {
  3275                           ;mane.c: 187: uart_position2 = 0;
  3276  00131E  0E00               	movlw	0
  3277  001320  6E48               	movwf	_uart_position2,c
  3278  001322  0012               	return	
  3279  001324                     __end_of_handle_uart:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           prodh	equ	0xFF4
  3286                           prodl	equ	0xFF3
  3287                           intcon	equ	0xFF2
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8
  3295                           
  3296 ;; *************** function _draw_value *****************
  3297 ;; Defined at:
  3298 ;;		line 248 in file "mane.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  value           1   58[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3312 ;;      Params:         0       0       0       0       0       0       0
  3313 ;;      Locals:         1       0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0
  3315 ;;      Totals:         1       0       0       0       0       0       0
  3316 ;;Total ram usage:        1 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    3
  3319 ;; This function calls:
  3320 ;;		___awdiv
  3321 ;;		___awmod
  3322 ;;		___ftadd
  3323 ;;		___fttol
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text25
  3330  000AB8                     __ptext25:
  3331                           	opt stack 0
  3332  000AB8                     _draw_value:
  3333                           	opt stack 27
  3334                           
  3335                           ;mane.c: 250: uint8_t value = (uint8_t)(sensor.h + 0.5);
  3336                           
  3337                           ;incstack = 0
  3338  000AB8  0E00               	movlw	0
  3339  000ABA  0100               	movlb	0	; () banked
  3340  000ABC  6FAB               	movwf	___ftadd@f2& (0+255),b
  3341  000ABE  0E00               	movlw	0
  3342  000AC0  6FAC               	movwf	(___ftadd@f2+1)& (0+255),b
  3343  000AC2  0E3F               	movlw	63
  3344  000AC4  6FAD               	movwf	(___ftadd@f2+2)& (0+255),b
  3345  000AC6  C0A2  F0A8         	movff	_sensor,___ftadd@f1
  3346  000ACA  C0A3  F0A9         	movff	_sensor+1,___ftadd@f1+1
  3347  000ACE  C0A4  F0AA         	movff	_sensor+2,___ftadd@f1+2
  3348  000AD2  EC39  F003         	call	___ftadd	;wreg free
  3349  000AD6  C0A8  F0B1         	movff	?___ftadd,___fttol@f1
  3350  000ADA  C0A9  F0B2         	movff	?___ftadd+1,___fttol@f1+1
  3351  000ADE  C0AA  F0B3         	movff	?___ftadd+2,___fttol@f1+2
  3352  000AE2  ECDF  F005         	call	___fttol	;wreg free
  3353  000AE6  0100               	movlb	0	; () banked
  3354  000AE8  51B1               	movf	?___fttol& (0+255),w,b
  3355  000AEA  6E3B               	movwf	draw_value@value,c
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;mane.c: 251: led_mask0 = 0;
  3359  000AEC  0E00               	movlw	0
  3360  000AEE  6FA1               	movwf	_led_mask0& (0+255),b
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;mane.c: 252: led_mask1 = 0;
  3364  000AF0  0E00               	movlw	0
  3365  000AF2  6FA0               	movwf	_led_mask1& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;mane.c: 257: led_mask0 |= led_masks1[value / 10][0]; led_mask1 |= led_masks1[value / 10
      +                          ][1];;
  3369  000AF4  C03B  F013         	movff	draw_value@value,___awdiv@dividend
  3370  000AF8  6A14               	clrf	___awdiv@dividend+1,c
  3371  000AFA  0E00               	movlw	0
  3372  000AFC  6E16               	movwf	___awdiv@divisor+1,c
  3373  000AFE  0E0A               	movlw	10
  3374  000B00  6E15               	movwf	___awdiv@divisor,c
  3375  000B02  ECBF  F007         	call	___awdiv	;wreg free
  3376  000B06  90D8               	bcf	status,0,c
  3377  000B08  3613               	rlcf	?___awdiv,f,c
  3378  000B0A  3614               	rlcf	?___awdiv+1,f,c
  3379  000B0C  0E15               	movlw	low _led_masks1
  3380  000B0E  2413               	addwf	?___awdiv,w,c
  3381  000B10  6EF6               	movwf	tblptrl,c
  3382  000B12  0E06               	movlw	high _led_masks1
  3383  000B14  2014               	addwfc	?___awdiv+1,w,c
  3384  000B16  6EF7               	movwf	tblptrh,c
  3385  000B18                     	if	0	;There are less than 3 active tblptr bytes
  3386  000B18                     	endif
  3387  000B18  0008               	tblrd		*
  3388  000B1A  50F5               	movf	tablat,w,c
  3389  000B1C  0100               	movlb	0	; () banked
  3390  000B1E  13A1               	iorwf	_led_mask0& (0+255),f,b
  3391                           
  3392                           ; BSR set to: 0
  3393  000B20  C03B  F013         	movff	draw_value@value,___awdiv@dividend
  3394  000B24  6A14               	clrf	___awdiv@dividend+1,c
  3395  000B26  0E00               	movlw	0
  3396  000B28  6E16               	movwf	___awdiv@divisor+1,c
  3397  000B2A  0E0A               	movlw	10
  3398  000B2C  6E15               	movwf	___awdiv@divisor,c
  3399  000B2E  ECBF  F007         	call	___awdiv	;wreg free
  3400  000B32  90D8               	bcf	status,0,c
  3401  000B34  3613               	rlcf	?___awdiv,f,c
  3402  000B36  3614               	rlcf	?___awdiv+1,f,c
  3403  000B38  0E01               	movlw	1
  3404  000B3A  2613               	addwf	?___awdiv,f,c
  3405  000B3C  0E00               	movlw	0
  3406  000B3E  2214               	addwfc	?___awdiv+1,f,c
  3407  000B40  0E15               	movlw	low _led_masks1
  3408  000B42  2413               	addwf	?___awdiv,w,c
  3409  000B44  6EF6               	movwf	tblptrl,c
  3410  000B46  0E06               	movlw	high _led_masks1
  3411  000B48  2014               	addwfc	?___awdiv+1,w,c
  3412  000B4A  6EF7               	movwf	tblptrh,c
  3413  000B4C                     	if	0	;There are less than 3 active tblptr bytes
  3414  000B4C                     	endif
  3415  000B4C  0008               	tblrd		*
  3416  000B4E  50F5               	movf	tablat,w,c
  3417  000B50  0100               	movlb	0	; () banked
  3418  000B52  13A0               	iorwf	_led_mask1& (0+255),f,b
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;mane.c: 258: led_mask0 |= led_masks2[value % 10][0]; led_mask1 |= led_masks2[value % 10
      +                          ][1];;
  3422  000B54  C03B  F013         	movff	draw_value@value,___awmod@dividend
  3423  000B58  6A14               	clrf	___awmod@dividend+1,c
  3424  000B5A  0E00               	movlw	0
  3425  000B5C  6E16               	movwf	___awmod@divisor+1,c
  3426  000B5E  0E0A               	movlw	10
  3427  000B60  6E15               	movwf	___awmod@divisor,c
  3428  000B62  EC3D  F008         	call	___awmod	;wreg free
  3429  000B66  90D8               	bcf	status,0,c
  3430  000B68  3613               	rlcf	?___awmod,f,c
  3431  000B6A  3614               	rlcf	?___awmod+1,f,c
  3432  000B6C  0E01               	movlw	low _led_masks2
  3433  000B6E  2413               	addwf	?___awmod,w,c
  3434  000B70  6EF6               	movwf	tblptrl,c
  3435  000B72  0E06               	movlw	high _led_masks2
  3436  000B74  2014               	addwfc	?___awmod+1,w,c
  3437  000B76  6EF7               	movwf	tblptrh,c
  3438  000B78                     	if	0	;There are less than 3 active tblptr bytes
  3439  000B78                     	endif
  3440  000B78  0008               	tblrd		*
  3441  000B7A  50F5               	movf	tablat,w,c
  3442  000B7C  0100               	movlb	0	; () banked
  3443  000B7E  13A1               	iorwf	_led_mask0& (0+255),f,b
  3444                           
  3445                           ; BSR set to: 0
  3446  000B80  C03B  F013         	movff	draw_value@value,___awmod@dividend
  3447  000B84  6A14               	clrf	___awmod@dividend+1,c
  3448  000B86  0E00               	movlw	0
  3449  000B88  6E16               	movwf	___awmod@divisor+1,c
  3450  000B8A  0E0A               	movlw	10
  3451  000B8C  6E15               	movwf	___awmod@divisor,c
  3452  000B8E  EC3D  F008         	call	___awmod	;wreg free
  3453  000B92  90D8               	bcf	status,0,c
  3454  000B94  3613               	rlcf	?___awmod,f,c
  3455  000B96  3614               	rlcf	?___awmod+1,f,c
  3456  000B98  0E01               	movlw	1
  3457  000B9A  2613               	addwf	?___awmod,f,c
  3458  000B9C  0E00               	movlw	0
  3459  000B9E  2214               	addwfc	?___awmod+1,f,c
  3460  000BA0  0E01               	movlw	low _led_masks2
  3461  000BA2  2413               	addwf	?___awmod,w,c
  3462  000BA4  6EF6               	movwf	tblptrl,c
  3463  000BA6  0E06               	movlw	high _led_masks2
  3464  000BA8  2014               	addwfc	?___awmod+1,w,c
  3465  000BAA  6EF7               	movwf	tblptrh,c
  3466  000BAC                     	if	0	;There are less than 3 active tblptr bytes
  3467  000BAC                     	endif
  3468  000BAC  0008               	tblrd		*
  3469  000BAE  50F5               	movf	tablat,w,c
  3470  000BB0  0100               	movlb	0	; () banked
  3471  000BB2  13A0               	iorwf	_led_mask1& (0+255),f,b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;mane.c: 268: LATC = led_mask0;
  3475  000BB4  C0A1  FF8B         	movff	_led_mask0,3979	;volatile
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;mane.c: 269: LATD = led_mask1;
  3479  000BB8  C0A0  FF8C         	movff	_led_mask1,3980	;volatile
  3480                           
  3481                           ; BSR set to: 0
  3482  000BBC  0012               	return		;funcret
  3483  000BBE                     __end_of_draw_value:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           indf2	equ	0xFDF
  3495                           postinc2	equ	0xFDE
  3496                           fsr2h	equ	0xFDA
  3497                           fsr2l	equ	0xFD9
  3498                           status	equ	0xFD8
  3499                           
  3500 ;; *************** function ___fttol *****************
  3501 ;; Defined at:
  3502 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  f1              3    9[BANK0 ] float 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  lval            4   19[BANK0 ] unsigned long 
  3507 ;;  exp1            1   23[BANK0 ] unsigned char 
  3508 ;;  sign1           1   18[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  4    9[BANK0 ] long 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3518 ;;      Params:         0       4       0       0       0       0       0
  3519 ;;      Locals:         0       6       0       0       0       0       0
  3520 ;;      Temps:          0       5       0       0       0       0       0
  3521 ;;      Totals:         0      15       0       0       0       0       0
  3522 ;;Total ram usage:       15 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_draw_value
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text26
  3534  000BBE                     __ptext26:
  3535                           	opt stack 0
  3536  000BBE                     ___fttol:
  3537                           	opt stack 28
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;incstack = 0
  3541  000BBE  C0B3  F0B5         	movff	___fttol@f1+2,??___fttol
  3542  000BC2  0100               	movlb	0	; () banked
  3543  000BC4  6BB6               	clrf	(??___fttol+1)& (0+255),b
  3544  000BC6  6BB7               	clrf	(??___fttol+2)& (0+255),b
  3545  000BC8  35B2               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3546  000BCA  37B5               	rlcf	??___fttol& (0+255),f,b
  3547  000BCC  E301               	bnc	u2601
  3548  000BCE  81B6               	bsf	(??___fttol+1)& (0+255),0,b
  3549  000BD0                     u2601:
  3550  000BD0  51B5               	movf	??___fttol& (0+255),w,b
  3551  000BD2  6FBF               	movwf	___fttol@exp1& (0+255),b
  3552  000BD4  51BF               	movf	___fttol@exp1& (0+255),w,b
  3553  000BD6  A4D8               	btfss	status,2,c
  3554  000BD8  D009               	goto	l514
  3555                           
  3556                           ; BSR set to: 0
  3557  000BDA  0E00               	movlw	0
  3558  000BDC  6FB1               	movwf	?___fttol& (0+255),b
  3559  000BDE  0E00               	movlw	0
  3560  000BE0  6FB2               	movwf	(?___fttol+1)& (0+255),b
  3561  000BE2  0E00               	movlw	0
  3562  000BE4  6FB3               	movwf	(?___fttol+2)& (0+255),b
  3563  000BE6  0E00               	movlw	0
  3564  000BE8  6FB4               	movwf	(?___fttol+3)& (0+255),b
  3565                           
  3566                           ; BSR set to: 0
  3567  000BEA  0012               	return	
  3568  000BEC                     l514:
  3569                           
  3570                           ; BSR set to: 0
  3571                           
  3572                           ; BSR set to: 0
  3573  000BEC  0E17               	movlw	23
  3574  000BEE  6FB5               	movwf	??___fttol& (0+255),b
  3575  000BF0  C0B1  F0B6         	movff	___fttol@f1,??___fttol+1
  3576  000BF4  C0B2  F0B7         	movff	___fttol@f1+1,??___fttol+2
  3577  000BF8  C0B3  F0B8         	movff	___fttol@f1+2,??___fttol+3
  3578  000BFC  29B5               	incf	??___fttol& (0+255),w,b
  3579  000BFE  6FB9               	movwf	(??___fttol+4)& (0+255),b
  3580  000C00  D004               	goto	u2620
  3581  000C02                     u2625:
  3582  000C02  90D8               	bcf	status,0,c
  3583  000C04  33B8               	rrcf	(??___fttol+3)& (0+255),f,b
  3584  000C06  33B7               	rrcf	(??___fttol+2)& (0+255),f,b
  3585  000C08  33B6               	rrcf	(??___fttol+1)& (0+255),f,b
  3586  000C0A                     u2620:
  3587  000C0A  2FB9               	decfsz	(??___fttol+4)& (0+255),f,b
  3588  000C0C  D7FA               	goto	u2625
  3589  000C0E  0100               	movlb	0	; () banked
  3590  000C10  51B6               	movf	(??___fttol+1)& (0+255),w,b
  3591  000C12  6FBA               	movwf	___fttol@sign1& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594  000C14  8FB2               	bsf	(___fttol@f1+1)& (0+255),7,b
  3595                           
  3596                           ; BSR set to: 0
  3597  000C16  0EFF               	movlw	255
  3598  000C18  17B1               	andwf	___fttol@f1& (0+255),f,b
  3599  000C1A  0EFF               	movlw	255
  3600  000C1C  17B2               	andwf	(___fttol@f1+1)& (0+255),f,b
  3601  000C1E  0E00               	movlw	0
  3602  000C20  17B3               	andwf	(___fttol@f1+2)& (0+255),f,b
  3603                           
  3604                           ; BSR set to: 0
  3605  000C22  51B1               	movf	___fttol@f1& (0+255),w,b
  3606  000C24  6FBB               	movwf	___fttol@lval& (0+255),b
  3607  000C26  51B2               	movf	(___fttol@f1+1)& (0+255),w,b
  3608  000C28  6FBC               	movwf	(___fttol@lval+1)& (0+255),b
  3609  000C2A  51B3               	movf	(___fttol@f1+2)& (0+255),w,b
  3610  000C2C  6FBD               	movwf	(___fttol@lval+2)& (0+255),b
  3611  000C2E  6BBE               	clrf	(___fttol@lval+3)& (0+255),b
  3612                           
  3613                           ; BSR set to: 0
  3614  000C30  0E8E               	movlw	142
  3615  000C32  5FBF               	subwf	___fttol@exp1& (0+255),f,b
  3616                           
  3617                           ; BSR set to: 0
  3618  000C34  AFBF               	btfss	___fttol@exp1& (0+255),7,b
  3619  000C36  D016               	goto	l516
  3620                           
  3621                           ; BSR set to: 0
  3622  000C38  51BF               	movf	___fttol@exp1& (0+255),w,b
  3623  000C3A  0A80               	xorlw	128
  3624  000C3C  0F8F               	addlw	143
  3625  000C3E  B0D8               	btfsc	status,0,c
  3626  000C40  D009               	goto	l517
  3627                           
  3628                           ; BSR set to: 0
  3629  000C42  0E00               	movlw	0
  3630  000C44  6FB1               	movwf	?___fttol& (0+255),b
  3631  000C46  0E00               	movlw	0
  3632  000C48  6FB2               	movwf	(?___fttol+1)& (0+255),b
  3633  000C4A  0E00               	movlw	0
  3634  000C4C  6FB3               	movwf	(?___fttol+2)& (0+255),b
  3635  000C4E  0E00               	movlw	0
  3636  000C50  6FB4               	movwf	(?___fttol+3)& (0+255),b
  3637                           
  3638                           ; BSR set to: 0
  3639  000C52  0012               	return	
  3640  000C54                     l517:
  3641                           
  3642                           ; BSR set to: 0
  3643                           
  3644                           ; BSR set to: 0
  3645                           
  3646                           ; BSR set to: 0
  3647  000C54  90D8               	bcf	status,0,c
  3648  000C56  33BE               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3649  000C58  33BD               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3650  000C5A  33BC               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3651  000C5C  33BB               	rrcf	___fttol@lval& (0+255),f,b
  3652                           
  3653                           ; BSR set to: 0
  3654  000C5E  3FBF               	incfsz	___fttol@exp1& (0+255),f,b
  3655  000C60  D7F9               	goto	l517
  3656                           
  3657                           ; BSR set to: 0
  3658  000C62  D015               	goto	u2660
  3659  000C64                     l516:
  3660                           
  3661                           ; BSR set to: 0
  3662                           
  3663                           ; BSR set to: 0
  3664  000C64  0E17               	movlw	23
  3665  000C66  65BF               	cpfsgt	___fttol@exp1& (0+255),b
  3666  000C68  D00F               	goto	l522
  3667                           
  3668                           ; BSR set to: 0
  3669  000C6A  0E00               	movlw	0
  3670  000C6C  6FB1               	movwf	?___fttol& (0+255),b
  3671  000C6E  0E00               	movlw	0
  3672  000C70  6FB2               	movwf	(?___fttol+1)& (0+255),b
  3673  000C72  0E00               	movlw	0
  3674  000C74  6FB3               	movwf	(?___fttol+2)& (0+255),b
  3675  000C76  0E00               	movlw	0
  3676  000C78  6FB4               	movwf	(?___fttol+3)& (0+255),b
  3677                           
  3678                           ; BSR set to: 0
  3679  000C7A  0012               	return	
  3680  000C7C                     
  3681                           ; BSR set to: 0
  3682                           
  3683                           ; BSR set to: 0
  3684  000C7C  90D8               	bcf	status,0,c
  3685  000C7E  37BB               	rlcf	___fttol@lval& (0+255),f,b
  3686  000C80  37BC               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3687  000C82  37BD               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3688  000C84  37BE               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3689  000C86  07BF               	decf	___fttol@exp1& (0+255),f,b
  3690  000C88                     l522:
  3691                           
  3692                           ; BSR set to: 0
  3693                           
  3694                           ; BSR set to: 0
  3695  000C88  51BF               	movf	___fttol@exp1& (0+255),w,b
  3696  000C8A  A4D8               	btfss	status,2,c
  3697  000C8C  D7F7               	goto	l523
  3698  000C8E                     u2660:
  3699                           
  3700                           ; BSR set to: 0
  3701                           
  3702                           ; BSR set to: 0
  3703                           
  3704                           ; BSR set to: 0
  3705  000C8E  51BA               	movf	___fttol@sign1& (0+255),w,b
  3706  000C90  B4D8               	btfsc	status,2,c
  3707  000C92  D008               	goto	l525
  3708                           
  3709                           ; BSR set to: 0
  3710  000C94  1FBE               	comf	(___fttol@lval+3)& (0+255),f,b
  3711  000C96  1FBD               	comf	(___fttol@lval+2)& (0+255),f,b
  3712  000C98  1FBC               	comf	(___fttol@lval+1)& (0+255),f,b
  3713  000C9A  6DBB               	negf	___fttol@lval& (0+255),b
  3714  000C9C  0E00               	movlw	0
  3715  000C9E  23BC               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3716  000CA0  23BD               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3717  000CA2  23BE               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3718  000CA4                     l525:
  3719                           
  3720                           ; BSR set to: 0
  3721                           
  3722                           ; BSR set to: 0
  3723  000CA4  C0BB  F0B1         	movff	___fttol@lval,?___fttol
  3724  000CA8  C0BC  F0B2         	movff	___fttol@lval+1,?___fttol+1
  3725  000CAC  C0BD  F0B3         	movff	___fttol@lval+2,?___fttol+2
  3726  000CB0  C0BE  F0B4         	movff	___fttol@lval+3,?___fttol+3
  3727  000CB4  0012               	return	
  3728  000CB6                     __end_of___fttol:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           indf2	equ	0xFDF
  3740                           postinc2	equ	0xFDE
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function ___ftadd *****************
  3746 ;; Defined at:
  3747 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  f1              3    0[BANK0 ] float 
  3750 ;;  f2              3    3[BANK0 ] float 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  exp1            1    8[BANK0 ] unsigned char 
  3753 ;;  exp2            1    7[BANK0 ] unsigned char 
  3754 ;;  sign            1    6[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  3    0[BANK0 ] float 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         0       6       0       0       0       0       0
  3765 ;;      Locals:         0       3       0       0       0       0       0
  3766 ;;      Temps:          3       0       0       0       0       0       0
  3767 ;;      Totals:         3       9       0       0       0       0       0
  3768 ;;Total ram usage:       12 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    2
  3771 ;; This function calls:
  3772 ;;		___ftpack
  3773 ;; This function is called by:
  3774 ;;		_draw_value
  3775 ;;		_read_aht20
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text27
  3781  000672                     __ptext27:
  3782                           	opt stack 0
  3783  000672                     ___ftadd:
  3784                           	opt stack 27
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;incstack = 0
  3788  000672  C0AA  F038         	movff	___ftadd@f1+2,??___ftadd
  3789  000676  6A39               	clrf	(??___ftadd+1)& (0+255),c
  3790  000678  6A3A               	clrf	(??___ftadd+2)& (0+255),c
  3791  00067A  0100               	movlb	0	; () banked
  3792  00067C  35A9               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3793  00067E  3638               	rlcf	??___ftadd& (0+255),f,c
  3794  000680  E301               	bnc	u2221
  3795  000682  8039               	bsf	(??___ftadd+1)& (0+255),0,c
  3796  000684                     u2221:
  3797  000684  5038               	movf	??___ftadd,w,c
  3798  000686  6FB0               	movwf	___ftadd@exp1& (0+255),b
  3799  000688  C0AD  F038         	movff	___ftadd@f2+2,??___ftadd
  3800  00068C  6A39               	clrf	(??___ftadd+1)& (0+255),c
  3801  00068E  6A3A               	clrf	(??___ftadd+2)& (0+255),c
  3802  000690  35AC               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3803  000692  3638               	rlcf	??___ftadd& (0+255),f,c
  3804  000694  E301               	bnc	u2231
  3805  000696  8039               	bsf	(??___ftadd+1)& (0+255),0,c
  3806  000698                     u2231:
  3807  000698  5038               	movf	??___ftadd,w,c
  3808  00069A  6FAF               	movwf	___ftadd@exp2& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811  00069C  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3812  00069E  B4D8               	btfsc	status,2,c
  3813  0006A0  D00B               	goto	u2260
  3814                           
  3815                           ; BSR set to: 0
  3816  0006A2  51AF               	movf	___ftadd@exp2& (0+255),w,b
  3817  0006A4  5DB0               	subwf	___ftadd@exp1& (0+255),w,b
  3818  0006A6  B0D8               	btfsc	status,0,c
  3819  0006A8  D00E               	goto	l445
  3820                           
  3821                           ; BSR set to: 0
  3822  0006AA  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3823  0006AC  0800               	sublw	0
  3824  0006AE  25AF               	addwf	___ftadd@exp2& (0+255),w,b
  3825  0006B0  6E38               	movwf	??___ftadd& (0+255),c
  3826  0006B2  0E18               	movlw	24
  3827  0006B4  6438               	cpfsgt	??___ftadd,c
  3828  0006B6  D007               	goto	l445
  3829  0006B8                     u2260:
  3830                           
  3831                           ; BSR set to: 0
  3832  0006B8  C0AB  F0A8         	movff	___ftadd@f2,?___ftadd
  3833  0006BC  C0AC  F0A9         	movff	___ftadd@f2+1,?___ftadd+1
  3834  0006C0  C0AD  F0AA         	movff	___ftadd@f2+2,?___ftadd+2
  3835  0006C4  0012               	return	
  3836  0006C6                     l445:
  3837                           
  3838                           ; BSR set to: 0
  3839                           
  3840                           ; BSR set to: 0
  3841  0006C6  51AF               	movf	___ftadd@exp2& (0+255),w,b
  3842  0006C8  B4D8               	btfsc	status,2,c
  3843  0006CA  D00B               	goto	u2290
  3844                           
  3845                           ; BSR set to: 0
  3846  0006CC  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3847  0006CE  5DAF               	subwf	___ftadd@exp2& (0+255),w,b
  3848  0006D0  B0D8               	btfsc	status,0,c
  3849  0006D2  D00E               	goto	l449
  3850                           
  3851                           ; BSR set to: 0
  3852  0006D4  51AF               	movf	___ftadd@exp2& (0+255),w,b
  3853  0006D6  0800               	sublw	0
  3854  0006D8  25B0               	addwf	___ftadd@exp1& (0+255),w,b
  3855  0006DA  6E38               	movwf	??___ftadd& (0+255),c
  3856  0006DC  0E18               	movlw	24
  3857  0006DE  6438               	cpfsgt	??___ftadd,c
  3858  0006E0  D007               	goto	l449
  3859  0006E2                     u2290:
  3860                           
  3861                           ; BSR set to: 0
  3862  0006E2  C0A8  F0A8         	movff	___ftadd@f1,?___ftadd
  3863  0006E6  C0A9  F0A9         	movff	___ftadd@f1+1,?___ftadd+1
  3864  0006EA  C0AA  F0AA         	movff	___ftadd@f1+2,?___ftadd+2
  3865  0006EE  0012               	return	
  3866  0006F0                     l449:
  3867                           
  3868                           ; BSR set to: 0
  3869                           
  3870                           ; BSR set to: 0
  3871  0006F0  0E06               	movlw	6
  3872  0006F2  6FAE               	movwf	___ftadd@sign& (0+255),b
  3873                           
  3874                           ; BSR set to: 0
  3875  0006F4  BFAA               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  3876                           
  3877                           ; BSR set to: 0
  3878  0006F6  8FAE               	bsf	___ftadd@sign& (0+255),7,b
  3879                           
  3880                           ; BSR set to: 0
  3881                           
  3882                           ; BSR set to: 0
  3883  0006F8  BFAD               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  3884                           
  3885                           ; BSR set to: 0
  3886  0006FA  8DAE               	bsf	___ftadd@sign& (0+255),6,b
  3887                           
  3888                           ; BSR set to: 0
  3889  0006FC  8FA9               	bsf	(___ftadd@f1+1)& (0+255),7,b
  3890                           
  3891                           ; BSR set to: 0
  3892  0006FE  0EFF               	movlw	255
  3893  000700  17A8               	andwf	___ftadd@f1& (0+255),f,b
  3894  000702  0EFF               	movlw	255
  3895  000704  17A9               	andwf	(___ftadd@f1+1)& (0+255),f,b
  3896  000706  0E00               	movlw	0
  3897  000708  17AA               	andwf	(___ftadd@f1+2)& (0+255),f,b
  3898  00070A  8FAC               	bsf	(___ftadd@f2+1)& (0+255),7,b
  3899                           
  3900                           ; BSR set to: 0
  3901  00070C  0EFF               	movlw	255
  3902  00070E  17AB               	andwf	___ftadd@f2& (0+255),f,b
  3903  000710  0EFF               	movlw	255
  3904  000712  17AC               	andwf	(___ftadd@f2+1)& (0+255),f,b
  3905  000714  0E00               	movlw	0
  3906  000716  17AD               	andwf	(___ftadd@f2+2)& (0+255),f,b
  3907                           
  3908                           ; BSR set to: 0
  3909  000718  51AF               	movf	___ftadd@exp2& (0+255),w,b
  3910  00071A  5DB0               	subwf	___ftadd@exp1& (0+255),w,b
  3911  00071C  B0D8               	btfsc	status,0,c
  3912  00071E  D01B               	goto	l454
  3913  000720                     u2320:
  3914                           
  3915                           ; BSR set to: 0
  3916                           
  3917                           ; BSR set to: 0
  3918  000720  90D8               	bcf	status,0,c
  3919  000722  37AB               	rlcf	___ftadd@f2& (0+255),f,b
  3920  000724  37AC               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  3921  000726  37AD               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  3922  000728  07AF               	decf	___ftadd@exp2& (0+255),f,b
  3923                           
  3924                           ; BSR set to: 0
  3925  00072A  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3926  00072C  19AF               	xorwf	___ftadd@exp2& (0+255),w,b
  3927  00072E  B4D8               	btfsc	status,2,c
  3928  000730  D00D               	goto	l459
  3929                           
  3930                           ; BSR set to: 0
  3931  000732  07AE               	decf	___ftadd@sign& (0+255),f,b
  3932  000734  C0AE  F038         	movff	___ftadd@sign,??___ftadd
  3933  000738  0E07               	movlw	7
  3934  00073A  1638               	andwf	??___ftadd,f,c
  3935  00073C  B4D8               	btfsc	status,2,c
  3936  00073E  D006               	goto	l459
  3937  000740  D7EF               	goto	u2320
  3938  000742                     
  3939                           ; BSR set to: 0
  3940                           
  3941                           ; BSR set to: 0
  3942  000742  90D8               	bcf	status,0,c
  3943  000744  33AA               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  3944  000746  33A9               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  3945  000748  33A8               	rrcf	___ftadd@f1& (0+255),f,b
  3946  00074A  2BB0               	incf	___ftadd@exp1& (0+255),f,b
  3947  00074C                     l459:
  3948                           
  3949                           ; BSR set to: 0
  3950                           
  3951                           ; BSR set to: 0
  3952  00074C  51AF               	movf	___ftadd@exp2& (0+255),w,b
  3953  00074E  19B0               	xorwf	___ftadd@exp1& (0+255),w,b
  3954  000750  B4D8               	btfsc	status,2,c
  3955  000752  D01F               	goto	u2390
  3956  000754  D7F6               	goto	l460
  3957  000756                     l454:
  3958                           
  3959                           ; BSR set to: 0
  3960                           
  3961                           ; BSR set to: 0
  3962  000756  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3963  000758  5DAF               	subwf	___ftadd@exp2& (0+255),w,b
  3964  00075A  B0D8               	btfsc	status,0,c
  3965  00075C  D01A               	goto	u2390
  3966  00075E                     u2360:
  3967                           
  3968                           ; BSR set to: 0
  3969                           
  3970                           ; BSR set to: 0
  3971  00075E  90D8               	bcf	status,0,c
  3972  000760  37A8               	rlcf	___ftadd@f1& (0+255),f,b
  3973  000762  37A9               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  3974  000764  37AA               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  3975  000766  07B0               	decf	___ftadd@exp1& (0+255),f,b
  3976                           
  3977                           ; BSR set to: 0
  3978  000768  51B0               	movf	___ftadd@exp1& (0+255),w,b
  3979  00076A  19AF               	xorwf	___ftadd@exp2& (0+255),w,b
  3980  00076C  B4D8               	btfsc	status,2,c
  3981  00076E  D00D               	goto	l468
  3982                           
  3983                           ; BSR set to: 0
  3984  000770  07AE               	decf	___ftadd@sign& (0+255),f,b
  3985  000772  C0AE  F038         	movff	___ftadd@sign,??___ftadd
  3986  000776  0E07               	movlw	7
  3987  000778  1638               	andwf	??___ftadd,f,c
  3988  00077A  B4D8               	btfsc	status,2,c
  3989  00077C  D006               	goto	l468
  3990  00077E  D7EF               	goto	u2360
  3991  000780                     
  3992                           ; BSR set to: 0
  3993                           
  3994                           ; BSR set to: 0
  3995  000780  90D8               	bcf	status,0,c
  3996  000782  33AD               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  3997  000784  33AC               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  3998  000786  33AB               	rrcf	___ftadd@f2& (0+255),f,b
  3999  000788  2BAF               	incf	___ftadd@exp2& (0+255),f,b
  4000  00078A                     l468:
  4001                           
  4002                           ; BSR set to: 0
  4003                           
  4004                           ; BSR set to: 0
  4005  00078A  51AF               	movf	___ftadd@exp2& (0+255),w,b
  4006  00078C  19B0               	xorwf	___ftadd@exp1& (0+255),w,b
  4007  00078E  A4D8               	btfss	status,2,c
  4008  000790  D7F7               	goto	l469
  4009  000792                     u2390:
  4010                           
  4011                           ; BSR set to: 0
  4012                           
  4013                           ; BSR set to: 0
  4014                           
  4015                           ; BSR set to: 0
  4016  000792  AFAE               	btfss	___ftadd@sign& (0+255),7,b
  4017  000794  D00C               	goto	l471
  4018                           
  4019                           ; BSR set to: 0
  4020  000796  0EFF               	movlw	255
  4021  000798  1BA8               	xorwf	___ftadd@f1& (0+255),f,b
  4022  00079A  0EFF               	movlw	255
  4023  00079C  1BA9               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4024  00079E  0EFF               	movlw	255
  4025  0007A0  1BAA               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4026  0007A2  0E01               	movlw	1
  4027  0007A4  27A8               	addwf	___ftadd@f1& (0+255),f,b
  4028  0007A6  0E00               	movlw	0
  4029  0007A8  23A9               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4030  0007AA  0E00               	movlw	0
  4031  0007AC  23AA               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4032  0007AE                     l471:
  4033                           
  4034                           ; BSR set to: 0
  4035  0007AE  ADAE               	btfss	___ftadd@sign& (0+255),6,b
  4036  0007B0  D00C               	goto	l472
  4037                           
  4038                           ; BSR set to: 0
  4039  0007B2  0EFF               	movlw	255
  4040  0007B4  1BAB               	xorwf	___ftadd@f2& (0+255),f,b
  4041  0007B6  0EFF               	movlw	255
  4042  0007B8  1BAC               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4043  0007BA  0EFF               	movlw	255
  4044  0007BC  1BAD               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4045  0007BE  0E01               	movlw	1
  4046  0007C0  27AB               	addwf	___ftadd@f2& (0+255),f,b
  4047  0007C2  0E00               	movlw	0
  4048  0007C4  23AC               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4049  0007C6  0E00               	movlw	0
  4050  0007C8  23AD               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4051  0007CA                     l472:
  4052                           
  4053                           ; BSR set to: 0
  4054                           
  4055                           ; BSR set to: 0
  4056  0007CA  0E00               	movlw	0
  4057  0007CC  6FAE               	movwf	___ftadd@sign& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060  0007CE  51A8               	movf	___ftadd@f1& (0+255),w,b
  4061  0007D0  27AB               	addwf	___ftadd@f2& (0+255),f,b
  4062  0007D2  51A9               	movf	(___ftadd@f1+1)& (0+255),w,b
  4063  0007D4  23AC               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4064  0007D6  51AA               	movf	(___ftadd@f1+2)& (0+255),w,b
  4065  0007D8  23AD               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4066                           
  4067                           ; BSR set to: 0
  4068  0007DA  AFAD               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4069  0007DC  D00E               	goto	l473
  4070                           
  4071                           ; BSR set to: 0
  4072  0007DE  0EFF               	movlw	255
  4073  0007E0  1BAB               	xorwf	___ftadd@f2& (0+255),f,b
  4074  0007E2  0EFF               	movlw	255
  4075  0007E4  1BAC               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4076  0007E6  0EFF               	movlw	255
  4077  0007E8  1BAD               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4078  0007EA  0E01               	movlw	1
  4079  0007EC  27AB               	addwf	___ftadd@f2& (0+255),f,b
  4080  0007EE  0E00               	movlw	0
  4081  0007F0  23AC               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4082  0007F2  0E00               	movlw	0
  4083  0007F4  23AD               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4084                           
  4085                           ; BSR set to: 0
  4086  0007F6  0E01               	movlw	1
  4087  0007F8  6FAE               	movwf	___ftadd@sign& (0+255),b
  4088  0007FA                     l473:
  4089                           
  4090                           ; BSR set to: 0
  4091                           
  4092                           ; BSR set to: 0
  4093  0007FA  C0AB  F013         	movff	___ftadd@f2,___ftpack@arg
  4094  0007FE  C0AC  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  4095  000802  C0AD  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  4096  000806  C0B0  F016         	movff	___ftadd@exp1,___ftpack@exp
  4097  00080A  C0AE  F017         	movff	___ftadd@sign,___ftpack@sign
  4098  00080E  ECCE  F006         	call	___ftpack	;wreg free
  4099  000812  C013  F0A8         	movff	?___ftpack,?___ftadd
  4100  000816  C014  F0A9         	movff	?___ftpack+1,?___ftadd+1
  4101  00081A  C015  F0AA         	movff	?___ftpack+2,?___ftadd+2
  4102  00081E  0012               	return	
  4103  000820                     __end_of___ftadd:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function ___ftpack *****************
  4121 ;; Defined at:
  4122 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  arg             3   18[COMRAM] unsigned um
  4125 ;;  exp             1   21[COMRAM] unsigned char 
  4126 ;;  sign            1   22[COMRAM] unsigned char 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  3   18[COMRAM] float 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         5       0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0
  4140 ;;      Temps:          3       0       0       0       0       0       0
  4141 ;;      Totals:         8       0       0       0       0       0       0
  4142 ;;Total ram usage:        8 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		___altoft
  4149 ;;		___ftadd
  4150 ;;		___ftdiv
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text28
  4155  000D9C                     __ptext28:
  4156                           	opt stack 0
  4157  000D9C                     ___ftpack:
  4158                           	opt stack 27
  4159                           
  4160                           ;incstack = 0
  4161  000D9C  5016               	movf	___ftpack@exp,w,c
  4162  000D9E  B4D8               	btfsc	status,2,c
  4163  000DA0  D005               	goto	u2100
  4164  000DA2  5013               	movf	___ftpack@arg,w,c
  4165  000DA4  1014               	iorwf	___ftpack@arg+1,w,c
  4166  000DA6  1015               	iorwf	___ftpack@arg+2,w,c
  4167  000DA8  A4D8               	btfss	status,2,c
  4168  000DAA  D00C               	goto	l414
  4169  000DAC                     u2100:
  4170  000DAC  0E00               	movlw	0
  4171  000DAE  6E13               	movwf	?___ftpack,c
  4172  000DB0  0E00               	movlw	0
  4173  000DB2  6E14               	movwf	?___ftpack+1,c
  4174  000DB4  0E00               	movlw	0
  4175  000DB6  6E15               	movwf	?___ftpack+2,c
  4176  000DB8  0012               	return	
  4177  000DBA  2A16               	incf	___ftpack@exp,f,c
  4178  000DBC  90D8               	bcf	status,0,c
  4179  000DBE  3215               	rrcf	___ftpack@arg+2,f,c
  4180  000DC0  3214               	rrcf	___ftpack@arg+1,f,c
  4181  000DC2  3213               	rrcf	___ftpack@arg,f,c
  4182  000DC4                     l414:
  4183  000DC4  0E00               	movlw	0
  4184  000DC6  1413               	andwf	___ftpack@arg,w,c
  4185  000DC8  6E18               	movwf	??___ftpack& (0+255),c
  4186  000DCA  0E00               	movlw	0
  4187  000DCC  1414               	andwf	___ftpack@arg+1,w,c
  4188  000DCE  6E19               	movwf	(??___ftpack+1)& (0+255),c
  4189  000DD0  0EFE               	movlw	254
  4190  000DD2  1415               	andwf	___ftpack@arg+2,w,c
  4191  000DD4  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  4192  000DD6  5018               	movf	??___ftpack,w,c
  4193  000DD8  1019               	iorwf	??___ftpack+1,w,c
  4194  000DDA  101A               	iorwf	??___ftpack+2,w,c
  4195  000DDC  B4D8               	btfsc	status,2,c
  4196  000DDE  D00C               	goto	l417
  4197  000DE0  D7EC               	goto	l415
  4198  000DE2  2A16               	incf	___ftpack@exp,f,c
  4199  000DE4  0E01               	movlw	1
  4200  000DE6  2613               	addwf	___ftpack@arg,f,c
  4201  000DE8  0E00               	movlw	0
  4202  000DEA  2214               	addwfc	___ftpack@arg+1,f,c
  4203  000DEC  0E00               	movlw	0
  4204  000DEE  2215               	addwfc	___ftpack@arg+2,f,c
  4205  000DF0  90D8               	bcf	status,0,c
  4206  000DF2  3215               	rrcf	___ftpack@arg+2,f,c
  4207  000DF4  3214               	rrcf	___ftpack@arg+1,f,c
  4208  000DF6  3213               	rrcf	___ftpack@arg,f,c
  4209  000DF8                     l417:
  4210  000DF8  0E00               	movlw	0
  4211  000DFA  1413               	andwf	___ftpack@arg,w,c
  4212  000DFC  6E18               	movwf	??___ftpack& (0+255),c
  4213  000DFE  0E00               	movlw	0
  4214  000E00  1414               	andwf	___ftpack@arg+1,w,c
  4215  000E02  6E19               	movwf	(??___ftpack+1)& (0+255),c
  4216  000E04  0EFF               	movlw	255
  4217  000E06  1415               	andwf	___ftpack@arg+2,w,c
  4218  000E08  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  4219  000E0A  5018               	movf	??___ftpack,w,c
  4220  000E0C  1019               	iorwf	??___ftpack+1,w,c
  4221  000E0E  101A               	iorwf	??___ftpack+2,w,c
  4222  000E10  B4D8               	btfsc	status,2,c
  4223  000E12  D006               	goto	l420
  4224  000E14  D7E6               	goto	l418
  4225  000E16  0616               	decf	___ftpack@exp,f,c
  4226  000E18  90D8               	bcf	status,0,c
  4227  000E1A  3613               	rlcf	___ftpack@arg,f,c
  4228  000E1C  3614               	rlcf	___ftpack@arg+1,f,c
  4229  000E1E  3615               	rlcf	___ftpack@arg+2,f,c
  4230  000E20                     l420:
  4231  000E20  BE14               	btfsc	___ftpack@arg+1,7,c
  4232  000E22  D003               	goto	u2140
  4233  000E24  0E02               	movlw	2
  4234  000E26  6016               	cpfslt	___ftpack@exp,c
  4235  000E28  D7F6               	goto	l421
  4236  000E2A                     u2140:
  4237  000E2A  A016               	btfss	___ftpack@exp,0,c
  4238  000E2C  9E14               	bcf	___ftpack@arg+1,7,c
  4239  000E2E  90D8               	bcf	status,0,c
  4240  000E30  3216               	rrcf	___ftpack@exp,f,c
  4241  000E32  5016               	movf	___ftpack@exp,w,c
  4242  000E34  1215               	iorwf	___ftpack@arg+2,f,c
  4243  000E36  5017               	movf	___ftpack@sign,w,c
  4244  000E38  A4D8               	btfss	status,2,c
  4245  000E3A  8E15               	bsf	___ftpack@arg+2,7,c
  4246  000E3C  C013  F013         	movff	___ftpack@arg,?___ftpack
  4247  000E40  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  4248  000E44  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  4249  000E48  0012               	return	
  4250  000E4A                     __end_of___ftpack:
  4251                           	opt stack 0
  4252                           tblptru	equ	0xFF8
  4253                           tblptrh	equ	0xFF7
  4254                           tblptrl	equ	0xFF6
  4255                           tablat	equ	0xFF5
  4256                           prodh	equ	0xFF4
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           postinc0	equ	0xFEE
  4260                           wreg	equ	0xFE8
  4261                           indf2	equ	0xFDF
  4262                           postinc2	equ	0xFDE
  4263                           fsr2h	equ	0xFDA
  4264                           fsr2l	equ	0xFD9
  4265                           status	equ	0xFD8
  4266                           
  4267 ;; *************** function ___awmod *****************
  4268 ;; Defined at:
  4269 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  dividend        2   18[COMRAM] int 
  4272 ;;  divisor         2   20[COMRAM] int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  sign            1   23[COMRAM] unsigned char 
  4275 ;;  counter         1   22[COMRAM] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2   18[COMRAM] int 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4285 ;;      Params:         4       0       0       0       0       0       0
  4286 ;;      Locals:         2       0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0
  4288 ;;      Totals:         6       0       0       0       0       0       0
  4289 ;;Total ram usage:        6 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_draw_value
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text29
  4300  00107A                     __ptext29:
  4301                           	opt stack 0
  4302  00107A                     ___awmod:
  4303                           	opt stack 28
  4304                           
  4305                           ;incstack = 0
  4306  00107A  0E00               	movlw	0
  4307  00107C  6E18               	movwf	___awmod@sign,c
  4308  00107E  AE14               	btfss	___awmod@dividend+1,7,c
  4309  001080  D006               	goto	l380
  4310  001082  6C13               	negf	___awmod@dividend,c
  4311  001084  1E14               	comf	___awmod@dividend+1,f,c
  4312  001086  B0D8               	btfsc	status,0,c
  4313  001088  2A14               	incf	___awmod@dividend+1,f,c
  4314  00108A  0E01               	movlw	1
  4315  00108C  6E18               	movwf	___awmod@sign,c
  4316  00108E                     l380:
  4317  00108E  AE16               	btfss	___awmod@divisor+1,7,c
  4318  001090  D004               	goto	l381
  4319  001092  6C15               	negf	___awmod@divisor,c
  4320  001094  1E16               	comf	___awmod@divisor+1,f,c
  4321  001096  B0D8               	btfsc	status,0,c
  4322  001098  2A16               	incf	___awmod@divisor+1,f,c
  4323  00109A                     l381:
  4324  00109A  5015               	movf	___awmod@divisor,w,c
  4325  00109C  1016               	iorwf	___awmod@divisor+1,w,c
  4326  00109E  B4D8               	btfsc	status,2,c
  4327  0010A0  D018               	goto	l388
  4328  0010A2  0E01               	movlw	1
  4329  0010A4  6E17               	movwf	___awmod@counter,c
  4330  0010A6  D004               	goto	l383
  4331  0010A8  90D8               	bcf	status,0,c
  4332  0010AA  3615               	rlcf	___awmod@divisor,f,c
  4333  0010AC  3616               	rlcf	___awmod@divisor+1,f,c
  4334  0010AE  2A17               	incf	___awmod@counter,f,c
  4335  0010B0                     l383:
  4336  0010B0  AE16               	btfss	___awmod@divisor+1,7,c
  4337  0010B2  D7FA               	goto	l384
  4338  0010B4                     u2570:
  4339  0010B4  5015               	movf	___awmod@divisor,w,c
  4340  0010B6  5C13               	subwf	___awmod@dividend,w,c
  4341  0010B8  5016               	movf	___awmod@divisor+1,w,c
  4342  0010BA  5814               	subwfb	___awmod@dividend+1,w,c
  4343  0010BC  A0D8               	btfss	status,0,c
  4344  0010BE  D004               	goto	l387
  4345  0010C0  5015               	movf	___awmod@divisor,w,c
  4346  0010C2  5E13               	subwf	___awmod@dividend,f,c
  4347  0010C4  5016               	movf	___awmod@divisor+1,w,c
  4348  0010C6  5A14               	subwfb	___awmod@dividend+1,f,c
  4349  0010C8                     l387:
  4350  0010C8  90D8               	bcf	status,0,c
  4351  0010CA  3216               	rrcf	___awmod@divisor+1,f,c
  4352  0010CC  3215               	rrcf	___awmod@divisor,f,c
  4353  0010CE  2E17               	decfsz	___awmod@counter,f,c
  4354  0010D0  D7F1               	goto	u2570
  4355  0010D2                     l388:
  4356  0010D2  5018               	movf	___awmod@sign,w,c
  4357  0010D4  B4D8               	btfsc	status,2,c
  4358  0010D6  D004               	goto	l389
  4359  0010D8  6C13               	negf	___awmod@dividend,c
  4360  0010DA  1E14               	comf	___awmod@dividend+1,f,c
  4361  0010DC  B0D8               	btfsc	status,0,c
  4362  0010DE  2A14               	incf	___awmod@dividend+1,f,c
  4363  0010E0                     l389:
  4364  0010E0  C013  F013         	movff	___awmod@dividend,?___awmod
  4365  0010E4  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  4366  0010E8  0012               	return	
  4367  0010EA                     __end_of___awmod:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function ___awdiv *****************
  4385 ;; Defined at:
  4386 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dividend        2   18[COMRAM] int 
  4389 ;;  divisor         2   20[COMRAM] int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  quotient        2   24[COMRAM] int 
  4392 ;;  sign            1   23[COMRAM] unsigned char 
  4393 ;;  counter         1   22[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2   18[COMRAM] int 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4403 ;;      Params:         4       0       0       0       0       0       0
  4404 ;;      Locals:         4       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0
  4406 ;;      Totals:         8       0       0       0       0       0       0
  4407 ;;Total ram usage:        8 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_draw_value
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text30
  4418  000F7E                     __ptext30:
  4419                           	opt stack 0
  4420  000F7E                     ___awdiv:
  4421                           	opt stack 28
  4422                           
  4423                           ;incstack = 0
  4424  000F7E  0E00               	movlw	0
  4425  000F80  6E18               	movwf	___awdiv@sign,c
  4426  000F82  AE16               	btfss	___awdiv@divisor+1,7,c
  4427  000F84  D006               	goto	l367
  4428  000F86  6C15               	negf	___awdiv@divisor,c
  4429  000F88  1E16               	comf	___awdiv@divisor+1,f,c
  4430  000F8A  B0D8               	btfsc	status,0,c
  4431  000F8C  2A16               	incf	___awdiv@divisor+1,f,c
  4432  000F8E  0E01               	movlw	1
  4433  000F90  6E18               	movwf	___awdiv@sign,c
  4434  000F92                     l367:
  4435  000F92  AE14               	btfss	___awdiv@dividend+1,7,c
  4436  000F94  D006               	goto	l368
  4437  000F96  6C13               	negf	___awdiv@dividend,c
  4438  000F98  1E14               	comf	___awdiv@dividend+1,f,c
  4439  000F9A  B0D8               	btfsc	status,0,c
  4440  000F9C  2A14               	incf	___awdiv@dividend+1,f,c
  4441  000F9E  0E01               	movlw	1
  4442  000FA0  1A18               	xorwf	___awdiv@sign,f,c
  4443  000FA2                     l368:
  4444  000FA2  0E00               	movlw	0
  4445  000FA4  6E1A               	movwf	___awdiv@quotient+1,c
  4446  000FA6  0E00               	movlw	0
  4447  000FA8  6E19               	movwf	___awdiv@quotient,c
  4448  000FAA  5015               	movf	___awdiv@divisor,w,c
  4449  000FAC  1016               	iorwf	___awdiv@divisor+1,w,c
  4450  000FAE  B4D8               	btfsc	status,2,c
  4451  000FB0  D01C               	goto	l375
  4452  000FB2  0E01               	movlw	1
  4453  000FB4  6E17               	movwf	___awdiv@counter,c
  4454  000FB6  D004               	goto	l370
  4455  000FB8  90D8               	bcf	status,0,c
  4456  000FBA  3615               	rlcf	___awdiv@divisor,f,c
  4457  000FBC  3616               	rlcf	___awdiv@divisor+1,f,c
  4458  000FBE  2A17               	incf	___awdiv@counter,f,c
  4459  000FC0                     l370:
  4460  000FC0  AE16               	btfss	___awdiv@divisor+1,7,c
  4461  000FC2  D7FA               	goto	l371
  4462  000FC4                     u2510:
  4463  000FC4  90D8               	bcf	status,0,c
  4464  000FC6  3619               	rlcf	___awdiv@quotient,f,c
  4465  000FC8  361A               	rlcf	___awdiv@quotient+1,f,c
  4466  000FCA  5015               	movf	___awdiv@divisor,w,c
  4467  000FCC  5C13               	subwf	___awdiv@dividend,w,c
  4468  000FCE  5016               	movf	___awdiv@divisor+1,w,c
  4469  000FD0  5814               	subwfb	___awdiv@dividend+1,w,c
  4470  000FD2  A0D8               	btfss	status,0,c
  4471  000FD4  D005               	goto	l374
  4472  000FD6  5015               	movf	___awdiv@divisor,w,c
  4473  000FD8  5E13               	subwf	___awdiv@dividend,f,c
  4474  000FDA  5016               	movf	___awdiv@divisor+1,w,c
  4475  000FDC  5A14               	subwfb	___awdiv@dividend+1,f,c
  4476  000FDE  8019               	bsf	___awdiv@quotient,0,c
  4477  000FE0                     l374:
  4478  000FE0  90D8               	bcf	status,0,c
  4479  000FE2  3216               	rrcf	___awdiv@divisor+1,f,c
  4480  000FE4  3215               	rrcf	___awdiv@divisor,f,c
  4481  000FE6  2E17               	decfsz	___awdiv@counter,f,c
  4482  000FE8  D7ED               	goto	u2510
  4483  000FEA                     l375:
  4484  000FEA  5018               	movf	___awdiv@sign,w,c
  4485  000FEC  B4D8               	btfsc	status,2,c
  4486  000FEE  D004               	goto	l376
  4487  000FF0  6C19               	negf	___awdiv@quotient,c
  4488  000FF2  1E1A               	comf	___awdiv@quotient+1,f,c
  4489  000FF4  B0D8               	btfsc	status,0,c
  4490  000FF6  2A1A               	incf	___awdiv@quotient+1,f,c
  4491  000FF8                     l376:
  4492  000FF8  C019  F013         	movff	___awdiv@quotient,?___awdiv
  4493  000FFC  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  4494  001000  0012               	return	
  4495  001002                     __end_of___awdiv:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           intcon	equ	0xFF2
  4504                           postinc0	equ	0xFEE
  4505                           wreg	equ	0xFE8
  4506                           indf2	equ	0xFDF
  4507                           postinc2	equ	0xFDE
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _isr *****************
  4513 ;; Defined at:
  4514 ;;		line 579 in file "mane.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4528 ;;      Params:         0       0       0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0
  4530 ;;      Temps:         18       0       0       0       0       0       0
  4531 ;;      Totals:        18       0       0       0       0       0       0
  4532 ;;Total ram usage:       18 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		Interrupt level 2
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	intcode
  4542  000008                     __pintcode:
  4543                           	opt stack 0
  4544  000008                     _isr:
  4545                           	opt stack 25
  4546                           
  4547                           ;incstack = 0
  4548  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4549  00000A  CFFA F001          	movff	pclath,??_isr
  4550  00000E  CFFB F002          	movff	pclatu,??_isr+1
  4551  000012  CFE9 F003          	movff	fsr0l,??_isr+2
  4552  000016  CFEA F004          	movff	fsr0h,??_isr+3
  4553  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
  4554  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
  4555  000022  CFD9 F007          	movff	fsr2l,??_isr+6
  4556  000026  CFDA F008          	movff	fsr2h,??_isr+7
  4557  00002A  CFF3 F009          	movff	prodl,??_isr+8
  4558  00002E  CFF4 F00A          	movff	prodh,??_isr+9
  4559  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
  4560  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
  4561  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
  4562  00003E  CFF5 F00E          	movff	tablat,??_isr+13
  4563  000042  C04D  F00F         	movff	btemp,??_isr+14
  4564  000046  C04E  F010         	movff	btemp+1,??_isr+15
  4565  00004A  C04F  F011         	movff	btemp+2,??_isr+16
  4566  00004E  C050  F012         	movff	btemp+3,??_isr+17
  4567  000052  D005               	goto	i2l1501
  4568  000054                     i2l196:
  4569                           
  4570                           ;mane.c: 583: {
  4571                           ;mane.c: 584: flags.interrupt_complete = 1;
  4572  000054  804B               	bsf	_flags,0,c
  4573                           
  4574                           ;mane.c: 585: if(TMR2IF)
  4575  000056  A29E               	btfss	3998,1,c	;volatile
  4576  000058  D003               	goto	i2l197
  4577                           
  4578                           ;mane.c: 586: {
  4579                           ;mane.c: 587: TMR2IF = 0;
  4580  00005A  929E               	bcf	3998,1,c	;volatile
  4581                           
  4582                           ;mane.c: 588: tick++;
  4583  00005C  2A4C               	incf	_tick,f,c
  4584  00005E                     i2l1501:
  4585                           
  4586                           ;mane.c: 589: flags.interrupt_complete = 0;
  4587  00005E  904B               	bcf	_flags,0,c
  4588  000060                     i2l197:
  4589  000060  A04B               	btfss	_flags,0,c
  4590  000062  D7F8               	goto	i2l196
  4591  000064  C012  F050         	movff	??_isr+17,btemp+3
  4592  000068  C011  F04F         	movff	??_isr+16,btemp+2
  4593  00006C  C010  F04E         	movff	??_isr+15,btemp+1
  4594  000070  C00F  F04D         	movff	??_isr+14,btemp
  4595  000074  C00E  FFF5         	movff	??_isr+13,tablat
  4596  000078  C00D  FFF8         	movff	??_isr+12,tblptru
  4597  00007C  C00C  FFF7         	movff	??_isr+11,tblptrh
  4598  000080  C00B  FFF6         	movff	??_isr+10,tblptrl
  4599  000084  C00A  FFF4         	movff	??_isr+9,prodh
  4600  000088  C009  FFF3         	movff	??_isr+8,prodl
  4601  00008C  C008  FFDA         	movff	??_isr+7,fsr2h
  4602  000090  C007  FFD9         	movff	??_isr+6,fsr2l
  4603  000094  C006  FFE2         	movff	??_isr+5,fsr1h
  4604  000098  C005  FFE1         	movff	??_isr+4,fsr1l
  4605  00009C  C004  FFEA         	movff	??_isr+3,fsr0h
  4606  0000A0  C003  FFE9         	movff	??_isr+2,fsr0l
  4607  0000A4  C002  FFFB         	movff	??_isr+1,pclatu
  4608  0000A8  C001  FFFA         	movff	??_isr,pclath
  4609  0000AC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4610  0000AE  0011               	retfie		f
  4611  0000B0                     __end_of_isr:
  4612                           	opt stack 0
  4613                           pclatu	equ	0xFFB
  4614                           pclath	equ	0xFFA
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           intcon	equ	0xFF2
  4622                           postinc0	equ	0xFEE
  4623                           fsr0h	equ	0xFEA
  4624                           fsr0l	equ	0xFE9
  4625                           wreg	equ	0xFE8
  4626                           fsr1h	equ	0xFE2
  4627                           fsr1l	equ	0xFE1
  4628                           indf2	equ	0xFDF
  4629                           postinc2	equ	0xFDE
  4630                           fsr2h	equ	0xFDA
  4631                           fsr2l	equ	0xFD9
  4632                           status	equ	0xFD8
  4633                           pclatu	equ	0xFFB
  4634                           pclath	equ	0xFFA
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           postinc0	equ	0xFEE
  4643                           fsr0h	equ	0xFEA
  4644                           fsr0l	equ	0xFE9
  4645                           wreg	equ	0xFE8
  4646                           fsr1h	equ	0xFE2
  4647                           fsr1l	equ	0xFE1
  4648                           indf2	equ	0xFDF
  4649                           postinc2	equ	0xFDE
  4650                           fsr2h	equ	0xFDA
  4651                           fsr2l	equ	0xFD9
  4652                           status	equ	0xFD8
  4653                           
  4654                           	psect	rparam
  4655  0000                     pclatu	equ	0xFFB
  4656                           pclath	equ	0xFFA
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           prodh	equ	0xFF4
  4662                           prodl	equ	0xFF3
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           fsr0h	equ	0xFEA
  4666                           fsr0l	equ	0xFE9
  4667                           wreg	equ	0xFE8
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           indf2	equ	0xFDF
  4671                           postinc2	equ	0xFDE
  4672                           fsr2h	equ	0xFDA
  4673                           fsr2l	equ	0xFD9
  4674                           status	equ	0xFD8
  4675                           
  4676                           	psect	temp
  4677  00004D                     btemp:
  4678                           	opt stack 0
  4679  00004D                     	ds	1
  4680  0000                     int$flags	set	btemp
  4681  0000                     wtemp6	set	btemp+1
  4682                           pclatu	equ	0xFFB
  4683                           pclath	equ	0xFFA
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           intcon	equ	0xFF2
  4691                           postinc0	equ	0xFEE
  4692                           fsr0h	equ	0xFEA
  4693                           fsr0l	equ	0xFE9
  4694                           wreg	equ	0xFE8
  4695                           fsr1h	equ	0xFE2
  4696                           fsr1l	equ	0xFE1
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8


Data Sizes:
    Strings     71
    Constant    40
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     26      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    init_aht20@ptr	PTR struct . size(2) Largest target is 6
		 -> sensor(BANK0[6]), 

    read_aht20@ptr	PTR struct . size(2) Largest target is 6
		 -> sensor(BANK0[6]), 

    print_text@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_6(CODE[2]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[11]), 
		 -> STR_2(CODE[16]), STR_1(CODE[28]), 


Critical Paths under _main in COMRAM

    _main->_draw_value
    _main->_read_aht20
    _read_aht20->___ftadd
    ___ftdiv->___altoft
    ___altoft->___lmul
    _print_text->_send_uart
    _print_number->___ftadd
    _print_digit->___lwdiv
    _i2c_write_device2->_i2c_write
    _aht20_status->_i2c_read_device2
    _i2c_read_device2->_i2c_read
    _i2c_write->_set_clock
    _i2c_write->_set_data
    _i2c_stop->_set_clock
    _i2c_stop->_set_data
    _i2c_start->_set_clock
    _i2c_start->_set_data
    _i2c_read->_set_clock
    _i2c_read->_set_data
    _draw_value->___ftadd
    ___fttol->___ftadd
    ___ftadd->___ftdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_print_number
    _read_aht20->___ftadd
    _print_number->___fttol
    _draw_value->___fttol
    ___fttol->___ftadd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31211
                            ___ftadd
                            ___fttol
                         _draw_value
                         _flush_uart
                        _handle_uart
                         _init_aht20
                       _print_number
                         _print_text
                         _read_aht20
 ---------------------------------------------------------------------------------
 (1) _read_aht20                                           7     5      2   14631
                                             58 COMRAM     1     1      0
                                              9 BANK0      6     4      2
                           ___altoft
                            ___ftadd
                            ___ftdiv
                             ___lmul
                       _aht20_status
                   _i2c_read_device2
                  _i2c_write_device2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3753
                                             40 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3217
                                             30 COMRAM    10     6      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _print_text                                           2     0      2     523
                                             19 COMRAM     2     0      2
                          _send_uart
 ---------------------------------------------------------------------------------
 (1) _print_number                                         2     0      2    2056
                                             24 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___fttol (ARG)
                            ___lwmod
                        _print_digit
                          _send_uart
 ---------------------------------------------------------------------------------
 (2) _print_digit                                          2     0      2    1397
                                             25 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                          _send_uart
 ---------------------------------------------------------------------------------
 (2) _send_uart                                            1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_aht20                                           3     1      2    1238
                                             32 COMRAM     3     1      2
                       _aht20_status
                  _i2c_write_device2
 ---------------------------------------------------------------------------------
 (2) _i2c_write_device2                                    2     2      0     393
                                             22 COMRAM     2     2      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _aht20_status                                         0     0      0     755
                   _i2c_read_device2
 ---------------------------------------------------------------------------------
 (2) _i2c_read_device2                                     2     2      0     755
                                             30 COMRAM     2     2      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            3     3      0     170
                                             19 COMRAM     3     3      0
                          _get_clock
                           _get_data
                          _set_clock
                           _set_data
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0      62
                          _set_clock
                           _set_data
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0      62
                          _set_clock
                           _set_data
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            11    11      0     331
                                             19 COMRAM    11    11      0
                          _get_clock
                           _get_data
                          _set_clock
                           _set_data
 ---------------------------------------------------------------------------------
 (4) _set_data                                             1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_clock                                            1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _get_clock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flush_uart                                           0     0      0       0
                        _handle_uart
 ---------------------------------------------------------------------------------
 (1) _handle_uart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _draw_value                                           1     1      0    7244
                                             58 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     641
                                              9 BANK0     15    11      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4878
                                             55 COMRAM     3     3      0
                                              0 BANK0      9     3      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2833
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___altoft (ARG)
       ___ftpack
       ___lmul (ARG)
     ___ftdiv (ARG)
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
     ___ftpack (ARG)
     ___lmul (ARG)
   ___fttol
     ___ftadd (ARG)
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
   _draw_value
     ___awdiv
     ___awmod
     ___ftadd
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
     ___fttol
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
   _flush_uart
     _handle_uart
   _handle_uart
   _init_aht20
     _aht20_status
       _i2c_read_device2
         _i2c_read
           _get_clock
           _get_data
           _set_clock
           _set_data
         _i2c_start
           _set_clock
           _set_data
         _i2c_stop
           _set_clock
           _set_data
         _i2c_write
           _get_clock
           _get_data
           _set_clock
           _set_data
     _i2c_write_device2
       _i2c_start
         _set_clock
         _set_data
       _i2c_stop
         _set_clock
         _set_data
       _i2c_write
         _get_clock
         _get_data
         _set_clock
         _set_data
   _print_number
     ___ftadd (ARG)
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
     ___fttol (ARG)
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___lmul (ARG)
           ___ftpack (ARG)
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
     ___lwmod (ARG)
     _print_digit (ARG)
       ___lwdiv
       ___lwmod
       _send_uart
     _send_uart (ARG)
   _print_text
     _send_uart
   _read_aht20
     ___altoft
       ___ftpack
       ___lmul (ARG)
     ___ftadd
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___lmul (ARG)
         ___ftpack (ARG)
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
         ___lmul (ARG)
       ___ftpack (ARG)
       ___lmul (ARG)
     ___lmul
     _aht20_status
       _i2c_read_device2
         _i2c_read
           _get_clock
           _get_data
           _set_clock
           _set_data
         _i2c_start
           _set_clock
           _set_data
         _i2c_stop
           _set_clock
           _set_data
         _i2c_write
           _get_clock
           _get_data
           _set_clock
           _set_data
     _i2c_read_device2
       _i2c_read
         _get_clock
         _get_data
         _set_clock
         _set_data
       _i2c_start
         _set_clock
         _set_data
       _i2c_stop
         _set_clock
         _set_data
       _i2c_write
         _get_clock
         _get_data
         _set_clock
         _set_data
     _i2c_write_device2
       _i2c_start
         _set_clock
         _set_data
       _i2c_stop
         _set_clock
         _set_data
       _i2c_write
         _get_clock
         _get_data
         _set_clock
         _set_data

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1A      62       4       61.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE       9        0.0%
DATA                 0      0      AE      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Sep 23 05:43:02 2022

              ___altoft@exp 0027               ___altoft@sign 0028                          l74 1444  
                        l75 1440                          l98 1390                          l99 137C  
              ___awdiv@sign 0018                 __CFG_BOR$ON 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
               __CFG_OSC$HS 000000                ___ftadd@exp1 00B0                ___ftadd@exp2 00AF  
              ___ftadd@sign 00AE                 __CFG_WDT$ON 000000                         l121 11B4  
                       l130 0E52                         l122 11BA                         l131 0E68  
                       l211 10FA                         l124 11D4                         l212 110E  
                       l134 0E72                         l119 11A8                         l136 0ED8  
                       l129 0EEC                         l137 0EDE                         l154 129E  
                       l155 1288                         l163 12E6                         l420 0E20  
                       l164 12CE                         l421 0E16                         l173 0832  
                       l414 0DC4                         l415 0DBA                         l417 0DF8  
                       l370 0FC0                         l418 0DE2                         l522 0C88  
                       l514 0BEC                         l186 0A1A                         l371 0FB8  
                       l523 0C7C                         l179 13C0                         l603 120A  
                       l380 108E                         l460 0742                         l516 0C64  
                       l604 1202                         l284 1030                         l381 109A  
                       l445 06C6                         l525 0CA4                         l517 0C54  
                       l613 1254                         l285 1024                         l374 0FE0  
                       l454 0756                         l614 124C                         l375 0FEA  
                       l367 0F92                         l383 10B0                         l471 07AE  
                       l607 122A                         l376 0FF8                         l368 0FA2  
                       l384 10A8                         l472 07CA                         l608 1234  
                       l480 0D06                         l473 07FA                         l449 06F0  
                       l617 126C                         l481 0D44                         l618 1276  
                       l482 0D6A                         l387 10C8                         l459 074C  
                       l388 10D2                         l468 078A                         l389 10E0  
                       l469 0780                         l478 0CDE                         _GIE 007F97  
              __CFG_CPB$OFF 000000                         _PR2 000FCB                __CFG_CPD$OFF 000000  
                       _isr 0008                __CFG_BORV$25 000000                ___awmod@sign 0018  
                       prod 000FF3                         wreg 000FE8                __CFG_LVP$OFF 000000  
              ___ftdiv@cntr 0032                ___ftdiv@sign 0037                        l2223 0E60  
                      l2193 11A0                        ?_isr 0001                        STR_1 0629  
                      STR_2 0645                        STR_3 0655                        STR_4 066A  
                      STR_5 0660                        STR_6 0653                        u2010 11CE  
                      u2100 0DAC                        u2050 0E8C                        u1250 120E  
                      u2140 0E2A                        u1340 1154                        u2221 0684  
                      u2231 0698                        _LATC 000F8B                        u2320 0720  
                      u1280 1258                        _LATD 000F8C                        u2260 06B8  
                      u2510 0FC4                        u2431 0CC6                        u2360 075E  
                      u2601 0BD0                        u2290 06E2                        u2451 0CEE  
                      u2620 0C0A                        u2390 0792                        u2625 0C02  
                      u2570 10B4                        u1930 13D6                        u2660 0C8E  
                      u1950 13F8                        u1945 13D8                        u1970 1454  
                      _PEIE 007F96                        u1980 1460                        u1965 13FA  
                      u2695 0862                        _TXIF 007CF4                __CFG_PWRT$ON 000000  
              __CFG_STVR$ON 000000                        _main 09AC                ___ftpack@arg 0013  
              ___ftpack@exp 0016                        _tick 004C                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr2h 000FDA                        fsr0l 000FE9  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 004D                        prodh 000FF4                        prodl 000FF3  
                      start 00B0                  i2c_write@i 0016  __size_of_i2c_write_device2 0038  
              ___param_bank 000000                ___fttol@exp1 00BF                ___fttol@lval 00BB  
                     ??_isr 0001               __CFG_OSCS$OFF 000000                       ?_main 0001  
           __end_of___awdiv 1002             __end_of___ftadd 0820             __end_of___awmod 10EA  
           __end_of___ftdiv 0D9C             ___awdiv@divisor 0015             __end_of___fttol 0CB6  
                     _T2CON 000FCA                       _LATA4 007C4C                       _LATA5 007C4D  
           __end_of___lwdiv 123E             __end_of___lwmod 1280                       i2l196 0054  
                     i2l197 0060             ___awdiv@counter 0017                       _RCSTA 000FAB  
                     _SPBRG 000FAF                       _TRISC 000F94                       _TRISD 000F95  
                     _TXREG 000FAD                       _TXSTA 000FAC               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000         ___lmul@multiplicand 0017  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _flags 004B                       _force 0044               ___ftpack@sign 0017  
                     pclath 000FFA                       tablat 000FF5                       status 000FD8  
                     wtemp6 004E                  _i2c_buffer 003C             __initialization 1350  
              __end_of_main 0AB8            __end_of_i2c_read 0EF6            __end_of_i2c_stop 143E  
        i2c_write_device2@i 0018                      ??_main 003C               ___fttol@sign1 00BA  
             __activetblptr 000001                      _ADCON1 000FC1        __size_of_handle_uart 0030  
          __end_of___altoft 107A            ___awdiv@dividend 0013             draw_value@value 003B  
          __end_of___ftpack 0E4A                      i2l1501 005E                      _TMR2IE 007CE9  
            __CFG_WDTPS$128 000000                      _TMR2IF 007CF1                      _TRISA4 007C94  
                    _TRISA5 007C95          __size_of_i2c_start 001A          __size_of_i2c_write 0056  
          __end_of_get_data 1458                      ___lmul 10EA                   ??___awdiv 0017  
                 ??___ftadd 0038                   ??___awmod 0017                   ??___ftdiv 002F  
                 ??___fttol 00B5   __size_of_i2c_read_device2 003C                   ??___lwdiv 0017  
                 ??___lwmod 0017                      clear_0 1356                      clear_1 1362  
          ___awdiv@quotient 0019             ___awmod@divisor 0015                      _sensor 00A2  
                    _number 0046             ___awmod@counter 0017                 read_aht20@x 00B3  
          __end_of_set_data 13EE                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ?_print_digit 001A  
              i2c_write@ack 0014                  __accesstop 0060     __end_of__initialization 1368  
                ___altoft@c 001F                  ___ftadd@f1 00A8                  ___ftadd@f2 00AB  
             ___rparam_used 000001                  ___ftdiv@f1 0029                  ___ftdiv@f2 002C  
                ___ftdiv@f3 0033                  ___fttol@f1 00B1              __pcstackCOMRAM 0001  
     i2c_read_device2@bytes 001F           __end_of_i2c_start 142A           __end_of_i2c_write 11EC  
        __size_of_get_clock 000C                  __pbssBANK0 0060                   ?_i2c_read 0001  
                 ?_i2c_stop 0001                     ?___lmul 0013                   ?___altoft 001F  
        __size_of_send_uart 002C              ___lmul@product 001B                   ?___ftpack 0013  
        __size_of_set_clock 0022               i2c_read@bytes 001C               i2c_read@value 001B  
            set_clock@value 0013                   ?_get_data 0001                  _led_masks1 0615  
                _led_masks2 0601                  _draw_value 0AB8                  ??_i2c_read 0014  
                ??_i2c_stop 0014                     __Hparam 0000                     __Lparam 0000  
                 ?_set_data 0001           __end_of_get_clock 1464                     ___awdiv 0F7E  
           __size_of___lmul 0056                  _flush_uart 143E                     ___ftadd 0672  
                   ___awmod 107A                     ___ftdiv 0CB6            _i2c_read_device2 1280  
                _init_aht20 13A4                     ___fttol 0BBE                     ___lwdiv 11EC  
                   ___lwmod 123E                __psmallconst 0600                  ??___altoft 0023  
                _read_aht20 0820                     __pcinit 1350                  ??___ftpack 0018  
                   __ramtop 0600                     __ptext0 09AC                     __ptext1 0820  
                   __ptext2 10EA                     __ptext3 0CB6                     __ptext4 1002  
                   __ptext5 137A                     __ptext6 0EF6                     __ptext7 1140  
                   __ptext8 1324                     __ptext9 123E                __size_of_isr 00A8  
          ___awmod@dividend 0013                  ??_get_data 0013        end_of_initialization 1368  
         __end_of_send_uart 1350           __end_of_set_clock 1410        __size_of_print_digit 0056  
                ??_set_data 0013                     postinc0 000FEE                     postinc2 000FDE  
                 _PORTAbits 000F80                  _print_text 137A               ??_handle_uart 0013  
             ?_print_number 00C0                 ?_draw_value 0001                 ___ftdiv@exp 0036  
                 i2c_read@i 001E                   i2c_read@j 001D               ?_aht20_status 0001  
               print_text@s 0014                 ?_flush_uart 0001                 ?_init_aht20 0021  
            __end_of___lmul 1140                 ?_read_aht20 00B1         start_initialization 1350  
            ??_print_number 003B                   _i2c_start 1410                 __end_of_isr 00B0  
                 _i2c_write 1196         __end_of_handle_uart 1324              ??_aht20_status 0021  
      i2c_write_device2@len 0017           __size_of_i2c_read 00AC           __size_of_i2c_stop 0014  
    print_number@number_arg 00C0                    ??___lmul 001B         __size_of_draw_value 0106  
         __size_of___altoft 0078           __size_of___ftpack 00AE                 ?_print_text 0014  
               __pbssCOMRAM 003C               __pcstackBANK0 00A8                  ?_i2c_start 0001  
                ?_i2c_write 0001    __end_of_i2c_read_device2 12BC               set_data@value 0013  
       __size_of_flush_uart 000E         __size_of_init_aht20 0028           __size_of_get_data 000C  
       __size_of_read_aht20 018C            ___lwdiv@dividend 0013                   __pintcode 0008  
                  ?___awdiv 0013                    ?___ftadd 00A8                    ?___awmod 0013  
                  ?___ftdiv 0029           __size_of_set_data 0022                    ?___fttol 00B1  
                  ?___lwdiv 0013                    ?___lwmod 0013                   _get_clock 1458  
                 _led_mask0 00A1                   _led_mask1 00A0                 __smallconst 0600  
                send_uart@c 0013                 _handle_uart 12F4            ___lwdiv@quotient 0017  
            _uart_position1 0049              _uart_position2 0048                   _send_uart 1324  
       __size_of_print_text 002A                   _set_clock 13EE        __end_of_print_number 0F7E  
                 _uart_size 004A                  ?_get_clock 0001        __end_of_aht20_status 146E  
               ??_i2c_start 0014                 ??_i2c_write 0014           ___lmul@multiplier 0013  
              ??_draw_value 003B               ??_print_digit 001C                    _i2c_read 0E4A  
                  _i2c_stop 142A                  ?_send_uart 0001                    __Hrparam 0000  
                ?_set_clock 0001                    __Lrparam 0000                __Lsmallconst 0600  
             init_aht20@ptr 0021                ??_flush_uart 0013                ??_init_aht20 0023  
              ??_read_aht20 003B            __size_of___awdiv 0084            __size_of___ftadd 01AE  
          __size_of___awmod 0070            __size_of___ftdiv 00E6                    ___altoft 1002  
          __size_of___fttol 00F8            __size_of___lwdiv 0052          __end_of_led_masks1 0629  
        __end_of_led_masks2 0615            __size_of___lwmod 0042                    ___ftpack 0D9C  
        __end_of_draw_value 0BBE             ___lwdiv@divisor 0015             ___lwdiv@counter 0019  
                  __ptext10 11EC                    __ptext11 13A4                    __ptext20 13EE  
                  __ptext12 12BC                    __ptext21 144C                    __ptext13 1464  
                  __ptext30 0F7E                    __ptext22 1458                    __ptext14 1280  
                  __ptext23 143E                    __ptext15 1196                    __ptext24 12F4  
                  __ptext16 142A                    __ptext25 0AB8                    __ptext17 1410  
                  __ptext26 0BBE                    __ptext18 0E4A                    __ptext27 0672  
                  __ptext19 13CC                    __ptext28 0D9C                    __ptext29 107A  
                  _get_data 144C          __end_of_flush_uart 144C          __end_of_init_aht20 13CC  
             __size_of_main 010C          __end_of_read_aht20 09AC         __end_of_print_digit 1196  
                  _set_data 13CC               read_aht20@ptr 00B1                    int$flags 004D  
         _i2c_write_device2 12BC                 ??_get_clock 0013          ?_i2c_write_device2 0001  
              ??_print_text 0016         ??_i2c_write_device2 0017                    intlevel2 0000  
         ?_i2c_read_device2 0001            ___lwmod@dividend 0013          ??_i2c_read_device2 001F  
     __size_of_print_number 0088                 ??_send_uart 0013                 ??_set_clock 0013  
        __end_of_print_text 13A4   __end_of_i2c_write_device2 12F4       __size_of_aht20_status 000A  
          print_digit@place 001A           i2c_read_device2@i 0020                 _uart_buffer 0060  
           ___lwmod@divisor 0015                ?_handle_uart 0001             ___lwmod@counter 0017  
              _print_number 0EF6                 _print_digit 1140                _aht20_status 1464  
            i2c_write@value 0015  
